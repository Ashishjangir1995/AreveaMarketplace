{
	"id": "5e63c32e2b66224d01d2244352d9852b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.7.0) \r\n\r\npragma solidity ^0.8.4;\r\n\r\nimport \"./External/Context.sol\";\r\nimport \"./External/ERC165.sol\";\r\nimport \"./External/IERC1155.sol\";\r\nimport \"./External/SafeMath.sol\";\r\nimport \"./External/Address.sol\";\r\nimport \"./External/Strings.sol\";\r\nimport \"./External/EnumerableMap.sol\";\r\nimport \"./External/IERC1155MetadataURI.sol\";\r\nimport \"./External/IERC1155Receiver.sol\";\r\n\r\ncontract ERC1155 is Context, ERC165,IERC1155{\r\n\r\n    using SafeMath for uint256;\r\n    using Address for address;\r\n    using Strings for uint256;\r\n    using EnumerableMap for EnumerableMap.UintToAddressMap;\r\n\r\n    // Mapping from token ID to account balances\r\n    mapping (uint256 => address) private creators;\r\n    mapping (uint256 => uint256) private _royaltyFee;\r\n    mapping (uint256 => mapping(address => uint256)) private _balances;\r\n\r\n    // Mapping from account to operator approvals\r\n    mapping (address => mapping(address => bool)) private _operatorApprovals;\r\n    string public tokenURIPrefix = \"\";\r\n\r\n    // Optional mapping for token URIs\r\n    mapping(uint256 => string) private _tokenURIs;\r\n\r\n    EnumerableMap.UintToAddressMap private _tokenOwners;\r\n\r\n    string private _name;\r\n\r\n    string private _symbol;\r\n\r\n    bytes4 private constant _INTERFACE_ID_ERC1155 = 0xd9b67a26;\r\n\r\n    bytes4 private constant _INTERFACE_ID_ERC1155_METADATA_URI = 0x0e89341c;\r\n\r\n    constructor (string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n\r\n        _registerInterface(_INTERFACE_ID_ERC1155);\r\n        _registerInterface(_INTERFACE_ID_ERC1155_METADATA_URI);\r\n    }\r\n\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n        * @dev Internal function to set the token URI for a given token.\r\n        * Reverts if the token ID does not exist.\r\n        * @param tokenId uint256 ID of the token to set its URI\r\n        * @param uri string URI to assign\r\n    */    \r\n\r\n    function _setTokenURI(uint256 tokenId, string memory uri) internal {\r\n        _tokenURIs[tokenId] = uri;\r\n    }\r\n\r\n    /**\r\n        @notice Get the royalty associated with tokenID.\r\n        @param tokenId     ID of the Token.\r\n        @return        royaltyFee of given ID.\r\n     */\r\n\r\n    function royaltyFee(uint256 tokenId) public view override returns(uint256) {\r\n        return _royaltyFee[tokenId];\r\n    }\r\n\r\n    /**\r\n        @notice Get the creator of given tokenID.\r\n        @param tokenId     ID of the Token.\r\n        @return        creator of given ID.\r\n     */    \r\n\r\n    function getCreator(uint256 tokenId) public view virtual override returns(address) {\r\n        return creators[tokenId];\r\n    }\r\n\r\n    /**\r\n        * @dev Internal function to set the token URI for all the tokens.\r\n        * @param _tokenURIPrefix string memory _tokenURIPrefix of the tokens.\r\n    */   \r\n\r\n    function _setTokenURIPrefix(string memory _tokenURIPrefix) internal {\r\n        tokenURIPrefix = _tokenURIPrefix;\r\n        emit tokenBaseURI(_tokenURIPrefix);\r\n    }\r\n\r\n    /**\r\n        * @dev Returns an URI for a given token ID.\r\n        * Throws if the token ID does not exist. May return an empty string.\r\n        * @param tokenId uint256 ID of the token to query\r\n    */    \r\n\r\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\r\n        require(_exists(tokenId), \"ERC1155Metadata: URI query for nonexistent token\");\r\n        string memory _tokenURI = _tokenURIs[tokenId];\r\n        string memory base = tokenURIPrefix;\r\n\r\n        if (bytes(base).length == 0) {\r\n            return _tokenURI;\r\n        }\r\n        if (bytes(_tokenURI).length > 0) {\r\n            return string(abi.encodePacked(base, _tokenURI));\r\n        }\r\n        return string(abi.encodePacked(base, tokenId.toString()));\r\n    }\r\n\r\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\r\n        return _tokenOwners.contains(tokenId);\r\n    }\r\n    function totalSupply() external view virtual returns (uint256) {\r\n        return _tokenOwners.length();   \r\n    }\r\n\r\n    //  function totalNFTSupply(uint256 tokenId) external view virtual returns (uint256) {\r\n    //     return _tokenOwners[tokenId];  \r\n    // }\r\n\r\n    /**\r\n        @notice Get the balance of an account's Tokens.\r\n        @param account  The address of the token holder\r\n        @param tokenId     ID of the Token\r\n        @return        The owner's balance of the Token type requested\r\n     */\r\n\r\n    function balanceOf(address account, uint256 tokenId) public view override returns (uint256) {\r\n        require(_exists(tokenId), \"ERC1155Metadata: balance query for nonexistent token\");\r\n        require(account != address(0), \"ERC1155: balance query for the zero address\");\r\n        return _balances[tokenId][account];\r\n    }\r\n\r\n\r\n    /**\r\n        @notice Get the balance of multiple account/token pairs\r\n        @param accounts The addresses of the token holders\r\n        @param ids    ID of the Tokens\r\n        @return        The _owner's balance of the Token types requested (i.e. balance for each (owner, id) pair)\r\n     */\r\n\r\n    function balanceOfBatch(\r\n        address[] memory accounts,\r\n        uint256[] memory ids\r\n    )\r\n        public\r\n        view\r\n        override\r\n        returns (uint256[] memory)\r\n    {\r\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\r\n\r\n        uint256[] memory batchBalances = new uint256[](accounts.length);\r\n\r\n        for (uint256 i = 0; i < accounts.length; ++i) {\r\n            require(accounts[i] != address(0), \"ERC1155: batch balance query for the zero address\");\r\n            batchBalances[i] = _balances[ids[i]][accounts[i]];\r\n        }\r\n\r\n        return batchBalances;\r\n    }\r\n\r\n    /**\r\n        @notice Enable or disable approval for a third party (\"operator\") to manage all of the caller's tokens.\r\n        @dev MUST emit the ApprovalForAll event on success.\r\n        @param operator  Address to add to the set of authorized operators\r\n        @param approved  True if the operator is approved, false to revoke approval\r\n    */\r\n\r\n    function setApprovalForAll(address operator, bool approved) public virtual override {\r\n        require(_msgSender() != operator, \"ERC1155: setting approval status for self\");\r\n\r\n        _operatorApprovals[_msgSender()][operator] = approved;\r\n        emit ApprovalForAll(_msgSender(), operator, approved);\r\n    }\r\n\r\n    /**\r\n        @notice Queries the approval status of an operator for a given owner.\r\n        @param account     The owner of the Tokens\r\n        @param operator  Address of authorized operator\r\n        @return           True if the operator is approved, false if not\r\n    */\r\n\r\n    function isApprovedForAll(address account, address operator) public view override returns (bool) {\r\n        return _operatorApprovals[account][operator];\r\n    }\r\n\r\n    /**\r\n        @notice Transfers `_value` amount of an `_id` from the `_from` address to the `_to` address specified (with safety call).\r\n        @dev Caller must be approved to manage the tokens being transferred out of the `_from` account (see \"Approval\" section of the standard).\r\n        MUST revert if `_to` is the zero address.\r\n        MUST revert if balance of holder for token `_id` is lower than the `_value` sent.\r\n        MUST revert on any other error.\r\n        MUST emit the `TransferSingle` event to reflect the balance change (see \"Safe Transfer Rules\" section of the standard).\r\n        After the above conditions are met, this function MUST check if `_to` is a smart contract (e.g. code size > 0). If so, it MUST call `onERC1155Received` on `_to` and act appropriately (see \"Safe Transfer Rules\" section of the standard).\r\n        @param from    Source address\r\n        @param to      Target address\r\n        @param tokenId      ID of the token type\r\n        @param amount   Transfer amount\r\n        @param data    Additional data with no specified format, MUST be sent unaltered in call to `onERC1155Received` on `_to`\r\n    */    \r\n\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        uint256 amount,\r\n        bytes memory data\r\n    )\r\n        public\r\n        virtual\r\n        override\r\n    {\r\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\r\n        require(\r\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\r\n            \"ERC1155: caller is not owner nor approved\"\r\n        );\r\n\r\n        address operator = _msgSender();\r\n\r\n        _beforeTokenTransfer(operator, from, to, _asSingletonArray(tokenId), _asSingletonArray(amount), data);\r\n\r\n        _balances[tokenId][from] = _balances[tokenId][from].sub(amount, \"ERC1155: insufficient balance for transfer\");\r\n        _balances[tokenId][to] = _balances[tokenId][to].add(amount);\r\n\r\n        emit TransferSingle(operator, from, to, tokenId, amount);\r\n\r\n        _doSafeTransferAcceptanceCheck(operator, from, to, tokenId, amount, data);\r\n    }\r\n\r\n    /**\r\n        @notice Transfers `_values` amount(s) of `_ids` from the `_from` address to the `_to` address specified (with safety call).\r\n        @dev Caller must be approved to manage the tokens being transferred out of the `_from` account (see \"Approval\" section of the standard).\r\n        MUST revert if `_to` is the zero address.\r\n        MUST revert if length of `_ids` is not the same as length of `_values`.\r\n        MUST revert if any of the balance(s) of the holder(s) for token(s) in `_ids` is lower than the respective amount(s) in `_values` sent to the recipient.\r\n        MUST revert on any other error.\r\n        MUST emit `TransferSingle` or `TransferBatch` event(s) such that all the balance changes are reflected (see \"Safe Transfer Rules\" section of the standard).\r\n        Balance changes and events MUST follow the ordering of the arrays (_ids[0]/_values[0] before _ids[1]/_values[1], etc).\r\n        After the above conditions for the transfer(s) in the batch are met, this function MUST check if `_to` is a smart contract (e.g. code size > 0). If so, it MUST call the relevant `ERC1155TokenReceiver` hook(s) on `_to` and act appropriately (see \"Safe Transfer Rules\" section of the standard).\r\n        @param from    Source address\r\n        @param to      Target address\r\n        @param tokenIds     IDs of each token type (order and length must match _values array)\r\n        @param amounts  Transfer amounts per token type (order and length must match _ids array)\r\n        @param data    Additional data with no specified format, MUST be sent unaltered in call to the `ERC1155TokenReceiver` hook(s) on `_to`\r\n    */\r\n\r\n    function safeBatchTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256[] memory tokenIds,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    )\r\n        public\r\n        virtual\r\n        override\r\n    {\r\n        require(tokenIds.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\r\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\r\n        require(\r\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\r\n            \"ERC1155: transfer caller is not owner nor approved\"\r\n        );\r\n\r\n        address operator = _msgSender();\r\n\r\n        _beforeTokenTransfer(operator, from, to, tokenIds, amounts, data);\r\n\r\n        for (uint256 i = 0; i < tokenIds.length; ++i) {\r\n            uint256 tokenId = tokenIds[i];\r\n            uint256 amount = amounts[i];\r\n\r\n            _balances[tokenId][from] = _balances[tokenId][from].sub(\r\n                amount,\r\n                \"ERC1155: insufficient balance for transfer\"\r\n            );\r\n            _balances[tokenId][to] = _balances[tokenId][to].add(amount);\r\n        }\r\n\r\n        emit TransferBatch(operator, from, to, tokenIds, amounts);\r\n\r\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, tokenIds, amounts, data);\r\n    }\r\n\r\n\r\n\r\n    /***\r\n        * @dev Internal function to mint a new token.\r\n        * Reverts if the given token ID already exists.\r\n        * @param tokenId uint256 ID of the token to be minted\r\n        * @param _supply uint256 supply of the token to be minted\r\n        * @param _uri string memory URI of the token to be minted\r\n        * @param _fee uint256 royalty of the token to be minted\r\n    */\r\n\r\n     function _mint(uint256 tokenId, uint256 _supply, string memory _uri, uint256 _fee) internal {\r\n        require(!_exists(tokenId), \"ERC1155: token already minted\");\r\n        require(_supply != 0, \"Supply should be positive\");\r\n        require(bytes(_uri).length > 0, \"uri should be set\");\r\n\r\n        creators[tokenId] = msg.sender;\r\n        _tokenOwners.set(tokenId, msg.sender);\r\n        _royaltyFee[tokenId] = _fee;\r\n        _balances[tokenId][msg.sender] = _supply;\r\n        _setTokenURI(tokenId, _uri);\r\n\r\n        emit TransferSingle(msg.sender, address(0x0), msg.sender, tokenId, _supply);\r\n        emit URI(_uri, tokenId);\r\n    }\r\n\r\n    /**\r\n        * @dev version of {_mint}.\r\n        *\r\n        * Requirements:\r\n        *\r\n        * - `tokenIds` and `amounts` must have the same length.\r\n    */\r\n\r\n    function _mintBatch(address to, uint256[] memory tokenIds, uint256[] memory amounts, bytes memory data) internal virtual {\r\n        require(to != address(0), \"ERC1155: mint to the zero address\");\r\n        require(tokenIds.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\r\n\r\n        address operator = _msgSender();\r\n\r\n        _beforeTokenTransfer(operator, address(0), to, tokenIds, amounts, data);\r\n\r\n        for (uint i = 0; i < tokenIds.length; i++) {\r\n            _balances[tokenIds[i]][to] = amounts[i].add(_balances[tokenIds[i]][to]);\r\n        }\r\n\r\n        emit TransferBatch(operator, address(0), to, tokenIds, amounts);\r\n\r\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, tokenIds, amounts, data);\r\n    }\r\n\r\n    /**\r\n        * @dev Internal function to burn a specific token.\r\n        * Reverts if the token does not exist.\r\n        * Deprecated, use {ERC721-_burn} instead.\r\n        * @param account owner of the token to burn\r\n        * @param tokenId uint256 ID of the token being burned\r\n        * @param amount uint256 amount of supply being burned\r\n    */    \r\n\r\n    function _burn(address account, uint256 tokenId, uint256 amount) internal virtual {\r\n        require(_exists(tokenId), \"ERC1155Metadata: burn query for nonexistent token\");\r\n        require(account != address(0), \"ERC1155: burn from the zero address\");\r\n\r\n        address operator = _msgSender();\r\n\r\n        _beforeTokenTransfer(operator, account, address(0), _asSingletonArray(tokenId), _asSingletonArray(amount), \"\");\r\n\r\n        _balances[tokenId][account] = _balances[tokenId][account].sub(\r\n            amount,\r\n            \"ERC_holderTokens1155: burn amount exceeds balance\"\r\n        );\r\n\r\n\r\n        emit TransferSingle(operator, account, address(0), tokenId, amount);\r\n    }\r\n\r\n\r\n    /**\r\n        * @dev version of {_burn}.\r\n        * Requirements:\r\n        * - `ids` and `amounts` must have the same length.\r\n    */\r\n\r\n    function _burnBatch(address account, uint256[] memory tokenIds, uint256[] memory amounts) internal virtual {\r\n        require(account != address(0), \"ERC1155: burn from the zero address\");\r\n        require(tokenIds.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\r\n\r\n        address operator = _msgSender();\r\n\r\n        _beforeTokenTransfer(operator, account, address(0), tokenIds, amounts, \"\");\r\n\r\n        for (uint i = 0; i < tokenIds.length; i++) {\r\n            _balances[tokenIds[i]][account] = _balances[tokenIds[i]][account].sub(\r\n                amounts[i],\r\n                \"ERC1155: burn amount exceeds balance\"\r\n            );\r\n        }\r\n\r\n        emit TransferBatch(operator, account, address(0), tokenIds, amounts);\r\n    }\r\n\r\n\r\n    function _beforeTokenTransfer(\r\n        address operator,\r\n        address from,\r\n        address to,\r\n        uint256[] memory tokenIds,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    )\r\n        internal virtual\r\n    { }\r\n\r\n    function _doSafeTransferAcceptanceCheck(\r\n        address operator,\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        uint256 amount,\r\n        bytes memory data\r\n    )\r\n        private\r\n    {\r\n        if (to.isContract()) {\r\n            try IERC1155Receiver(to).onERC1155Received(operator, from, tokenId, amount, data) returns (bytes4 response) {\r\n                if (response != IERC1155Receiver(to).onERC1155Received.selector) {\r\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\r\n                }\r\n            } catch Error(string memory reason) {\r\n                revert(reason);\r\n            } catch {\r\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\r\n            }\r\n        }\r\n    }\r\n\r\n    function _doSafeBatchTransferAcceptanceCheck(\r\n        address operator,\r\n        address from,\r\n        address to,\r\n        uint256[] memory tokenIds,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    )\r\n        private\r\n    {\r\n        if (to.isContract()) {\r\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, tokenIds, amounts, data) returns (bytes4 response) {\r\n                if (response != IERC1155Receiver(to).onERC1155BatchReceived.selector) {\r\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\r\n                }\r\n            } catch Error(string memory reason) {\r\n                revert(reason);\r\n            } catch {\r\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\r\n            }\r\n        }\r\n    }\r\n\r\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\r\n        uint256[] memory array = new uint256[](1);\r\n        array[0] = element;\r\n\r\n        return array;\r\n    }\r\n}\r\n\r\n"
			},
			"contracts/External/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\r\n\r\npragma solidity ^0.8.4;\r\n\r\nimport \"./IERC165.sol\";\r\n\r\n/**\r\n * @dev _Available since v3.1._\r\n */\r\ninterface IERC1155Receiver is IERC165 {\r\n    /**\r\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\r\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\r\n     *\r\n     * NOTE: To accept the transfer, this must return\r\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\r\n     * (i.e. 0xf23a6e61, or its own function selector).\r\n     *\r\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\r\n     * @param from The address which previously owned the token\r\n     * @param id The ID of the token being transferred\r\n     * @param value The amount of tokens being transferred\r\n     * @param data Additional data with no specified format\r\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\r\n     */\r\n    function onERC1155Received(\r\n        address operator,\r\n        address from,\r\n        uint256 id,\r\n        uint256 value,\r\n        bytes calldata data\r\n    ) external returns (bytes4);\r\n\r\n    /**\r\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\r\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\r\n     * been updated.\r\n     *\r\n     * NOTE: To accept the transfer(s), this must return\r\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\r\n     * (i.e. 0xbc197c81, or its own function selector).\r\n     *\r\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\r\n     * @param from The address which previously owned the token\r\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\r\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\r\n     * @param data Additional data with no specified format\r\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\r\n     */\r\n    function onERC1155BatchReceived(\r\n        address operator,\r\n        address from,\r\n        uint256[] calldata ids,\r\n        uint256[] calldata values,\r\n        bytes calldata data\r\n    ) external returns (bytes4);\r\n}\r\n\r\n"
			},
			"contracts/External/IERC1155MetadataURI.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\r\n\r\npragma solidity ^0.8.4;\r\n\r\nimport \"./IERC1155.sol\";\r\n\r\n/**\r\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\r\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\r\n *\r\n * _Available since v3.1._\r\n */\r\ninterface IERC1155MetadataURI is IERC1155 {\r\n    /**\r\n     * @dev Returns the URI for token type `id`.\r\n     *\r\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\r\n     * clients with the actual token type ID.\r\n     */\r\n    function uri(uint256 id) external view returns (string memory);\r\n}"
			},
			"contracts/External/EnumerableMap.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.7.0) \r\n\r\npragma solidity ^0.8.4;\r\n\r\nlibrary EnumerableMap {\r\n\r\n    struct MapEntry {\r\n        bytes32 _key;\r\n        bytes32 _value;\r\n    }\r\n\r\n    struct Map {\r\n        MapEntry[] _entries;\r\n\r\n        mapping (bytes32 => uint256) _indexes;\r\n    }\r\n\r\n    function _set(Map storage map, bytes32 key, bytes32 value) private returns (bool) {\r\n        uint256 keyIndex = map._indexes[key];\r\n\r\n        if (keyIndex == 0) { // Equivalent to !contains(map, key)\r\n            map._entries.push(MapEntry({ _key: key, _value: value }));\r\n            map._indexes[key] = map._entries.length;\r\n            return true;\r\n        } else {\r\n            map._entries[keyIndex - 1]._value = value;\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function _remove(Map storage map, bytes32 key) private returns (bool) {\r\n        uint256 keyIndex = map._indexes[key];\r\n\r\n        if (keyIndex != 0) { // Equivalent to contains(map, key)\r\n            uint256 toDeleteIndex = keyIndex - 1;\r\n            uint256 lastIndex = map._entries.length - 1;\r\n            MapEntry storage lastEntry = map._entries[lastIndex];\r\n\r\n            map._entries[toDeleteIndex] = lastEntry;\r\n            map._indexes[lastEntry._key] = toDeleteIndex + 1; // All indexes are 1-based\r\n\r\n            map._entries.pop();\r\n\r\n            delete map._indexes[key];\r\n\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function _contains(Map storage map, bytes32 key) private view returns (bool) {\r\n        return map._indexes[key] != 0;\r\n    }\r\n\r\n    function _length(Map storage map) private view returns (uint256) {\r\n        return map._entries.length;\r\n    }\r\n\r\n    function _at(Map storage map, uint256 index) private view returns (bytes32, bytes32) {\r\n        require(map._entries.length > index, \"EnumerableMap: index out of bounds\");\r\n\r\n        MapEntry storage entry = map._entries[index];\r\n        return (entry._key, entry._value);\r\n    }\r\n\r\n    function _get(Map storage map, bytes32 key, string memory errorMessage) private view returns (bytes32) {\r\n        uint256 keyIndex = map._indexes[key];\r\n        require(keyIndex != 0, errorMessage); // Equivalent to contains(map, key)\r\n        return map._entries[keyIndex - 1]._value; // All indexes are 1-based\r\n    }\r\n\r\n    struct UintToAddressMap {\r\n        Map _inner;\r\n    }\r\n\r\n    function set(UintToAddressMap storage map, uint256 key, address value) internal returns (bool) {\r\n        return _set(map._inner, bytes32(key), bytes32(uint256(uint160(value))));\r\n    }\r\n\r\n    function remove(UintToAddressMap storage map, uint256 key) internal returns (bool) {\r\n        return _remove(map._inner, bytes32(key));\r\n    }\r\n\r\n    function contains(UintToAddressMap storage map, uint256 key) internal view returns (bool) {\r\n        return _contains(map._inner, bytes32(key));\r\n    }\r\n\r\n    function length(UintToAddressMap storage map) internal view returns (uint256) {\r\n        return _length(map._inner);\r\n    }\r\n\r\n    function at(UintToAddressMap storage map, uint256 index) internal view returns (uint256, address) {\r\n        (bytes32 key, bytes32 value) = _at(map._inner, index);\r\n        return (uint256(key), address(uint160(uint256(value))));\r\n    }\r\n\r\n    function get(UintToAddressMap storage map, uint256 key, string memory errorMessage) internal view returns (address) {\r\n        return address(uint160(uint256(_get(map._inner, bytes32(key), errorMessage))));\r\n    }\r\n}\r\n"
			},
			"contracts/External/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.7.0) \r\n\r\npragma solidity ^0.8.4;\r\n\r\n/**\r\n * @dev String operations.\r\n */\r\nlibrary Strings {\r\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\r\n    uint8 private constant _ADDRESS_LENGTH = 20;\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\r\n     */\r\n    function toString(uint256 value) internal pure returns (string memory) {\r\n        // Inspired by OraclizeAPI's implementation - MIT licence\r\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\r\n\r\n        if (value == 0) {\r\n            return \"0\";\r\n        }\r\n        uint256 temp = value;\r\n        uint256 digits;\r\n        while (temp != 0) {\r\n            digits++;\r\n            temp /= 10;\r\n        }\r\n        bytes memory buffer = new bytes(digits);\r\n        while (value != 0) {\r\n            digits -= 1;\r\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\r\n            value /= 10;\r\n        }\r\n        return string(buffer);\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\r\n     */\r\n    function toHexString(uint256 value) internal pure returns (string memory) {\r\n        if (value == 0) {\r\n            return \"0x00\";\r\n        }\r\n        uint256 temp = value;\r\n        uint256 length = 0;\r\n        while (temp != 0) {\r\n            length++;\r\n            temp >>= 8;\r\n        }\r\n        return toHexString(value, length);\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\r\n     */\r\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\r\n        bytes memory buffer = new bytes(2 * length + 2);\r\n        buffer[0] = \"0\";\r\n        buffer[1] = \"x\";\r\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\r\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\r\n            value >>= 4;\r\n        }\r\n        require(value == 0, \"Strings: hex length insufficient\");\r\n        return string(buffer);\r\n    }\r\n\r\n    /**\r\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\r\n     */\r\n    function toHexString(address addr) internal pure returns (string memory) {\r\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\r\n    }\r\n}"
			},
			"contracts/External/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.7.0) \r\n\r\npragma solidity ^0.8.4;\r\n\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\r\n     *\r\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\r\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\r\n     * constructor.\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize/address.code.length, which returns 0\r\n        // for contracts in construction, since the code is only stored at the end\r\n        // of the constructor execution.\r\n\r\n        return account.code.length > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\r\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\r\n     *\r\n     * _Available since v4.8._\r\n     */\r\n    function verifyCallResultFromTarget(\r\n        address target,\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        if (success) {\r\n            if (returndata.length == 0) {\r\n                // only check isContract if the call was successful and the return data is empty\r\n                // otherwise we already know that it was a contract\r\n                require(isContract(target), \"Address: call to non-contract\");\r\n            }\r\n            return returndata;\r\n        } else {\r\n            _revert(returndata, errorMessage);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason or using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            _revert(returndata, errorMessage);\r\n        }\r\n    }\r\n\r\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\r\n        // Look for revert reason and bubble it up if present\r\n        if (returndata.length > 0) {\r\n            // The easiest way to bubble the revert reason is using memory via assembly\r\n            /// @solidity memory-safe-assembly\r\n            assembly {\r\n                let returndata_size := mload(returndata)\r\n                revert(add(32, returndata), returndata_size)\r\n            }\r\n        } else {\r\n            revert(errorMessage);\r\n        }\r\n    }\r\n}\r\n\r\n"
			},
			"contracts/External/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.7.0) \r\n\r\npragma solidity ^0.8.4;\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n*/\r\n\r\nlibrary SafeMath {\r\n\r\n    /**\r\n    * @dev Adds two numbers, throws on overflow.\r\n    */\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n    * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\r\n    */\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n    * @dev Multiplies two numbers, throws on overflow.\r\n    */\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n    * @dev Integer division of two numbers, truncating the quotient.\r\n    */\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n\r\n    /**\r\n    * @dev Integer modulo of two numbers, truncating the remainder.\r\n    */\r\n\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}"
			},
			"contracts/External/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.7.0) \r\n\r\npragma solidity ^0.8.4;\r\n\r\nimport \"./IERC165.sol\";\r\n\r\ninterface IERC1155 is IERC165 {\r\n\r\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\r\n    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);\r\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\r\n    event URI(string value, uint256 indexed id);\r\n    event tokenBaseURI(string value);\r\n\r\n\r\n    function name() external view returns (string memory);\r\n    function symbol() external view returns (string memory);\r\n    function balanceOf(address account, uint256 id) external view returns (uint256);\r\n    function royaltyFee(uint256 tokenId) external view returns(uint256);\r\n    function getCreator(uint256 tokenId) external view returns(address);\r\n    function tokenURI(uint256 tokenId) external view returns (string memory);\r\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids) external view returns (uint256[] memory);\r\n    function setApprovalForAll(address operator, bool approved) external;\r\n    function isApprovedForAll(address account, address operator) external view returns (bool);\r\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\r\n    function safeBatchTransferFrom(address from, address to, uint256[] calldata ids, uint256[] calldata amounts, bytes calldata data) external;\r\n}\r\n"
			},
			"contracts/External/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.7.0) \r\n\r\npragma solidity ^0.8.4;\r\n\r\nimport \"./IERC165.sol\";\r\n\r\nabstract contract ERC165 is IERC165 {\r\n\r\n    bytes4 private constant _INTERFACE_ID_ERC165 = 0x01ffc9a7;\r\n\r\n    mapping(bytes4 => bool) private _supportedInterfaces;\r\n\r\n    constructor () {\r\n        _registerInterface(_INTERFACE_ID_ERC165);\r\n    }\r\n\r\n    function supportsInterface(bytes4 interfaceId) external view virtual override returns (bool) {\r\n        return _supportedInterfaces[interfaceId];\r\n    }\r\n\r\n    function _registerInterface(bytes4 interfaceId) internal virtual {\r\n        require(interfaceId != 0xffffffff, \"ERC165: invalid interface id\");\r\n        _supportedInterfaces[interfaceId] = true;\r\n    }\r\n}\r\n"
			},
			"contracts/External/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.7.0) \r\n\r\npragma solidity ^0.8.4;\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address payable) {\r\n        return payable(msg.sender);\r\n    }\r\n}"
			},
			"contracts/External/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.7.0) \r\n\r\npragma solidity ^0.8.4;\r\n\r\n/**\r\n * @dev Interface of the ERC165 standard, as defined in the\r\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\r\n *\r\n * Implementers can declare support of contract interfaces, which can then be\r\n * queried by others ({ERC165Checker}).\r\n *\r\n * For an implementation, see {ERC165}.\r\n */\r\ninterface IERC165 {\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30 000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/ERC1155.sol": {
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								}
							],
							"name": "tokenBaseURI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getCreator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "royaltyFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "tokenIds",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenURIPrefix",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"params": {
									"account": "The address of the token holder",
									"tokenId": "ID of the Token"
								},
								"returns": {
									"_0": "The owner's balance of the Token type requested"
								}
							},
							"balanceOfBatch(address[],uint256[])": {
								"params": {
									"accounts": "The addresses of the token holders",
									"ids": "ID of the Tokens"
								},
								"returns": {
									"_0": "The _owner's balance of the Token types requested (i.e. balance for each (owner, id) pair)"
								}
							},
							"getCreator(uint256)": {
								"params": {
									"tokenId": "ID of the Token."
								},
								"returns": {
									"_0": "creator of given ID."
								}
							},
							"isApprovedForAll(address,address)": {
								"params": {
									"account": "The owner of the Tokens",
									"operator": "Address of authorized operator"
								},
								"returns": {
									"_0": "True if the operator is approved, false if not"
								}
							},
							"royaltyFee(uint256)": {
								"params": {
									"tokenId": "ID of the Token."
								},
								"returns": {
									"_0": "royaltyFee of given ID."
								}
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "Caller must be approved to manage the tokens being transferred out of the `_from` account (see \"Approval\" section of the standard). MUST revert if `_to` is the zero address. MUST revert if length of `_ids` is not the same as length of `_values`. MUST revert if any of the balance(s) of the holder(s) for token(s) in `_ids` is lower than the respective amount(s) in `_values` sent to the recipient. MUST revert on any other error. MUST emit `TransferSingle` or `TransferBatch` event(s) such that all the balance changes are reflected (see \"Safe Transfer Rules\" section of the standard). Balance changes and events MUST follow the ordering of the arrays (_ids[0]/_values[0] before _ids[1]/_values[1], etc). After the above conditions for the transfer(s) in the batch are met, this function MUST check if `_to` is a smart contract (e.g. code size > 0). If so, it MUST call the relevant `ERC1155TokenReceiver` hook(s) on `_to` and act appropriately (see \"Safe Transfer Rules\" section of the standard).",
								"params": {
									"amounts": "Transfer amounts per token type (order and length must match _ids array)",
									"data": "Additional data with no specified format, MUST be sent unaltered in call to the `ERC1155TokenReceiver` hook(s) on `_to`",
									"from": "Source address",
									"to": "Target address",
									"tokenIds": "IDs of each token type (order and length must match _values array)"
								}
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Caller must be approved to manage the tokens being transferred out of the `_from` account (see \"Approval\" section of the standard). MUST revert if `_to` is the zero address. MUST revert if balance of holder for token `_id` is lower than the `_value` sent. MUST revert on any other error. MUST emit the `TransferSingle` event to reflect the balance change (see \"Safe Transfer Rules\" section of the standard). After the above conditions are met, this function MUST check if `_to` is a smart contract (e.g. code size > 0). If so, it MUST call `onERC1155Received` on `_to` and act appropriately (see \"Safe Transfer Rules\" section of the standard).",
								"params": {
									"amount": "Transfer amount",
									"data": "Additional data with no specified format, MUST be sent unaltered in call to `onERC1155Received` on `_to`",
									"from": "Source address",
									"to": "Target address",
									"tokenId": "ID of the token type"
								}
							},
							"setApprovalForAll(address,bool)": {
								"details": "MUST emit the ApprovalForAll event on success.",
								"params": {
									"approved": "True if the operator is approved, false to revoke approval",
									"operator": "Address to add to the set of authorized operators"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"tokenURI(uint256)": {
								"details": "Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.",
								"params": {
									"tokenId": "uint256 ID of the token to query"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC1155.sol\":448:18073  contract ERC1155 is Context, ERC165,IERC1155{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ERC1155.sol\":1023:1056  string public tokenURIPrefix = \"\" */\n  mload(0x40)\n  dup1\n  0x20\n  add\n  0x40\n  mstore\n  dup1\n  0x00\n  dup2\n  mstore\n  pop\n  0x05\n  swap1\n  dup2\n  tag_1\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"contracts/ERC1155.sol\":1426:1662  constructor (string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_4\n  swap2\n  swap1\n  tag_5\n  jump\t// in\ntag_4:\n    /* \"contracts/External/ERC165.sol\":337:377  _registerInterface(_INTERFACE_ID_ERC165) */\n  tag_9\n    /* \"contracts/External/ERC165.sol\":231:241  0x01ffc9a7 */\n  0x01ffc9a7\n    /* \"contracts/External/ERC165.sol\":356:376  _INTERFACE_ID_ERC165 */\n  0xe0\n  shl\n    /* \"contracts/External/ERC165.sol\":337:355  _registerInterface */\n  shl(0x20, tag_10)\n    /* \"contracts/External/ERC165.sol\":337:377  _registerInterface(_INTERFACE_ID_ERC165) */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"contracts/ERC1155.sol\":1502:1507  name_ */\n  dup2\n    /* \"contracts/ERC1155.sol\":1494:1499  _name */\n  0x09\n    /* \"contracts/ERC1155.sol\":1494:1507  _name = name_ */\n  swap1\n  dup2\n  tag_12\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_12:\n  pop\n    /* \"contracts/ERC1155.sol\":1528:1535  symbol_ */\n  dup1\n    /* \"contracts/ERC1155.sol\":1518:1525  _symbol */\n  0x0a\n    /* \"contracts/ERC1155.sol\":1518:1535  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_13\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_13:\n  pop\n    /* \"contracts/ERC1155.sol\":1548:1589  _registerInterface(_INTERFACE_ID_ERC1155) */\n  tag_14\n    /* \"contracts/ERC1155.sol\":1327:1337  0xd9b67a26 */\n  0xd9b67a26\n    /* \"contracts/ERC1155.sol\":1567:1588  _INTERFACE_ID_ERC1155 */\n  0xe0\n  shl\n    /* \"contracts/ERC1155.sol\":1548:1566  _registerInterface */\n  shl(0x20, tag_10)\n    /* \"contracts/ERC1155.sol\":1548:1589  _registerInterface(_INTERFACE_ID_ERC1155) */\n  0x20\n  shr\n  jump\t// in\ntag_14:\n    /* \"contracts/ERC1155.sol\":1600:1654  _registerInterface(_INTERFACE_ID_ERC1155_METADATA_URI) */\n  tag_15\n    /* \"contracts/ERC1155.sol\":1407:1417  0x0e89341c */\n  0x0e89341c\n    /* \"contracts/ERC1155.sol\":1619:1653  _INTERFACE_ID_ERC1155_METADATA_URI */\n  0xe0\n  shl\n    /* \"contracts/ERC1155.sol\":1600:1618  _registerInterface */\n  shl(0x20, tag_10)\n    /* \"contracts/ERC1155.sol\":1600:1654  _registerInterface(_INTERFACE_ID_ERC1155_METADATA_URI) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"contracts/ERC1155.sol\":1426:1662  constructor (string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/ERC1155.sol\":448:18073  contract ERC1155 is Context, ERC165,IERC1155{... */\n  jump(tag_16)\n    /* \"contracts/External/ERC165.sol\":553:754  function _registerInterface(bytes4 interfaceId) internal virtual {... */\ntag_10:\n    /* \"contracts/External/ERC165.sol\":652:662  0xffffffff */\n  0xffffffff\n    /* \"contracts/External/ERC165.sol\":637:662  interfaceId != 0xffffffff */\n  0xe0\n  shl\n    /* \"contracts/External/ERC165.sol\":637:648  interfaceId */\n  dup2\n    /* \"contracts/External/ERC165.sol\":637:662  interfaceId != 0xffffffff */\n  not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n  and\n  sub\n    /* \"contracts/External/ERC165.sol\":629:695  require(interfaceId != 0xffffffff, \"ERC165: invalid interface id\") */\n  tag_18\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_19\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_18:\n    /* \"contracts/External/ERC165.sol\":742:746  true */\n  0x01\n    /* \"contracts/External/ERC165.sol\":706:726  _supportedInterfaces */\n  0x00\n    /* \"contracts/External/ERC165.sol\":706:739  _supportedInterfaces[interfaceId] */\n  dup1\n    /* \"contracts/External/ERC165.sol\":727:738  interfaceId */\n  dup4\n    /* \"contracts/External/ERC165.sol\":706:739  _supportedInterfaces[interfaceId] */\n  not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n  and\n  not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/External/ERC165.sol\":706:746  _supportedInterfaces[interfaceId] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/External/ERC165.sol\":553:754  function _registerInterface(bytes4 interfaceId) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_21:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_22:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_23:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_24:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_61\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_61:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_62\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_63\n  tag_23\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":714:798   */\ntag_62:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_25:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_26:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_27:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_28:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_68\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_27\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":1429:1468   */\n  tag_69\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_27\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_29:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_30:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_31:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_73\n    /* \"#utility.yul\":1818:1852   */\n  tag_74\n    /* \"#utility.yul\":1827:1851   */\n  tag_75\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_29\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":1818:1852   */\n  tag_30\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":1800:1853   */\n  tag_29\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_32:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_33:\n    /* \"#utility.yul\":2056:2095   */\n  tag_78\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_31\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2117:2208   */\n  tag_79\n    /* \"#utility.yul\":2166:2207   */\n  tag_80\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_32\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_28\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_34:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_35:\n    /* \"#utility.yul\":2377:2409   */\n  tag_83\n  tag_34\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":2418:2483   */\n  tag_84\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_33\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_36:\n    /* \"#utility.yul\":2555:2675   */\ntag_86:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_88\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_89\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_35\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_86)\ntag_88:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_37:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_91\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_92\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_25\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":2906:2935   */\n  tag_93\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_26\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_94\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_94:\n    /* \"#utility.yul\":3133:3213   */\n  tag_95\n    /* \"#utility.yul\":3189:3211   */\n  tag_96\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_26\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_36\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_91:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_38:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_39:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_99\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_38\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_40:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_101\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_39\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_2:\n    /* \"#utility.yul\":3950:3987   */\n  tag_103\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_21\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_104\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_105\n  tag_22\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":4038:4094   */\ntag_104:\n    /* \"#utility.yul\":4118:4156   */\n  tag_106\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_24\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":4203:4270   */\n  tag_107\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_37\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_109\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_110\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_110:\n    /* \"#utility.yul\":5144:5211   */\n  tag_111\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_40\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_108)\n    /* \"#utility.yul\":4365:4983   */\ntag_109:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_112\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_25\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_113:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_115\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_113)\ntag_115:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_116\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_117\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_39\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_116:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_108:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5309   */\ntag_41:\n    /* \"#utility.yul\":5267:5273   */\n  0x00\n    /* \"#utility.yul\":5300:5302   */\n  0x40\n    /* \"#utility.yul\":5294:5303   */\n  mload\n    /* \"#utility.yul\":5284:5303   */\n  swap1\n  pop\n    /* \"#utility.yul\":5234:5309   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5315:5432   */\ntag_42:\n    /* \"#utility.yul\":5424:5425   */\n  0x00\n    /* \"#utility.yul\":5421:5422   */\n  dup1\n    /* \"#utility.yul\":5414:5426   */\n  revert\n    /* \"#utility.yul\":5438:5555   */\ntag_43:\n    /* \"#utility.yul\":5547:5548   */\n  0x00\n    /* \"#utility.yul\":5544:5545   */\n  dup1\n    /* \"#utility.yul\":5537:5549   */\n  revert\n    /* \"#utility.yul\":5561:5678   */\ntag_44:\n    /* \"#utility.yul\":5670:5671   */\n  0x00\n    /* \"#utility.yul\":5667:5668   */\n  dup1\n    /* \"#utility.yul\":5660:5672   */\n  revert\n    /* \"#utility.yul\":5684:5801   */\ntag_45:\n    /* \"#utility.yul\":5793:5794   */\n  0x00\n    /* \"#utility.yul\":5790:5791   */\n  dup1\n    /* \"#utility.yul\":5783:5795   */\n  revert\n    /* \"#utility.yul\":5807:5909   */\ntag_46:\n    /* \"#utility.yul\":5848:5854   */\n  0x00\n    /* \"#utility.yul\":5899:5901   */\n  0x1f\n    /* \"#utility.yul\":5895:5902   */\n  not\n    /* \"#utility.yul\":5890:5892   */\n  0x1f\n    /* \"#utility.yul\":5883:5888   */\n  dup4\n    /* \"#utility.yul\":5879:5893   */\n  add\n    /* \"#utility.yul\":5875:5903   */\n  and\n    /* \"#utility.yul\":5865:5903   */\n  swap1\n  pop\n    /* \"#utility.yul\":5807:5909   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5915:6196   */\ntag_47:\n    /* \"#utility.yul\":5998:6025   */\n  tag_125\n    /* \"#utility.yul\":6020:6024   */\n  dup3\n    /* \"#utility.yul\":5998:6025   */\n  tag_46\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":5990:5996   */\n  dup2\n    /* \"#utility.yul\":5986:6026   */\n  add\n    /* \"#utility.yul\":6128:6134   */\n  dup2\n    /* \"#utility.yul\":6116:6126   */\n  dup2\n    /* \"#utility.yul\":6113:6135   */\n  lt\n    /* \"#utility.yul\":6092:6110   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":6080:6090   */\n  dup3\n    /* \"#utility.yul\":6077:6111   */\n  gt\n    /* \"#utility.yul\":6074:6136   */\n  or\n    /* \"#utility.yul\":6071:6159   */\n  iszero\n  tag_126\n  jumpi\n    /* \"#utility.yul\":6139:6157   */\n  tag_127\n  tag_22\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":6071:6159   */\ntag_126:\n    /* \"#utility.yul\":6179:6189   */\n  dup1\n    /* \"#utility.yul\":6175:6177   */\n  0x40\n    /* \"#utility.yul\":6168:6190   */\n  mstore\n    /* \"#utility.yul\":5958:6196   */\n  pop\n    /* \"#utility.yul\":5915:6196   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6202:6331   */\ntag_48:\n    /* \"#utility.yul\":6236:6242   */\n  0x00\n    /* \"#utility.yul\":6263:6283   */\n  tag_129\n  tag_41\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":6253:6283   */\n  swap1\n  pop\n    /* \"#utility.yul\":6292:6325   */\n  tag_130\n    /* \"#utility.yul\":6320:6324   */\n  dup3\n    /* \"#utility.yul\":6312:6318   */\n  dup3\n    /* \"#utility.yul\":6292:6325   */\n  tag_47\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":6202:6331   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6337:6645   */\ntag_49:\n    /* \"#utility.yul\":6399:6403   */\n  0x00\n    /* \"#utility.yul\":6489:6507   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":6481:6487   */\n  dup3\n    /* \"#utility.yul\":6478:6508   */\n  gt\n    /* \"#utility.yul\":6475:6531   */\n  iszero\n  tag_132\n  jumpi\n    /* \"#utility.yul\":6511:6529   */\n  tag_133\n  tag_22\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":6475:6531   */\ntag_132:\n    /* \"#utility.yul\":6549:6578   */\n  tag_134\n    /* \"#utility.yul\":6571:6577   */\n  dup3\n    /* \"#utility.yul\":6549:6578   */\n  tag_46\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":6541:6578   */\n  swap1\n  pop\n    /* \"#utility.yul\":6633:6637   */\n  0x20\n    /* \"#utility.yul\":6627:6631   */\n  dup2\n    /* \"#utility.yul\":6623:6638   */\n  add\n    /* \"#utility.yul\":6615:6638   */\n  swap1\n  pop\n    /* \"#utility.yul\":6337:6645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6651:6897   */\ntag_50:\n    /* \"#utility.yul\":6732:6733   */\n  0x00\n    /* \"#utility.yul\":6742:6855   */\ntag_136:\n    /* \"#utility.yul\":6756:6762   */\n  dup4\n    /* \"#utility.yul\":6753:6754   */\n  dup2\n    /* \"#utility.yul\":6750:6763   */\n  lt\n    /* \"#utility.yul\":6742:6855   */\n  iszero\n  tag_138\n  jumpi\n    /* \"#utility.yul\":6841:6842   */\n  dup1\n    /* \"#utility.yul\":6836:6839   */\n  dup3\n    /* \"#utility.yul\":6832:6843   */\n  add\n    /* \"#utility.yul\":6826:6844   */\n  mload\n    /* \"#utility.yul\":6822:6823   */\n  dup2\n    /* \"#utility.yul\":6817:6820   */\n  dup5\n    /* \"#utility.yul\":6813:6824   */\n  add\n    /* \"#utility.yul\":6806:6845   */\n  mstore\n    /* \"#utility.yul\":6778:6780   */\n  0x20\n    /* \"#utility.yul\":6775:6776   */\n  dup2\n    /* \"#utility.yul\":6771:6781   */\n  add\n    /* \"#utility.yul\":6766:6781   */\n  swap1\n  pop\n    /* \"#utility.yul\":6742:6855   */\n  jump(tag_136)\ntag_138:\n    /* \"#utility.yul\":6889:6890   */\n  0x00\n    /* \"#utility.yul\":6880:6886   */\n  dup5\n    /* \"#utility.yul\":6875:6878   */\n  dup5\n    /* \"#utility.yul\":6871:6887   */\n  add\n    /* \"#utility.yul\":6864:6891   */\n  mstore\n    /* \"#utility.yul\":6713:6897   */\n  pop\n    /* \"#utility.yul\":6651:6897   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6903:7337   */\ntag_51:\n    /* \"#utility.yul\":6992:6997   */\n  0x00\n    /* \"#utility.yul\":7017:7083   */\n  tag_140\n    /* \"#utility.yul\":7033:7082   */\n  tag_141\n    /* \"#utility.yul\":7075:7081   */\n  dup5\n    /* \"#utility.yul\":7033:7082   */\n  tag_49\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":7017:7083   */\n  tag_48\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":7008:7083   */\n  swap1\n  pop\n    /* \"#utility.yul\":7106:7112   */\n  dup3\n    /* \"#utility.yul\":7099:7104   */\n  dup2\n    /* \"#utility.yul\":7092:7113   */\n  mstore\n    /* \"#utility.yul\":7144:7148   */\n  0x20\n    /* \"#utility.yul\":7137:7142   */\n  dup2\n    /* \"#utility.yul\":7133:7149   */\n  add\n    /* \"#utility.yul\":7182:7185   */\n  dup5\n    /* \"#utility.yul\":7173:7179   */\n  dup5\n    /* \"#utility.yul\":7168:7171   */\n  dup5\n    /* \"#utility.yul\":7164:7180   */\n  add\n    /* \"#utility.yul\":7161:7186   */\n  gt\n    /* \"#utility.yul\":7158:7270   */\n  iszero\n  tag_142\n  jumpi\n    /* \"#utility.yul\":7189:7268   */\n  tag_143\n  tag_45\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":7158:7270   */\ntag_142:\n    /* \"#utility.yul\":7279:7331   */\n  tag_144\n    /* \"#utility.yul\":7324:7330   */\n  dup5\n    /* \"#utility.yul\":7319:7322   */\n  dup3\n    /* \"#utility.yul\":7314:7317   */\n  dup6\n    /* \"#utility.yul\":7279:7331   */\n  tag_50\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":6998:7337   */\n  pop\n    /* \"#utility.yul\":6903:7337   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7357:7712   */\ntag_52:\n    /* \"#utility.yul\":7424:7429   */\n  0x00\n    /* \"#utility.yul\":7473:7476   */\n  dup3\n    /* \"#utility.yul\":7466:7470   */\n  0x1f\n    /* \"#utility.yul\":7458:7464   */\n  dup4\n    /* \"#utility.yul\":7454:7471   */\n  add\n    /* \"#utility.yul\":7450:7477   */\n  slt\n    /* \"#utility.yul\":7440:7562   */\n  tag_146\n  jumpi\n    /* \"#utility.yul\":7481:7560   */\n  tag_147\n  tag_44\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":7440:7562   */\ntag_146:\n    /* \"#utility.yul\":7591:7597   */\n  dup2\n    /* \"#utility.yul\":7585:7598   */\n  mload\n    /* \"#utility.yul\":7616:7706   */\n  tag_148\n    /* \"#utility.yul\":7702:7705   */\n  dup5\n    /* \"#utility.yul\":7694:7700   */\n  dup3\n    /* \"#utility.yul\":7687:7691   */\n  0x20\n    /* \"#utility.yul\":7679:7685   */\n  dup7\n    /* \"#utility.yul\":7675:7692   */\n  add\n    /* \"#utility.yul\":7616:7706   */\n  tag_51\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":7607:7706   */\n  swap2\n  pop\n    /* \"#utility.yul\":7430:7712   */\n  pop\n    /* \"#utility.yul\":7357:7712   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7718:8571   */\ntag_5:\n    /* \"#utility.yul\":7817:7823   */\n  0x00\n    /* \"#utility.yul\":7825:7831   */\n  dup1\n    /* \"#utility.yul\":7874:7876   */\n  0x40\n    /* \"#utility.yul\":7862:7871   */\n  dup4\n    /* \"#utility.yul\":7853:7860   */\n  dup6\n    /* \"#utility.yul\":7849:7872   */\n  sub\n    /* \"#utility.yul\":7845:7877   */\n  slt\n    /* \"#utility.yul\":7842:7961   */\n  iszero\n  tag_150\n  jumpi\n    /* \"#utility.yul\":7880:7959   */\n  tag_151\n  tag_42\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":7842:7961   */\ntag_150:\n    /* \"#utility.yul\":8021:8022   */\n  0x00\n    /* \"#utility.yul\":8010:8019   */\n  dup4\n    /* \"#utility.yul\":8006:8023   */\n  add\n    /* \"#utility.yul\":8000:8024   */\n  mload\n    /* \"#utility.yul\":8051:8069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":8043:8049   */\n  dup2\n    /* \"#utility.yul\":8040:8070   */\n  gt\n    /* \"#utility.yul\":8037:8154   */\n  iszero\n  tag_152\n  jumpi\n    /* \"#utility.yul\":8073:8152   */\n  tag_153\n  tag_43\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":8037:8154   */\ntag_152:\n    /* \"#utility.yul\":8178:8252   */\n  tag_154\n    /* \"#utility.yul\":8244:8251   */\n  dup6\n    /* \"#utility.yul\":8235:8241   */\n  dup3\n    /* \"#utility.yul\":8224:8233   */\n  dup7\n    /* \"#utility.yul\":8220:8242   */\n  add\n    /* \"#utility.yul\":8178:8252   */\n  tag_52\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":8168:8252   */\n  swap3\n  pop\n    /* \"#utility.yul\":7971:8262   */\n  pop\n    /* \"#utility.yul\":8322:8324   */\n  0x20\n    /* \"#utility.yul\":8311:8320   */\n  dup4\n    /* \"#utility.yul\":8307:8325   */\n  add\n    /* \"#utility.yul\":8301:8326   */\n  mload\n    /* \"#utility.yul\":8353:8371   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":8345:8351   */\n  dup2\n    /* \"#utility.yul\":8342:8372   */\n  gt\n    /* \"#utility.yul\":8339:8456   */\n  iszero\n  tag_155\n  jumpi\n    /* \"#utility.yul\":8375:8454   */\n  tag_156\n  tag_43\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":8339:8456   */\ntag_155:\n    /* \"#utility.yul\":8480:8554   */\n  tag_157\n    /* \"#utility.yul\":8546:8553   */\n  dup6\n    /* \"#utility.yul\":8537:8543   */\n  dup3\n    /* \"#utility.yul\":8526:8535   */\n  dup7\n    /* \"#utility.yul\":8522:8544   */\n  add\n    /* \"#utility.yul\":8480:8554   */\n  tag_52\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":8470:8554   */\n  swap2\n  pop\n    /* \"#utility.yul\":8272:8564   */\n  pop\n    /* \"#utility.yul\":7718:8571   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8577:8746   */\ntag_53:\n    /* \"#utility.yul\":8661:8672   */\n  0x00\n    /* \"#utility.yul\":8695:8701   */\n  dup3\n    /* \"#utility.yul\":8690:8693   */\n  dup3\n    /* \"#utility.yul\":8683:8702   */\n  mstore\n    /* \"#utility.yul\":8735:8739   */\n  0x20\n    /* \"#utility.yul\":8730:8733   */\n  dup3\n    /* \"#utility.yul\":8726:8740   */\n  add\n    /* \"#utility.yul\":8711:8740   */\n  swap1\n  pop\n    /* \"#utility.yul\":8577:8746   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8752:8930   */\ntag_54:\n    /* \"#utility.yul\":8892:8922   */\n  0x4552433136353a20696e76616c696420696e7465726661636520696400000000\n    /* \"#utility.yul\":8888:8889   */\n  0x00\n    /* \"#utility.yul\":8880:8886   */\n  dup3\n    /* \"#utility.yul\":8876:8890   */\n  add\n    /* \"#utility.yul\":8869:8923   */\n  mstore\n    /* \"#utility.yul\":8752:8930   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8936:9302   */\ntag_55:\n    /* \"#utility.yul\":9078:9081   */\n  0x00\n    /* \"#utility.yul\":9099:9166   */\n  tag_161\n    /* \"#utility.yul\":9163:9165   */\n  0x1c\n    /* \"#utility.yul\":9158:9161   */\n  dup4\n    /* \"#utility.yul\":9099:9166   */\n  tag_53\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":9092:9166   */\n  swap2\n  pop\n    /* \"#utility.yul\":9175:9268   */\n  tag_162\n    /* \"#utility.yul\":9264:9267   */\n  dup3\n    /* \"#utility.yul\":9175:9268   */\n  tag_54\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":9293:9295   */\n  0x20\n    /* \"#utility.yul\":9288:9291   */\n  dup3\n    /* \"#utility.yul\":9284:9296   */\n  add\n    /* \"#utility.yul\":9277:9296   */\n  swap1\n  pop\n    /* \"#utility.yul\":8936:9302   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9308:9727   */\ntag_20:\n    /* \"#utility.yul\":9474:9478   */\n  0x00\n    /* \"#utility.yul\":9512:9514   */\n  0x20\n    /* \"#utility.yul\":9501:9510   */\n  dup3\n    /* \"#utility.yul\":9497:9515   */\n  add\n    /* \"#utility.yul\":9489:9515   */\n  swap1\n  pop\n    /* \"#utility.yul\":9561:9570   */\n  dup2\n    /* \"#utility.yul\":9555:9559   */\n  dup2\n    /* \"#utility.yul\":9551:9571   */\n  sub\n    /* \"#utility.yul\":9547:9548   */\n  0x00\n    /* \"#utility.yul\":9536:9545   */\n  dup4\n    /* \"#utility.yul\":9532:9549   */\n  add\n    /* \"#utility.yul\":9525:9572   */\n  mstore\n    /* \"#utility.yul\":9589:9720   */\n  tag_164\n    /* \"#utility.yul\":9715:9719   */\n  dup2\n    /* \"#utility.yul\":9589:9720   */\n  tag_55\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":9581:9720   */\n  swap1\n  pop\n    /* \"#utility.yul\":9308:9727   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/ERC1155.sol\":448:18073  contract ERC1155 is Context, ERC165,IERC1155{... */\ntag_16:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC1155.sol\":448:18073  contract ERC1155 is Context, ERC165,IERC1155{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa22cb465\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xc87b56dd\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xd48e638a\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0xa22cb465\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xc0ac9983\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xc57dc235\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x18160ddd\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ERC1155.sol\":4641:4966  function balanceOf(address account, uint256 tokenId) public view override returns (uint256) {... */\n    tag_3:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/External/ERC165.sol\":393:545  function supportsInterface(bytes4 interfaceId) external view virtual override returns (bool) {... */\n    tag_4:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC1155.sol\":1670:1770  function name() public view virtual override returns (string memory) {... */\n    tag_5:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC1155.sol\":4122:4235  function totalSupply() external view virtual returns (uint256) {... */\n    tag_6:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC1155.sol\":10810:12090  function safeBatchTransferFrom(... */\n    tag_7:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      stop\n        /* \"contracts/ERC1155.sol\":5276:5910  function balanceOfBatch(... */\n    tag_8:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC1155.sol\":1778:1882  function symbol() public view virtual override returns (string memory) {... */\n    tag_9:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC1155.sol\":6272:6583  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_10:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      stop\n        /* \"contracts/ERC1155.sol\":1023:1056  string public tokenURIPrefix = \"\" */\n    tag_11:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC1155.sol\":2436:2557  function royaltyFee(uint256 tokenId) public view override returns(uint256) {... */\n    tag_12:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC1155.sol\":3425:3981  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_13:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC1155.sol\":2730:2856  function getCreator(uint256 tokenId) public view virtual override returns(address) {... */\n    tag_14:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC1155.sol\":6872:7032  function isApprovedForAll(address account, address operator) public view override returns (bool) {... */\n    tag_15:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC1155.sol\":8195:9159  function safeTransferFrom(... */\n    tag_16:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      tag_81\n      jump\t// in\n    tag_78:\n      stop\n        /* \"contracts/ERC1155.sol\":4641:4966  function balanceOf(address account, uint256 tokenId) public view override returns (uint256) {... */\n    tag_23:\n        /* \"contracts/ERC1155.sol\":4724:4731  uint256 */\n      0x00\n        /* \"contracts/ERC1155.sol\":4752:4768  _exists(tokenId) */\n      tag_83\n        /* \"contracts/ERC1155.sol\":4760:4767  tokenId */\n      dup3\n        /* \"contracts/ERC1155.sol\":4752:4759  _exists */\n      tag_84\n        /* \"contracts/ERC1155.sol\":4752:4768  _exists(tokenId) */\n      jump\t// in\n    tag_83:\n        /* \"contracts/ERC1155.sol\":4744:4825  require(_exists(tokenId), \"ERC1155Metadata: balance query for nonexistent token\") */\n      tag_85\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_86\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_85:\n        /* \"contracts/ERC1155.sol\":4863:4864  0 */\n      0x00\n        /* \"contracts/ERC1155.sol\":4844:4865  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155.sol\":4844:4851  account */\n      dup4\n        /* \"contracts/ERC1155.sol\":4844:4865  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERC1155.sol\":4836:4913  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      tag_88\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_88:\n        /* \"contracts/ERC1155.sol\":4931:4940  _balances */\n      0x03\n        /* \"contracts/ERC1155.sol\":4931:4949  _balances[tokenId] */\n      0x00\n        /* \"contracts/ERC1155.sol\":4941:4948  tokenId */\n      dup4\n        /* \"contracts/ERC1155.sol\":4931:4949  _balances[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155.sol\":4931:4958  _balances[tokenId][account] */\n      0x00\n        /* \"contracts/ERC1155.sol\":4950:4957  account */\n      dup5\n        /* \"contracts/ERC1155.sol\":4931:4958  _balances[tokenId][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC1155.sol\":4924:4958  return _balances[tokenId][account] */\n      swap1\n      pop\n        /* \"contracts/ERC1155.sol\":4641:4966  function balanceOf(address account, uint256 tokenId) public view override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/External/ERC165.sol\":393:545  function supportsInterface(bytes4 interfaceId) external view virtual override returns (bool) {... */\n    tag_29:\n        /* \"contracts/External/ERC165.sol\":480:484  bool */\n      0x00\n        /* \"contracts/External/ERC165.sol\":504:524  _supportedInterfaces */\n      dup1\n        /* \"contracts/External/ERC165.sol\":504:537  _supportedInterfaces[interfaceId] */\n      0x00\n        /* \"contracts/External/ERC165.sol\":525:536  interfaceId */\n      dup4\n        /* \"contracts/External/ERC165.sol\":504:537  _supportedInterfaces[interfaceId] */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/External/ERC165.sol\":497:537  return _supportedInterfaces[interfaceId] */\n      swap1\n      pop\n        /* \"contracts/External/ERC165.sol\":393:545  function supportsInterface(bytes4 interfaceId) external view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155.sol\":1670:1770  function name() public view virtual override returns (string memory) {... */\n    tag_33:\n        /* \"contracts/ERC1155.sol\":1724:1737  string memory */\n      0x60\n        /* \"contracts/ERC1155.sol\":1757:1762  _name */\n      0x09\n        /* \"contracts/ERC1155.sol\":1750:1762  return _name */\n      dup1\n      sload\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_95\n      swap1\n      tag_94\n      jump\t// in\n    tag_95:\n      dup1\n      iszero\n      tag_96\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_97\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_96)\n    tag_97:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_98:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_98\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_96:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/ERC1155.sol\":1670:1770  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC1155.sol\":4122:4235  function totalSupply() external view virtual returns (uint256) {... */\n    tag_37:\n        /* \"contracts/ERC1155.sol\":4176:4183  uint256 */\n      0x00\n        /* \"contracts/ERC1155.sol\":4203:4224  _tokenOwners.length() */\n      tag_100\n        /* \"contracts/ERC1155.sol\":4203:4215  _tokenOwners */\n      0x07\n        /* \"contracts/ERC1155.sol\":4203:4222  _tokenOwners.length */\n      tag_101\n        /* \"contracts/ERC1155.sol\":4203:4224  _tokenOwners.length() */\n      jump\t// in\n    tag_100:\n        /* \"contracts/ERC1155.sol\":4196:4224  return _tokenOwners.length() */\n      swap1\n      pop\n        /* \"contracts/ERC1155.sol\":4122:4235  function totalSupply() external view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC1155.sol\":10810:12090  function safeBatchTransferFrom(... */\n    tag_42:\n        /* \"contracts/ERC1155.sol\":11085:11092  amounts */\n      dup2\n        /* \"contracts/ERC1155.sol\":11085:11099  amounts.length */\n      mload\n        /* \"contracts/ERC1155.sol\":11066:11074  tokenIds */\n      dup4\n        /* \"contracts/ERC1155.sol\":11066:11081  tokenIds.length */\n      mload\n        /* \"contracts/ERC1155.sol\":11066:11099  tokenIds.length == amounts.length */\n      eq\n        /* \"contracts/ERC1155.sol\":11058:11144  require(tokenIds.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_103\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n        /* \"contracts/ERC1155.sol\":11177:11178  0 */\n      0x00\n        /* \"contracts/ERC1155.sol\":11163:11179  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155.sol\":11163:11165  to */\n      dup5\n        /* \"contracts/ERC1155.sol\":11163:11179  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERC1155.sol\":11155:11221  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_106\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_106:\n        /* \"contracts/ERC1155.sol\":11262:11274  _msgSender() */\n      tag_109\n        /* \"contracts/ERC1155.sol\":11262:11272  _msgSender */\n      tag_110\n        /* \"contracts/ERC1155.sol\":11262:11274  _msgSender() */\n      jump\t// in\n    tag_109:\n        /* \"contracts/ERC1155.sol\":11254:11274  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155.sol\":11254:11258  from */\n      dup6\n        /* \"contracts/ERC1155.sol\":11254:11274  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ERC1155.sol\":11254:11314  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      dup1\n      tag_111\n      jumpi\n      pop\n        /* \"contracts/ERC1155.sol\":11278:11314  isApprovedForAll(from, _msgSender()) */\n      tag_112\n        /* \"contracts/ERC1155.sol\":11295:11299  from */\n      dup6\n        /* \"contracts/ERC1155.sol\":11301:11313  _msgSender() */\n      tag_113\n        /* \"contracts/ERC1155.sol\":11301:11311  _msgSender */\n      tag_110\n        /* \"contracts/ERC1155.sol\":11301:11313  _msgSender() */\n      jump\t// in\n    tag_113:\n        /* \"contracts/ERC1155.sol\":11278:11294  isApprovedForAll */\n      tag_76\n        /* \"contracts/ERC1155.sol\":11278:11314  isApprovedForAll(from, _msgSender()) */\n      jump\t// in\n    tag_112:\n        /* \"contracts/ERC1155.sol\":11254:11314  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n    tag_111:\n        /* \"contracts/ERC1155.sol\":11232:11392  require(... */\n      tag_114\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_115\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_114:\n        /* \"contracts/ERC1155.sol\":11405:11421  address operator */\n      0x00\n        /* \"contracts/ERC1155.sol\":11424:11436  _msgSender() */\n      tag_117\n        /* \"contracts/ERC1155.sol\":11424:11434  _msgSender */\n      tag_110\n        /* \"contracts/ERC1155.sol\":11424:11436  _msgSender() */\n      jump\t// in\n    tag_117:\n        /* \"contracts/ERC1155.sol\":11405:11436  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/ERC1155.sol\":11449:11514  _beforeTokenTransfer(operator, from, to, tokenIds, amounts, data) */\n      tag_118\n        /* \"contracts/ERC1155.sol\":11470:11478  operator */\n      dup2\n        /* \"contracts/ERC1155.sol\":11480:11484  from */\n      dup8\n        /* \"contracts/ERC1155.sol\":11486:11488  to */\n      dup8\n        /* \"contracts/ERC1155.sol\":11490:11498  tokenIds */\n      dup8\n        /* \"contracts/ERC1155.sol\":11500:11507  amounts */\n      dup8\n        /* \"contracts/ERC1155.sol\":11509:11513  data */\n      dup8\n        /* \"contracts/ERC1155.sol\":11449:11469  _beforeTokenTransfer */\n      tag_119\n        /* \"contracts/ERC1155.sol\":11449:11514  _beforeTokenTransfer(operator, from, to, tokenIds, amounts, data) */\n      jump\t// in\n    tag_118:\n        /* \"contracts/ERC1155.sol\":11532:11541  uint256 i */\n      0x00\n        /* \"contracts/ERC1155.sol\":11527:11920  for (uint256 i = 0; i < tokenIds.length; ++i) {... */\n    tag_120:\n        /* \"contracts/ERC1155.sol\":11551:11559  tokenIds */\n      dup5\n        /* \"contracts/ERC1155.sol\":11551:11566  tokenIds.length */\n      mload\n        /* \"contracts/ERC1155.sol\":11547:11548  i */\n      dup2\n        /* \"contracts/ERC1155.sol\":11547:11566  i < tokenIds.length */\n      lt\n        /* \"contracts/ERC1155.sol\":11527:11920  for (uint256 i = 0; i < tokenIds.length; ++i) {... */\n      iszero\n      tag_121\n      jumpi\n        /* \"contracts/ERC1155.sol\":11588:11603  uint256 tokenId */\n      0x00\n        /* \"contracts/ERC1155.sol\":11606:11614  tokenIds */\n      dup6\n        /* \"contracts/ERC1155.sol\":11615:11616  i */\n      dup3\n        /* \"contracts/ERC1155.sol\":11606:11617  tokenIds[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_123\n      jumpi\n      tag_124\n      tag_125\n      jump\t// in\n    tag_124:\n    tag_123:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/ERC1155.sol\":11588:11617  uint256 tokenId = tokenIds[i] */\n      swap1\n      pop\n        /* \"contracts/ERC1155.sol\":11632:11646  uint256 amount */\n      0x00\n        /* \"contracts/ERC1155.sol\":11649:11656  amounts */\n      dup6\n        /* \"contracts/ERC1155.sol\":11657:11658  i */\n      dup4\n        /* \"contracts/ERC1155.sol\":11649:11659  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_126\n      jumpi\n      tag_127\n      tag_125\n      jump\t// in\n    tag_127:\n    tag_126:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/ERC1155.sol\":11632:11659  uint256 amount = amounts[i] */\n      swap1\n      pop\n        /* \"contracts/ERC1155.sol\":11703:11834  _balances[tokenId][from].sub(... */\n      tag_128\n        /* \"contracts/ERC1155.sol\":11750:11756  amount */\n      dup2\n        /* \"contracts/ERC1155.sol\":11703:11834  _balances[tokenId][from].sub(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      data_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf\n      0x2a\n      swap2\n      codecopy\n        /* \"contracts/ERC1155.sol\":11703:11712  _balances */\n      0x03\n        /* \"contracts/ERC1155.sol\":11703:11721  _balances[tokenId] */\n      0x00\n        /* \"contracts/ERC1155.sol\":11713:11720  tokenId */\n      dup7\n        /* \"contracts/ERC1155.sol\":11703:11721  _balances[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155.sol\":11703:11727  _balances[tokenId][from] */\n      0x00\n        /* \"contracts/ERC1155.sol\":11722:11726  from */\n      dup14\n        /* \"contracts/ERC1155.sol\":11703:11727  _balances[tokenId][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC1155.sol\":11703:11731  _balances[tokenId][from].sub */\n      tag_129\n      swap1\n        /* \"contracts/ERC1155.sol\":11703:11834  _balances[tokenId][from].sub(... */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_128:\n        /* \"contracts/ERC1155.sol\":11676:11685  _balances */\n      0x03\n        /* \"contracts/ERC1155.sol\":11676:11694  _balances[tokenId] */\n      0x00\n        /* \"contracts/ERC1155.sol\":11686:11693  tokenId */\n      dup5\n        /* \"contracts/ERC1155.sol\":11676:11694  _balances[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155.sol\":11676:11700  _balances[tokenId][from] */\n      0x00\n        /* \"contracts/ERC1155.sol\":11695:11699  from */\n      dup12\n        /* \"contracts/ERC1155.sol\":11676:11700  _balances[tokenId][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155.sol\":11676:11834  _balances[tokenId][from] = _balances[tokenId][from].sub(... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC1155.sol\":11874:11908  _balances[tokenId][to].add(amount) */\n      tag_130\n        /* \"contracts/ERC1155.sol\":11901:11907  amount */\n      dup2\n        /* \"contracts/ERC1155.sol\":11874:11883  _balances */\n      0x03\n        /* \"contracts/ERC1155.sol\":11874:11892  _balances[tokenId] */\n      0x00\n        /* \"contracts/ERC1155.sol\":11884:11891  tokenId */\n      dup6\n        /* \"contracts/ERC1155.sol\":11874:11892  _balances[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155.sol\":11874:11896  _balances[tokenId][to] */\n      0x00\n        /* \"contracts/ERC1155.sol\":11893:11895  to */\n      dup12\n        /* \"contracts/ERC1155.sol\":11874:11896  _balances[tokenId][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC1155.sol\":11874:11900  _balances[tokenId][to].add */\n      tag_131\n      swap1\n        /* \"contracts/ERC1155.sol\":11874:11908  _balances[tokenId][to].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_130:\n        /* \"contracts/ERC1155.sol\":11849:11858  _balances */\n      0x03\n        /* \"contracts/ERC1155.sol\":11849:11867  _balances[tokenId] */\n      0x00\n        /* \"contracts/ERC1155.sol\":11859:11866  tokenId */\n      dup5\n        /* \"contracts/ERC1155.sol\":11849:11867  _balances[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155.sol\":11849:11871  _balances[tokenId][to] */\n      0x00\n        /* \"contracts/ERC1155.sol\":11868:11870  to */\n      dup11\n        /* \"contracts/ERC1155.sol\":11849:11871  _balances[tokenId][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155.sol\":11849:11908  _balances[tokenId][to] = _balances[tokenId][to].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC1155.sol\":11573:11920  {... */\n      pop\n      pop\n        /* \"contracts/ERC1155.sol\":11568:11571  ++i */\n      dup1\n      tag_132\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n      swap1\n      pop\n        /* \"contracts/ERC1155.sol\":11527:11920  for (uint256 i = 0; i < tokenIds.length; ++i) {... */\n      jump(tag_120)\n    tag_121:\n      pop\n        /* \"contracts/ERC1155.sol\":11967:11969  to */\n      dup5\n        /* \"contracts/ERC1155.sol\":11937:11989  TransferBatch(operator, from, to, tokenIds, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155.sol\":11961:11965  from */\n      dup7\n        /* \"contracts/ERC1155.sol\":11937:11989  TransferBatch(operator, from, to, tokenIds, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155.sol\":11951:11959  operator */\n      dup3\n        /* \"contracts/ERC1155.sol\":11937:11989  TransferBatch(operator, from, to, tokenIds, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"contracts/ERC1155.sol\":11971:11979  tokenIds */\n      dup8\n        /* \"contracts/ERC1155.sol\":11981:11988  amounts */\n      dup8\n        /* \"contracts/ERC1155.sol\":11937:11989  TransferBatch(operator, from, to, tokenIds, amounts) */\n      mload(0x40)\n      tag_134\n      swap3\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/ERC1155.sol\":12002:12082  _doSafeBatchTransferAcceptanceCheck(operator, from, to, tokenIds, amounts, data) */\n      tag_136\n        /* \"contracts/ERC1155.sol\":12038:12046  operator */\n      dup2\n        /* \"contracts/ERC1155.sol\":12048:12052  from */\n      dup8\n        /* \"contracts/ERC1155.sol\":12054:12056  to */\n      dup8\n        /* \"contracts/ERC1155.sol\":12058:12066  tokenIds */\n      dup8\n        /* \"contracts/ERC1155.sol\":12068:12075  amounts */\n      dup8\n        /* \"contracts/ERC1155.sol\":12077:12081  data */\n      dup8\n        /* \"contracts/ERC1155.sol\":12002:12037  _doSafeBatchTransferAcceptanceCheck */\n      tag_137\n        /* \"contracts/ERC1155.sol\":12002:12082  _doSafeBatchTransferAcceptanceCheck(operator, from, to, tokenIds, amounts, data) */\n      jump\t// in\n    tag_136:\n        /* \"contracts/ERC1155.sol\":11047:12090  {... */\n      pop\n        /* \"contracts/ERC1155.sol\":10810:12090  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155.sol\":5276:5910  function balanceOfBatch(... */\n    tag_46:\n        /* \"contracts/ERC1155.sol\":5440:5456  uint256[] memory */\n      0x60\n        /* \"contracts/ERC1155.sol\":5501:5504  ids */\n      dup2\n        /* \"contracts/ERC1155.sol\":5501:5511  ids.length */\n      mload\n        /* \"contracts/ERC1155.sol\":5482:5490  accounts */\n      dup4\n        /* \"contracts/ERC1155.sol\":5482:5497  accounts.length */\n      mload\n        /* \"contracts/ERC1155.sol\":5482:5511  accounts.length == ids.length */\n      eq\n        /* \"contracts/ERC1155.sol\":5474:5557  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_139:\n        /* \"contracts/ERC1155.sol\":5570:5600  uint256[] memory batchBalances */\n      0x00\n        /* \"contracts/ERC1155.sol\":5617:5625  accounts */\n      dup4\n        /* \"contracts/ERC1155.sol\":5617:5632  accounts.length */\n      mload\n        /* \"contracts/ERC1155.sol\":5603:5633  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_142\n      jumpi\n      tag_143\n      tag_144\n      jump\t// in\n    tag_143:\n    tag_142:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_145\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_145:\n      pop\n        /* \"contracts/ERC1155.sol\":5570:5633  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"contracts/ERC1155.sol\":5651:5660  uint256 i */\n      0x00\n        /* \"contracts/ERC1155.sol\":5646:5870  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_146:\n        /* \"contracts/ERC1155.sol\":5670:5678  accounts */\n      dup5\n        /* \"contracts/ERC1155.sol\":5670:5685  accounts.length */\n      mload\n        /* \"contracts/ERC1155.sol\":5666:5667  i */\n      dup2\n        /* \"contracts/ERC1155.sol\":5666:5685  i < accounts.length */\n      lt\n        /* \"contracts/ERC1155.sol\":5646:5870  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_147\n      jumpi\n        /* \"contracts/ERC1155.sol\":5738:5739  0 */\n      0x00\n        /* \"contracts/ERC1155.sol\":5715:5740  accounts[i] != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155.sol\":5715:5723  accounts */\n      dup6\n        /* \"contracts/ERC1155.sol\":5724:5725  i */\n      dup3\n        /* \"contracts/ERC1155.sol\":5715:5726  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_149\n      jumpi\n      tag_150\n      tag_125\n      jump\t// in\n    tag_150:\n    tag_149:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/ERC1155.sol\":5715:5740  accounts[i] != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERC1155.sol\":5707:5794  require(accounts[i] != address(0), \"ERC1155: batch balance query for the zero address\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap1\n      tag_153\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_151:\n        /* \"contracts/ERC1155.sol\":5828:5837  _balances */\n      0x03\n        /* \"contracts/ERC1155.sol\":5828:5845  _balances[ids[i]] */\n      0x00\n        /* \"contracts/ERC1155.sol\":5838:5841  ids */\n      dup6\n        /* \"contracts/ERC1155.sol\":5842:5843  i */\n      dup4\n        /* \"contracts/ERC1155.sol\":5838:5844  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_154\n      jumpi\n      tag_155\n      tag_125\n      jump\t// in\n    tag_155:\n    tag_154:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/ERC1155.sol\":5828:5845  _balances[ids[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155.sol\":5828:5858  _balances[ids[i]][accounts[i]] */\n      0x00\n        /* \"contracts/ERC1155.sol\":5846:5854  accounts */\n      dup7\n        /* \"contracts/ERC1155.sol\":5855:5856  i */\n      dup4\n        /* \"contracts/ERC1155.sol\":5846:5857  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_156\n      jumpi\n      tag_157\n      tag_125\n      jump\t// in\n    tag_157:\n    tag_156:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/ERC1155.sol\":5828:5858  _balances[ids[i]][accounts[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC1155.sol\":5809:5822  batchBalances */\n      dup3\n        /* \"contracts/ERC1155.sol\":5823:5824  i */\n      dup3\n        /* \"contracts/ERC1155.sol\":5809:5825  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_158\n      jumpi\n      tag_159\n      tag_125\n      jump\t// in\n    tag_159:\n    tag_158:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/ERC1155.sol\":5809:5858  batchBalances[i] = _balances[ids[i]][accounts[i]] */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/ERC1155.sol\":5687:5690  ++i */\n      dup1\n      tag_160\n      swap1\n      tag_133\n      jump\t// in\n    tag_160:\n      swap1\n      pop\n        /* \"contracts/ERC1155.sol\":5646:5870  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_146)\n    tag_147:\n      pop\n        /* \"contracts/ERC1155.sol\":5889:5902  batchBalances */\n      dup1\n        /* \"contracts/ERC1155.sol\":5882:5902  return batchBalances */\n      swap2\n      pop\n      pop\n        /* \"contracts/ERC1155.sol\":5276:5910  function balanceOfBatch(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155.sol\":1778:1882  function symbol() public view virtual override returns (string memory) {... */\n    tag_50:\n        /* \"contracts/ERC1155.sol\":1834:1847  string memory */\n      0x60\n        /* \"contracts/ERC1155.sol\":1867:1874  _symbol */\n      0x0a\n        /* \"contracts/ERC1155.sol\":1860:1874  return _symbol */\n      dup1\n      sload\n      tag_162\n      swap1\n      tag_94\n      jump\t// in\n    tag_162:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_163\n      swap1\n      tag_94\n      jump\t// in\n    tag_163:\n      dup1\n      iszero\n      tag_164\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_165\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_164)\n    tag_165:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_166:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_166\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_164:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/ERC1155.sol\":1778:1882  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC1155.sol\":6272:6583  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_55:\n        /* \"contracts/ERC1155.sol\":6391:6399  operator */\n      dup2\n        /* \"contracts/ERC1155.sol\":6375:6399  _msgSender() != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155.sol\":6375:6387  _msgSender() */\n      tag_168\n        /* \"contracts/ERC1155.sol\":6375:6385  _msgSender */\n      tag_110\n        /* \"contracts/ERC1155.sol\":6375:6387  _msgSender() */\n      jump\t// in\n    tag_168:\n        /* \"contracts/ERC1155.sol\":6375:6399  _msgSender() != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERC1155.sol\":6367:6445  require(_msgSender() != operator, \"ERC1155: setting approval status for self\") */\n      tag_169\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_170\n      swap1\n      tag_171\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_169:\n        /* \"contracts/ERC1155.sol\":6503:6511  approved */\n      dup1\n        /* \"contracts/ERC1155.sol\":6458:6476  _operatorApprovals */\n      0x04\n        /* \"contracts/ERC1155.sol\":6458:6490  _operatorApprovals[_msgSender()] */\n      0x00\n        /* \"contracts/ERC1155.sol\":6477:6489  _msgSender() */\n      tag_172\n        /* \"contracts/ERC1155.sol\":6477:6487  _msgSender */\n      tag_110\n        /* \"contracts/ERC1155.sol\":6477:6489  _msgSender() */\n      jump\t// in\n    tag_172:\n        /* \"contracts/ERC1155.sol\":6458:6490  _operatorApprovals[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155.sol\":6458:6500  _operatorApprovals[_msgSender()][operator] */\n      0x00\n        /* \"contracts/ERC1155.sol\":6491:6499  operator */\n      dup5\n        /* \"contracts/ERC1155.sol\":6458:6500  _operatorApprovals[_msgSender()][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/ERC1155.sol\":6458:6511  _operatorApprovals[_msgSender()][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC1155.sol\":6556:6564  operator */\n      dup2\n        /* \"contracts/ERC1155.sol\":6527:6575  ApprovalForAll(_msgSender(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155.sol\":6542:6554  _msgSender() */\n      tag_173\n        /* \"contracts/ERC1155.sol\":6542:6552  _msgSender */\n      tag_110\n        /* \"contracts/ERC1155.sol\":6542:6554  _msgSender() */\n      jump\t// in\n    tag_173:\n        /* \"contracts/ERC1155.sol\":6527:6575  ApprovalForAll(_msgSender(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"contracts/ERC1155.sol\":6566:6574  approved */\n      dup4\n        /* \"contracts/ERC1155.sol\":6527:6575  ApprovalForAll(_msgSender(), operator, approved) */\n      mload(0x40)\n      tag_174\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC1155.sol\":6272:6583  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155.sol\":1023:1056  string public tokenURIPrefix = \"\" */\n    tag_57:\n      0x05\n      dup1\n      sload\n      tag_175\n      swap1\n      tag_94\n      jump\t// in\n    tag_175:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_176\n      swap1\n      tag_94\n      jump\t// in\n    tag_176:\n      dup1\n      iszero\n      tag_177\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_178\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_177)\n    tag_178:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_179:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_179\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_177:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/ERC1155.sol\":2436:2557  function royaltyFee(uint256 tokenId) public view override returns(uint256) {... */\n    tag_62:\n        /* \"contracts/ERC1155.sol\":2502:2509  uint256 */\n      0x00\n        /* \"contracts/ERC1155.sol\":2529:2540  _royaltyFee */\n      0x02\n        /* \"contracts/ERC1155.sol\":2529:2549  _royaltyFee[tokenId] */\n      0x00\n        /* \"contracts/ERC1155.sol\":2541:2548  tokenId */\n      dup4\n        /* \"contracts/ERC1155.sol\":2529:2549  _royaltyFee[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC1155.sol\":2522:2549  return _royaltyFee[tokenId] */\n      swap1\n      pop\n        /* \"contracts/ERC1155.sol\":2436:2557  function royaltyFee(uint256 tokenId) public view override returns(uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155.sol\":3425:3981  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_66:\n        /* \"contracts/ERC1155.sol\":3498:3511  string memory */\n      0x60\n        /* \"contracts/ERC1155.sol\":3532:3548  _exists(tokenId) */\n      tag_182\n        /* \"contracts/ERC1155.sol\":3540:3547  tokenId */\n      dup3\n        /* \"contracts/ERC1155.sol\":3532:3539  _exists */\n      tag_84\n        /* \"contracts/ERC1155.sol\":3532:3548  _exists(tokenId) */\n      jump\t// in\n    tag_182:\n        /* \"contracts/ERC1155.sol\":3524:3601  require(_exists(tokenId), \"ERC1155Metadata: URI query for nonexistent token\") */\n      tag_183\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_184\n      swap1\n      tag_185\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_183:\n        /* \"contracts/ERC1155.sol\":3612:3635  string memory _tokenURI */\n      0x00\n        /* \"contracts/ERC1155.sol\":3638:3648  _tokenURIs */\n      0x06\n        /* \"contracts/ERC1155.sol\":3638:3657  _tokenURIs[tokenId] */\n      0x00\n        /* \"contracts/ERC1155.sol\":3649:3656  tokenId */\n      dup5\n        /* \"contracts/ERC1155.sol\":3638:3657  _tokenURIs[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155.sol\":3612:3657  string memory _tokenURI = _tokenURIs[tokenId] */\n      dup1\n      sload\n      tag_186\n      swap1\n      tag_94\n      jump\t// in\n    tag_186:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_187\n      swap1\n      tag_94\n      jump\t// in\n    tag_187:\n      dup1\n      iszero\n      tag_188\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_189\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_188)\n    tag_189:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_190:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_190\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_188:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/ERC1155.sol\":3668:3686  string memory base */\n      0x00\n        /* \"contracts/ERC1155.sol\":3689:3703  tokenURIPrefix */\n      0x05\n        /* \"contracts/ERC1155.sol\":3668:3703  string memory base = tokenURIPrefix */\n      dup1\n      sload\n      tag_191\n      swap1\n      tag_94\n      jump\t// in\n    tag_191:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_192\n      swap1\n      tag_94\n      jump\t// in\n    tag_192:\n      dup1\n      iszero\n      tag_193\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_194\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_193)\n    tag_194:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_195:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_195\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_193:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/ERC1155.sol\":3742:3743  0 */\n      0x00\n        /* \"contracts/ERC1155.sol\":3726:3730  base */\n      dup2\n        /* \"contracts/ERC1155.sol\":3720:3738  bytes(base).length */\n      mload\n        /* \"contracts/ERC1155.sol\":3720:3743  bytes(base).length == 0 */\n      sub\n        /* \"contracts/ERC1155.sol\":3716:3788  if (bytes(base).length == 0) {... */\n      tag_196\n      jumpi\n        /* \"contracts/ERC1155.sol\":3767:3776  _tokenURI */\n      dup2\n        /* \"contracts/ERC1155.sol\":3760:3776  return _tokenURI */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_181)\n        /* \"contracts/ERC1155.sol\":3716:3788  if (bytes(base).length == 0) {... */\n    tag_196:\n        /* \"contracts/ERC1155.sol\":3828:3829  0 */\n      0x00\n        /* \"contracts/ERC1155.sol\":3808:3817  _tokenURI */\n      dup3\n        /* \"contracts/ERC1155.sol\":3802:3825  bytes(_tokenURI).length */\n      mload\n        /* \"contracts/ERC1155.sol\":3802:3829  bytes(_tokenURI).length > 0 */\n      gt\n        /* \"contracts/ERC1155.sol\":3798:3906  if (bytes(_tokenURI).length > 0) {... */\n      iszero\n      tag_197\n      jumpi\n        /* \"contracts/ERC1155.sol\":3877:3881  base */\n      dup1\n        /* \"contracts/ERC1155.sol\":3883:3892  _tokenURI */\n      dup3\n        /* \"contracts/ERC1155.sol\":3860:3893  abi.encodePacked(base, _tokenURI) */\n      add(0x20, mload(0x40))\n      tag_198\n      swap3\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/ERC1155.sol\":3846:3894  return string(abi.encodePacked(base, _tokenURI)) */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_181)\n        /* \"contracts/ERC1155.sol\":3798:3906  if (bytes(_tokenURI).length > 0) {... */\n    tag_197:\n        /* \"contracts/ERC1155.sol\":3947:3951  base */\n      dup1\n        /* \"contracts/ERC1155.sol\":3953:3971  tokenId.toString() */\n      tag_200\n        /* \"contracts/ERC1155.sol\":3953:3960  tokenId */\n      dup6\n        /* \"contracts/ERC1155.sol\":3953:3969  tokenId.toString */\n      tag_201\n        /* \"contracts/ERC1155.sol\":3953:3971  tokenId.toString() */\n      jump\t// in\n    tag_200:\n        /* \"contracts/ERC1155.sol\":3930:3972  abi.encodePacked(base, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_202\n      swap3\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/ERC1155.sol\":3916:3973  return string(abi.encodePacked(base, tokenId.toString())) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/ERC1155.sol\":3425:3981  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_181:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155.sol\":2730:2856  function getCreator(uint256 tokenId) public view virtual override returns(address) {... */\n    tag_70:\n        /* \"contracts/ERC1155.sol\":2804:2811  address */\n      0x00\n        /* \"contracts/ERC1155.sol\":2831:2839  creators */\n      0x01\n        /* \"contracts/ERC1155.sol\":2831:2848  creators[tokenId] */\n      0x00\n        /* \"contracts/ERC1155.sol\":2840:2847  tokenId */\n      dup4\n        /* \"contracts/ERC1155.sol\":2831:2848  creators[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155.sol\":2824:2848  return creators[tokenId] */\n      swap1\n      pop\n        /* \"contracts/ERC1155.sol\":2730:2856  function getCreator(uint256 tokenId) public view virtual override returns(address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155.sol\":6872:7032  function isApprovedForAll(address account, address operator) public view override returns (bool) {... */\n    tag_76:\n        /* \"contracts/ERC1155.sol\":6963:6967  bool */\n      0x00\n        /* \"contracts/ERC1155.sol\":6987:7005  _operatorApprovals */\n      0x04\n        /* \"contracts/ERC1155.sol\":6987:7014  _operatorApprovals[account] */\n      0x00\n        /* \"contracts/ERC1155.sol\":7006:7013  account */\n      dup5\n        /* \"contracts/ERC1155.sol\":6987:7014  _operatorApprovals[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155.sol\":6987:7024  _operatorApprovals[account][operator] */\n      0x00\n        /* \"contracts/ERC1155.sol\":7015:7023  operator */\n      dup4\n        /* \"contracts/ERC1155.sol\":6987:7024  _operatorApprovals[account][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/ERC1155.sol\":6980:7024  return _operatorApprovals[account][operator] */\n      swap1\n      pop\n        /* \"contracts/ERC1155.sol\":6872:7032  function isApprovedForAll(address account, address operator) public view override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155.sol\":8195:9159  function safeTransferFrom(... */\n    tag_81:\n        /* \"contracts/ERC1155.sol\":8440:8441  0 */\n      0x00\n        /* \"contracts/ERC1155.sol\":8426:8442  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155.sol\":8426:8428  to */\n      dup5\n        /* \"contracts/ERC1155.sol\":8426:8442  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERC1155.sol\":8418:8484  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_206\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_207\n      swap1\n      tag_108\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_206:\n        /* \"contracts/ERC1155.sol\":8525:8537  _msgSender() */\n      tag_208\n        /* \"contracts/ERC1155.sol\":8525:8535  _msgSender */\n      tag_110\n        /* \"contracts/ERC1155.sol\":8525:8537  _msgSender() */\n      jump\t// in\n    tag_208:\n        /* \"contracts/ERC1155.sol\":8517:8537  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155.sol\":8517:8521  from */\n      dup6\n        /* \"contracts/ERC1155.sol\":8517:8537  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ERC1155.sol\":8517:8577  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      dup1\n      tag_209\n      jumpi\n      pop\n        /* \"contracts/ERC1155.sol\":8541:8577  isApprovedForAll(from, _msgSender()) */\n      tag_210\n        /* \"contracts/ERC1155.sol\":8558:8562  from */\n      dup6\n        /* \"contracts/ERC1155.sol\":8564:8576  _msgSender() */\n      tag_211\n        /* \"contracts/ERC1155.sol\":8564:8574  _msgSender */\n      tag_110\n        /* \"contracts/ERC1155.sol\":8564:8576  _msgSender() */\n      jump\t// in\n    tag_211:\n        /* \"contracts/ERC1155.sol\":8541:8557  isApprovedForAll */\n      tag_76\n        /* \"contracts/ERC1155.sol\":8541:8577  isApprovedForAll(from, _msgSender()) */\n      jump\t// in\n    tag_210:\n        /* \"contracts/ERC1155.sol\":8517:8577  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n    tag_209:\n        /* \"contracts/ERC1155.sol\":8495:8646  require(... */\n      tag_212\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_213\n      swap1\n      tag_214\n      jump\t// in\n    tag_213:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_212:\n        /* \"contracts/ERC1155.sol\":8659:8675  address operator */\n      0x00\n        /* \"contracts/ERC1155.sol\":8678:8690  _msgSender() */\n      tag_215\n        /* \"contracts/ERC1155.sol\":8678:8688  _msgSender */\n      tag_110\n        /* \"contracts/ERC1155.sol\":8678:8690  _msgSender() */\n      jump\t// in\n    tag_215:\n        /* \"contracts/ERC1155.sol\":8659:8690  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/ERC1155.sol\":8703:8804  _beforeTokenTransfer(operator, from, to, _asSingletonArray(tokenId), _asSingletonArray(amount), data) */\n      tag_216\n        /* \"contracts/ERC1155.sol\":8724:8732  operator */\n      dup2\n        /* \"contracts/ERC1155.sol\":8734:8738  from */\n      dup8\n        /* \"contracts/ERC1155.sol\":8740:8742  to */\n      dup8\n        /* \"contracts/ERC1155.sol\":8744:8770  _asSingletonArray(tokenId) */\n      tag_217\n        /* \"contracts/ERC1155.sol\":8762:8769  tokenId */\n      dup9\n        /* \"contracts/ERC1155.sol\":8744:8761  _asSingletonArray */\n      tag_218\n        /* \"contracts/ERC1155.sol\":8744:8770  _asSingletonArray(tokenId) */\n      jump\t// in\n    tag_217:\n        /* \"contracts/ERC1155.sol\":8772:8797  _asSingletonArray(amount) */\n      tag_219\n        /* \"contracts/ERC1155.sol\":8790:8796  amount */\n      dup9\n        /* \"contracts/ERC1155.sol\":8772:8789  _asSingletonArray */\n      tag_218\n        /* \"contracts/ERC1155.sol\":8772:8797  _asSingletonArray(amount) */\n      jump\t// in\n    tag_219:\n        /* \"contracts/ERC1155.sol\":8799:8803  data */\n      dup8\n        /* \"contracts/ERC1155.sol\":8703:8723  _beforeTokenTransfer */\n      tag_119\n        /* \"contracts/ERC1155.sol\":8703:8804  _beforeTokenTransfer(operator, from, to, _asSingletonArray(tokenId), _asSingletonArray(amount), data) */\n      jump\t// in\n    tag_216:\n        /* \"contracts/ERC1155.sol\":8844:8926  _balances[tokenId][from].sub(amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_220\n        /* \"contracts/ERC1155.sol\":8873:8879  amount */\n      dup4\n        /* \"contracts/ERC1155.sol\":8844:8926  _balances[tokenId][from].sub(amount, \"ERC1155: insufficient balance for transfer\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      data_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf\n      0x2a\n      swap2\n      codecopy\n        /* \"contracts/ERC1155.sol\":8844:8853  _balances */\n      0x03\n        /* \"contracts/ERC1155.sol\":8844:8862  _balances[tokenId] */\n      0x00\n        /* \"contracts/ERC1155.sol\":8854:8861  tokenId */\n      dup9\n        /* \"contracts/ERC1155.sol\":8844:8862  _balances[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155.sol\":8844:8868  _balances[tokenId][from] */\n      0x00\n        /* \"contracts/ERC1155.sol\":8863:8867  from */\n      dup11\n        /* \"contracts/ERC1155.sol\":8844:8868  _balances[tokenId][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC1155.sol\":8844:8872  _balances[tokenId][from].sub */\n      tag_129\n      swap1\n        /* \"contracts/ERC1155.sol\":8844:8926  _balances[tokenId][from].sub(amount, \"ERC1155: insufficient balance for transfer\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_220:\n        /* \"contracts/ERC1155.sol\":8817:8826  _balances */\n      0x03\n        /* \"contracts/ERC1155.sol\":8817:8835  _balances[tokenId] */\n      0x00\n        /* \"contracts/ERC1155.sol\":8827:8834  tokenId */\n      dup7\n        /* \"contracts/ERC1155.sol\":8817:8835  _balances[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155.sol\":8817:8841  _balances[tokenId][from] */\n      0x00\n        /* \"contracts/ERC1155.sol\":8836:8840  from */\n      dup9\n        /* \"contracts/ERC1155.sol\":8817:8841  _balances[tokenId][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155.sol\":8817:8926  _balances[tokenId][from] = _balances[tokenId][from].sub(amount, \"ERC1155: insufficient balance for transfer\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC1155.sol\":8962:8996  _balances[tokenId][to].add(amount) */\n      tag_221\n        /* \"contracts/ERC1155.sol\":8989:8995  amount */\n      dup4\n        /* \"contracts/ERC1155.sol\":8962:8971  _balances */\n      0x03\n        /* \"contracts/ERC1155.sol\":8962:8980  _balances[tokenId] */\n      0x00\n        /* \"contracts/ERC1155.sol\":8972:8979  tokenId */\n      dup8\n        /* \"contracts/ERC1155.sol\":8962:8980  _balances[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155.sol\":8962:8984  _balances[tokenId][to] */\n      0x00\n        /* \"contracts/ERC1155.sol\":8981:8983  to */\n      dup9\n        /* \"contracts/ERC1155.sol\":8962:8984  _balances[tokenId][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC1155.sol\":8962:8988  _balances[tokenId][to].add */\n      tag_131\n      swap1\n        /* \"contracts/ERC1155.sol\":8962:8996  _balances[tokenId][to].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_221:\n        /* \"contracts/ERC1155.sol\":8937:8946  _balances */\n      0x03\n        /* \"contracts/ERC1155.sol\":8937:8955  _balances[tokenId] */\n      0x00\n        /* \"contracts/ERC1155.sol\":8947:8954  tokenId */\n      dup7\n        /* \"contracts/ERC1155.sol\":8937:8955  _balances[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155.sol\":8937:8959  _balances[tokenId][to] */\n      0x00\n        /* \"contracts/ERC1155.sol\":8956:8958  to */\n      dup8\n        /* \"contracts/ERC1155.sol\":8937:8959  _balances[tokenId][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155.sol\":8937:8996  _balances[tokenId][to] = _balances[tokenId][to].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC1155.sol\":9045:9047  to */\n      dup5\n        /* \"contracts/ERC1155.sol\":9014:9065  TransferSingle(operator, from, to, tokenId, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155.sol\":9039:9043  from */\n      dup7\n        /* \"contracts/ERC1155.sol\":9014:9065  TransferSingle(operator, from, to, tokenId, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155.sol\":9029:9037  operator */\n      dup3\n        /* \"contracts/ERC1155.sol\":9014:9065  TransferSingle(operator, from, to, tokenId, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n        /* \"contracts/ERC1155.sol\":9049:9056  tokenId */\n      dup8\n        /* \"contracts/ERC1155.sol\":9058:9064  amount */\n      dup8\n        /* \"contracts/ERC1155.sol\":9014:9065  TransferSingle(operator, from, to, tokenId, amount) */\n      mload(0x40)\n      tag_222\n      swap3\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/ERC1155.sol\":9078:9151  _doSafeTransferAcceptanceCheck(operator, from, to, tokenId, amount, data) */\n      tag_224\n        /* \"contracts/ERC1155.sol\":9109:9117  operator */\n      dup2\n        /* \"contracts/ERC1155.sol\":9119:9123  from */\n      dup8\n        /* \"contracts/ERC1155.sol\":9125:9127  to */\n      dup8\n        /* \"contracts/ERC1155.sol\":9129:9136  tokenId */\n      dup8\n        /* \"contracts/ERC1155.sol\":9138:9144  amount */\n      dup8\n        /* \"contracts/ERC1155.sol\":9146:9150  data */\n      dup8\n        /* \"contracts/ERC1155.sol\":9078:9108  _doSafeTransferAcceptanceCheck */\n      tag_225\n        /* \"contracts/ERC1155.sol\":9078:9151  _doSafeTransferAcceptanceCheck(operator, from, to, tokenId, amount, data) */\n      jump\t// in\n    tag_224:\n        /* \"contracts/ERC1155.sol\":8407:9159  {... */\n      pop\n        /* \"contracts/ERC1155.sol\":8195:9159  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155.sol\":3989:4116  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_84:\n        /* \"contracts/ERC1155.sol\":4054:4058  bool */\n      0x00\n        /* \"contracts/ERC1155.sol\":4078:4108  _tokenOwners.contains(tokenId) */\n      tag_227\n        /* \"contracts/ERC1155.sol\":4100:4107  tokenId */\n      dup3\n        /* \"contracts/ERC1155.sol\":4078:4090  _tokenOwners */\n      0x07\n        /* \"contracts/ERC1155.sol\":4078:4099  _tokenOwners.contains */\n      tag_228\n      swap1\n        /* \"contracts/ERC1155.sol\":4078:4108  _tokenOwners.contains(tokenId) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_227:\n        /* \"contracts/ERC1155.sol\":4071:4108  return _tokenOwners.contains(tokenId) */\n      swap1\n      pop\n        /* \"contracts/ERC1155.sol\":3989:4116  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/External/EnumerableMap.sol\":2919:3042  function length(UintToAddressMap storage map) internal view returns (uint256) {... */\n    tag_101:\n        /* \"contracts/External/EnumerableMap.sol\":2988:2995  uint256 */\n      0x00\n        /* \"contracts/External/EnumerableMap.sol\":3015:3034  _length(map._inner) */\n      tag_230\n        /* \"contracts/External/EnumerableMap.sol\":3023:3026  map */\n      dup3\n        /* \"contracts/External/EnumerableMap.sol\":3023:3033  map._inner */\n      0x00\n      add\n        /* \"contracts/External/EnumerableMap.sol\":3015:3022  _length */\n      tag_231\n        /* \"contracts/External/EnumerableMap.sol\":3015:3034  _length(map._inner) */\n      jump\t// in\n    tag_230:\n        /* \"contracts/External/EnumerableMap.sol\":3008:3034  return _length(map._inner) */\n      swap1\n      pop\n        /* \"contracts/External/EnumerableMap.sol\":2919:3042  function length(UintToAddressMap storage map) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/External/Context.sol\":145:260  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_110:\n        /* \"contracts/External/Context.sol\":198:213  address payable */\n      0x00\n        /* \"contracts/External/Context.sol\":241:251  msg.sender */\n      caller\n        /* \"contracts/External/Context.sol\":226:252  return payable(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/External/Context.sol\":145:260  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC1155.sol\":16026:16267  function _beforeTokenTransfer(... */\n    tag_119:\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/External/SafeMath.sol\":754:946  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_129:\n        /* \"contracts/External/SafeMath.sol\":840:847  uint256 */\n      0x00\n        /* \"contracts/External/SafeMath.sol\":873:874  a */\n      dup4\n        /* \"contracts/External/SafeMath.sol\":868:869  b */\n      dup4\n        /* \"contracts/External/SafeMath.sol\":868:874  b <= a */\n      gt\n      iszero\n        /* \"contracts/External/SafeMath.sol\":876:888  errorMessage */\n      dup3\n        /* \"contracts/External/SafeMath.sol\":860:889  require(b <= a, errorMessage) */\n      swap1\n      tag_235\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_236\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_236:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_235:\n      pop\n        /* \"contracts/External/SafeMath.sol\":900:909  uint256 c */\n      0x00\n        /* \"contracts/External/SafeMath.sol\":916:917  b */\n      dup4\n        /* \"contracts/External/SafeMath.sol\":912:913  a */\n      dup6\n        /* \"contracts/External/SafeMath.sol\":912:917  a - b */\n      tag_237\n      swap2\n      swap1\n      tag_238\n      jump\t// in\n    tag_237:\n        /* \"contracts/External/SafeMath.sol\":900:917  uint256 c = a - b */\n      swap1\n      pop\n        /* \"contracts/External/SafeMath.sol\":937:938  c */\n      dup1\n        /* \"contracts/External/SafeMath.sol\":930:938  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/External/SafeMath.sol\":754:946  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/External/SafeMath.sol\":302:483  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_131:\n        /* \"contracts/External/SafeMath.sol\":360:367  uint256 */\n      0x00\n        /* \"contracts/External/SafeMath.sol\":380:389  uint256 c */\n      dup1\n        /* \"contracts/External/SafeMath.sol\":396:397  b */\n      dup3\n        /* \"contracts/External/SafeMath.sol\":392:393  a */\n      dup5\n        /* \"contracts/External/SafeMath.sol\":392:397  a + b */\n      tag_240\n      swap2\n      swap1\n      tag_241\n      jump\t// in\n    tag_240:\n        /* \"contracts/External/SafeMath.sol\":380:397  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/External/SafeMath.sol\":421:422  a */\n      dup4\n        /* \"contracts/External/SafeMath.sol\":416:417  c */\n      dup2\n        /* \"contracts/External/SafeMath.sol\":416:422  c >= a */\n      lt\n      iszero\n        /* \"contracts/External/SafeMath.sol\":408:454  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_242\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_243\n      swap1\n      tag_244\n      jump\t// in\n    tag_243:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_242:\n        /* \"contracts/External/SafeMath.sol\":474:475  c */\n      dup1\n        /* \"contracts/External/SafeMath.sol\":467:475  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/External/SafeMath.sol\":302:483  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155.sol\":17055:17864  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_137:\n        /* \"contracts/ERC1155.sol\":17314:17329  to.isContract() */\n      tag_246\n        /* \"contracts/ERC1155.sol\":17314:17316  to */\n      dup5\n        /* \"contracts/ERC1155.sol\":17314:17327  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_247\n        /* \"contracts/ERC1155.sol\":17314:17329  to.isContract() */\n      jump\t// in\n    tag_246:\n        /* \"contracts/ERC1155.sol\":17310:17857  if (to.isContract()) {... */\n      iszero\n      tag_248\n      jumpi\n        /* \"contracts/ERC1155.sol\":17367:17369  to */\n      dup4\n        /* \"contracts/ERC1155.sol\":17350:17393  IERC1155Receiver(to).onERC1155BatchReceived */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc197c81\n        /* \"contracts/ERC1155.sol\":17394:17402  operator */\n      dup8\n        /* \"contracts/ERC1155.sol\":17404:17408  from */\n      dup8\n        /* \"contracts/ERC1155.sol\":17410:17418  tokenIds */\n      dup7\n        /* \"contracts/ERC1155.sol\":17420:17427  amounts */\n      dup7\n        /* \"contracts/ERC1155.sol\":17429:17433  data */\n      dup7\n        /* \"contracts/ERC1155.sol\":17350:17434  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, tokenIds, amounts, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_249\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_250\n      jump\t// in\n    tag_249:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_251\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_252\n      swap2\n      swap1\n      tag_253\n      jump\t// in\n    tag_252:\n      0x01\n    tag_251:\n        /* \"contracts/ERC1155.sol\":17346:17846  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, tokenIds, amounts, data) returns (bytes4 response) {... */\n      tag_254\n      jumpi\n      tag_258\n      tag_259\n      jump\t// in\n    tag_258:\n      dup1\n      0x08c379a0\n      sub\n      tag_257\n      jumpi\n      pop\n      tag_260\n      tag_261\n      jump\t// in\n    tag_260:\n      dup1\n      tag_262\n      jumpi\n      pop\n      jump(tag_256)\n    tag_262:\n        /* \"contracts/ERC1155.sol\":17719:17725  reason */\n      dup1\n        /* \"contracts/ERC1155.sol\":17712:17726  revert(reason) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_263\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_263:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC1155.sol\":17346:17846  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, tokenIds, amounts, data) returns (bytes4 response) {... */\n    tag_257:\n      pop\n    tag_256:\n        /* \"contracts/ERC1155.sol\":17768:17830  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap1\n      tag_265\n      jump\t// in\n    tag_264:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC1155.sol\":17346:17846  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, tokenIds, amounts, data) returns (bytes4 response) {... */\n    tag_254:\n        /* \"contracts/ERC1155.sol\":17496:17548  IERC1155Receiver(to).onERC1155BatchReceived.selector */\n      shl(0xe0, 0xbc197c81)\n        /* \"contracts/ERC1155.sol\":17484:17548  response != IERC1155Receiver(to).onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/ERC1155.sol\":17484:17492  response */\n      dup2\n        /* \"contracts/ERC1155.sol\":17484:17548  response != IERC1155Receiver(to).onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/ERC1155.sol\":17480:17643  if (response != IERC1155Receiver(to).onERC1155BatchReceived.selector) {... */\n      tag_267\n      jumpi\n        /* \"contracts/ERC1155.sol\":17573:17623  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_268\n      swap1\n      tag_269\n      jump\t// in\n    tag_268:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC1155.sol\":17480:17643  if (response != IERC1155Receiver(to).onERC1155BatchReceived.selector) {... */\n    tag_267:\n        /* \"contracts/ERC1155.sol\":17435:17658  returns (bytes4 response) {... */\n      pop\n        /* \"contracts/ERC1155.sol\":17310:17857  if (to.isContract()) {... */\n    tag_248:\n        /* \"contracts/ERC1155.sol\":17055:17864  function _doSafeBatchTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/External/Strings.sol\":388:1111  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_201:\n        /* \"contracts/External/Strings.sol\":444:457  string memory */\n      0x60\n        /* \"contracts/External/Strings.sol\":674:675  0 */\n      0x00\n        /* \"contracts/External/Strings.sol\":665:670  value */\n      dup3\n        /* \"contracts/External/Strings.sol\":665:675  value == 0 */\n      sub\n        /* \"contracts/External/Strings.sol\":661:714  if (value == 0) {... */\n      tag_271\n      jumpi\n        /* \"contracts/External/Strings.sol\":692:702  return \"0\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x01\n      dup2\n      mstore\n      0x20\n      add\n      0x3000000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n      jump(tag_270)\n        /* \"contracts/External/Strings.sol\":661:714  if (value == 0) {... */\n    tag_271:\n        /* \"contracts/External/Strings.sol\":724:736  uint256 temp */\n      0x00\n        /* \"contracts/External/Strings.sol\":739:744  value */\n      dup3\n        /* \"contracts/External/Strings.sol\":724:744  uint256 temp = value */\n      swap1\n      pop\n        /* \"contracts/External/Strings.sol\":755:769  uint256 digits */\n      0x00\n        /* \"contracts/External/Strings.sol\":780:858  while (temp != 0) {... */\n    tag_272:\n        /* \"contracts/External/Strings.sol\":795:796  0 */\n      0x00\n        /* \"contracts/External/Strings.sol\":787:791  temp */\n      dup3\n        /* \"contracts/External/Strings.sol\":787:796  temp != 0 */\n      eq\n        /* \"contracts/External/Strings.sol\":780:858  while (temp != 0) {... */\n      tag_273\n      jumpi\n        /* \"contracts/External/Strings.sol\":813:821  digits++ */\n      dup1\n      dup1\n      tag_274\n      swap1\n      tag_133\n      jump\t// in\n    tag_274:\n      swap2\n      pop\n      pop\n        /* \"contracts/External/Strings.sol\":844:846  10 */\n      0x0a\n        /* \"contracts/External/Strings.sol\":836:846  temp /= 10 */\n      dup3\n      tag_275\n      swap2\n      swap1\n      tag_276\n      jump\t// in\n    tag_275:\n      swap2\n      pop\n        /* \"contracts/External/Strings.sol\":780:858  while (temp != 0) {... */\n      jump(tag_272)\n    tag_273:\n        /* \"contracts/External/Strings.sol\":868:887  bytes memory buffer */\n      0x00\n        /* \"contracts/External/Strings.sol\":900:906  digits */\n      dup2\n        /* \"contracts/External/Strings.sol\":890:907  new bytes(digits) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_277\n      jumpi\n      tag_278\n      tag_144\n      jump\t// in\n    tag_278:\n    tag_277:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_279\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_279:\n      pop\n        /* \"contracts/External/Strings.sol\":868:907  bytes memory buffer = new bytes(digits) */\n      swap1\n      pop\n        /* \"contracts/External/Strings.sol\":918:1072  while (value != 0) {... */\n    tag_280:\n        /* \"contracts/External/Strings.sol\":934:935  0 */\n      0x00\n        /* \"contracts/External/Strings.sol\":925:930  value */\n      dup6\n        /* \"contracts/External/Strings.sol\":925:935  value != 0 */\n      eq\n        /* \"contracts/External/Strings.sol\":918:1072  while (value != 0) {... */\n      tag_281\n      jumpi\n        /* \"contracts/External/Strings.sol\":962:963  1 */\n      0x01\n        /* \"contracts/External/Strings.sol\":952:963  digits -= 1 */\n      dup3\n      tag_282\n      swap2\n      swap1\n      tag_238\n      jump\t// in\n    tag_282:\n      swap2\n      pop\n        /* \"contracts/External/Strings.sol\":1029:1031  10 */\n      0x0a\n        /* \"contracts/External/Strings.sol\":1021:1026  value */\n      dup6\n        /* \"contracts/External/Strings.sol\":1021:1031  value % 10 */\n      tag_283\n      swap2\n      swap1\n      tag_284\n      jump\t// in\n    tag_283:\n        /* \"contracts/External/Strings.sol\":1008:1010  48 */\n      0x30\n        /* \"contracts/External/Strings.sol\":1008:1032  48 + uint256(value % 10) */\n      tag_285\n      swap2\n      swap1\n      tag_241\n      jump\t// in\n    tag_285:\n        /* \"contracts/External/Strings.sol\":995:1034  bytes1(uint8(48 + uint256(value % 10))) */\n      0xf8\n      shl\n        /* \"contracts/External/Strings.sol\":978:984  buffer */\n      dup2\n        /* \"contracts/External/Strings.sol\":985:991  digits */\n      dup4\n        /* \"contracts/External/Strings.sol\":978:992  buffer[digits] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_286\n      jumpi\n      tag_287\n      tag_125\n      jump\t// in\n    tag_287:\n    tag_286:\n      0x20\n      add\n      add\n        /* \"contracts/External/Strings.sol\":978:1034  buffer[digits] = bytes1(uint8(48 + uint256(value % 10))) */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"contracts/External/Strings.sol\":1058:1060  10 */\n      0x0a\n        /* \"contracts/External/Strings.sol\":1049:1060  value /= 10 */\n      dup6\n      tag_288\n      swap2\n      swap1\n      tag_276\n      jump\t// in\n    tag_288:\n      swap5\n      pop\n        /* \"contracts/External/Strings.sol\":918:1072  while (value != 0) {... */\n      jump(tag_280)\n    tag_281:\n        /* \"contracts/External/Strings.sol\":1096:1102  buffer */\n      dup1\n        /* \"contracts/External/Strings.sol\":1082:1103  return string(buffer) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/External/Strings.sol\":388:1111  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_270:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155.sol\":17872:18070  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n    tag_218:\n        /* \"contracts/ERC1155.sol\":17938:17954  uint256[] memory */\n      0x60\n        /* \"contracts/ERC1155.sol\":17967:17989  uint256[] memory array */\n      0x00\n        /* \"contracts/ERC1155.sol\":18006:18007  1 */\n      0x01\n        /* \"contracts/ERC1155.sol\":17992:18008  new uint256[](1) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_290\n      jumpi\n      tag_291\n      tag_144\n      jump\t// in\n    tag_291:\n    tag_290:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_292\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_292:\n      pop\n        /* \"contracts/ERC1155.sol\":17967:18008  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"contracts/ERC1155.sol\":18030:18037  element */\n      dup3\n        /* \"contracts/ERC1155.sol\":18019:18024  array */\n      dup2\n        /* \"contracts/ERC1155.sol\":18025:18026  0 */\n      0x00\n        /* \"contracts/ERC1155.sol\":18019:18027  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_293\n      jumpi\n      tag_294\n      tag_125\n      jump\t// in\n    tag_294:\n    tag_293:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/ERC1155.sol\":18019:18037  array[0] = element */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/ERC1155.sol\":18057:18062  array */\n      dup1\n        /* \"contracts/ERC1155.sol\":18050:18062  return array */\n      swap2\n      pop\n      pop\n        /* \"contracts/ERC1155.sol\":17872:18070  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155.sol\":16275:17047  function _doSafeTransferAcceptanceCheck(... */\n    tag_225:\n        /* \"contracts/ERC1155.sol\":16509:16524  to.isContract() */\n      tag_296\n        /* \"contracts/ERC1155.sol\":16509:16511  to */\n      dup5\n        /* \"contracts/ERC1155.sol\":16509:16522  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_247\n        /* \"contracts/ERC1155.sol\":16509:16524  to.isContract() */\n      jump\t// in\n    tag_296:\n        /* \"contracts/ERC1155.sol\":16505:17040  if (to.isContract()) {... */\n      iszero\n      tag_297\n      jumpi\n        /* \"contracts/ERC1155.sol\":16562:16564  to */\n      dup4\n        /* \"contracts/ERC1155.sol\":16545:16583  IERC1155Receiver(to).onERC1155Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf23a6e61\n        /* \"contracts/ERC1155.sol\":16584:16592  operator */\n      dup8\n        /* \"contracts/ERC1155.sol\":16594:16598  from */\n      dup8\n        /* \"contracts/ERC1155.sol\":16600:16607  tokenId */\n      dup7\n        /* \"contracts/ERC1155.sol\":16609:16615  amount */\n      dup7\n        /* \"contracts/ERC1155.sol\":16617:16621  data */\n      dup7\n        /* \"contracts/ERC1155.sol\":16545:16622  IERC1155Receiver(to).onERC1155Received(operator, from, tokenId, amount, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_298\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_299\n      jump\t// in\n    tag_298:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_300\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_301\n      swap2\n      swap1\n      tag_253\n      jump\t// in\n    tag_301:\n      0x01\n    tag_300:\n        /* \"contracts/ERC1155.sol\":16541:17029  try IERC1155Receiver(to).onERC1155Received(operator, from, tokenId, amount, data) returns (bytes4 response) {... */\n      tag_302\n      jumpi\n      tag_306\n      tag_259\n      jump\t// in\n    tag_306:\n      dup1\n      0x08c379a0\n      sub\n      tag_305\n      jumpi\n      pop\n      tag_307\n      tag_261\n      jump\t// in\n    tag_307:\n      dup1\n      tag_308\n      jumpi\n      pop\n      jump(tag_304)\n    tag_308:\n        /* \"contracts/ERC1155.sol\":16902:16908  reason */\n      dup1\n        /* \"contracts/ERC1155.sol\":16895:16909  revert(reason) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_309\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_309:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC1155.sol\":16541:17029  try IERC1155Receiver(to).onERC1155Received(operator, from, tokenId, amount, data) returns (bytes4 response) {... */\n    tag_305:\n      pop\n    tag_304:\n        /* \"contracts/ERC1155.sol\":16951:17013  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_310\n      swap1\n      tag_265\n      jump\t// in\n    tag_310:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC1155.sol\":16541:17029  try IERC1155Receiver(to).onERC1155Received(operator, from, tokenId, amount, data) returns (bytes4 response) {... */\n    tag_302:\n        /* \"contracts/ERC1155.sol\":16684:16731  IERC1155Receiver(to).onERC1155Received.selector */\n      shl(0xe0, 0xf23a6e61)\n        /* \"contracts/ERC1155.sol\":16672:16731  response != IERC1155Receiver(to).onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/ERC1155.sol\":16672:16680  response */\n      dup2\n        /* \"contracts/ERC1155.sol\":16672:16731  response != IERC1155Receiver(to).onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/ERC1155.sol\":16668:16826  if (response != IERC1155Receiver(to).onERC1155Received.selector) {... */\n      tag_312\n      jumpi\n        /* \"contracts/ERC1155.sol\":16756:16806  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_313\n      swap1\n      tag_269\n      jump\t// in\n    tag_313:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC1155.sol\":16668:16826  if (response != IERC1155Receiver(to).onERC1155Received.selector) {... */\n    tag_312:\n        /* \"contracts/ERC1155.sol\":16623:16841  returns (bytes4 response) {... */\n      pop\n        /* \"contracts/ERC1155.sol\":16505:17040  if (to.isContract()) {... */\n    tag_297:\n        /* \"contracts/ERC1155.sol\":16275:17047  function _doSafeTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/External/EnumerableMap.sol\":2760:2911  function contains(UintToAddressMap storage map, uint256 key) internal view returns (bool) {... */\n    tag_228:\n        /* \"contracts/External/EnumerableMap.sol\":2844:2848  bool */\n      0x00\n        /* \"contracts/External/EnumerableMap.sol\":2868:2903  _contains(map._inner, bytes32(key)) */\n      tag_315\n        /* \"contracts/External/EnumerableMap.sol\":2878:2881  map */\n      dup4\n        /* \"contracts/External/EnumerableMap.sol\":2878:2888  map._inner */\n      0x00\n      add\n        /* \"contracts/External/EnumerableMap.sol\":2898:2901  key */\n      dup4\n        /* \"contracts/External/EnumerableMap.sol\":2890:2902  bytes32(key) */\n      0x00\n      shl\n        /* \"contracts/External/EnumerableMap.sol\":2868:2877  _contains */\n      tag_316\n        /* \"contracts/External/EnumerableMap.sol\":2868:2903  _contains(map._inner, bytes32(key)) */\n      jump\t// in\n    tag_315:\n        /* \"contracts/External/EnumerableMap.sol\":2861:2903  return _contains(map._inner, bytes32(key)) */\n      swap1\n      pop\n        /* \"contracts/External/EnumerableMap.sol\":2760:2911  function contains(UintToAddressMap storage map, uint256 key) internal view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/External/EnumerableMap.sol\":1624:1734  function _length(Map storage map) private view returns (uint256) {... */\n    tag_231:\n        /* \"contracts/External/EnumerableMap.sol\":1680:1687  uint256 */\n      0x00\n        /* \"contracts/External/EnumerableMap.sol\":1707:1710  map */\n      dup2\n        /* \"contracts/External/EnumerableMap.sol\":1707:1719  map._entries */\n      0x00\n      add\n        /* \"contracts/External/EnumerableMap.sol\":1707:1726  map._entries.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/External/EnumerableMap.sol\":1700:1726  return map._entries.length */\n      swap1\n      pop\n        /* \"contracts/External/EnumerableMap.sol\":1624:1734  function _length(Map storage map) private view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/External/Address.sol\":1191:1517  function isContract(address account) internal view returns (bool) {... */\n    tag_247:\n        /* \"contracts/External/Address.sol\":1251:1255  bool */\n      0x00\n        /* \"contracts/External/Address.sol\":1508:1509  0 */\n      dup1\n        /* \"contracts/External/Address.sol\":1486:1493  account */\n      dup3\n        /* \"contracts/External/Address.sol\":1486:1505  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"contracts/External/Address.sol\":1486:1509  account.code.length > 0 */\n      gt\n        /* \"contracts/External/Address.sol\":1479:1509  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"contracts/External/Address.sol\":1191:1517  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/External/EnumerableMap.sol\":1491:1616  function _contains(Map storage map, bytes32 key) private view returns (bool) {... */\n    tag_316:\n        /* \"contracts/External/EnumerableMap.sol\":1562:1566  bool */\n      0x00\n        /* \"contracts/External/EnumerableMap.sol\":1607:1608  0 */\n      dup1\n        /* \"contracts/External/EnumerableMap.sol\":1586:1589  map */\n      dup4\n        /* \"contracts/External/EnumerableMap.sol\":1586:1598  map._indexes */\n      0x01\n      add\n        /* \"contracts/External/EnumerableMap.sol\":1586:1603  map._indexes[key] */\n      0x00\n        /* \"contracts/External/EnumerableMap.sol\":1599:1602  key */\n      dup5\n        /* \"contracts/External/EnumerableMap.sol\":1586:1603  map._indexes[key] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/External/EnumerableMap.sol\":1586:1608  map._indexes[key] != 0 */\n      eq\n      iszero\n        /* \"contracts/External/EnumerableMap.sol\":1579:1608  return map._indexes[key] != 0 */\n      swap1\n      pop\n        /* \"contracts/External/EnumerableMap.sol\":1491:1616  function _contains(Map storage map, bytes32 key) private view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_320:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_321:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_322:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_323:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_324:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_408\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_323\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_325:\n        /* \"#utility.yul\":641:665   */\n      tag_410\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_324\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_411\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_411:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_326:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_413\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_325\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_327:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_328:\n        /* \"#utility.yul\":997:1021   */\n      tag_416\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_327\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_417\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_417:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_329:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_419\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_328\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_22:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      dup1\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_421\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_422\n      tag_321\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":1290:1409   */\n    tag_421:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_423\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_326\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_424\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_329\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1795   */\n    tag_330:\n        /* \"#utility.yul\":1764:1788   */\n      tag_426\n        /* \"#utility.yul\":1782:1787   */\n      dup2\n        /* \"#utility.yul\":1764:1788   */\n      tag_327\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":1759:1762   */\n      dup3\n        /* \"#utility.yul\":1752:1789   */\n      mstore\n        /* \"#utility.yul\":1677:1795   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1801:2023   */\n    tag_25:\n        /* \"#utility.yul\":1894:1898   */\n      0x00\n        /* \"#utility.yul\":1932:1934   */\n      0x20\n        /* \"#utility.yul\":1921:1930   */\n      dup3\n        /* \"#utility.yul\":1917:1935   */\n      add\n        /* \"#utility.yul\":1909:1935   */\n      swap1\n      pop\n        /* \"#utility.yul\":1945:2016   */\n      tag_428\n        /* \"#utility.yul\":2013:2014   */\n      0x00\n        /* \"#utility.yul\":2002:2011   */\n      dup4\n        /* \"#utility.yul\":1998:2015   */\n      add\n        /* \"#utility.yul\":1989:1995   */\n      dup5\n        /* \"#utility.yul\":1945:2016   */\n      tag_330\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":1801:2023   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2029:2178   */\n    tag_331:\n        /* \"#utility.yul\":2065:2072   */\n      0x00\n        /* \"#utility.yul\":2105:2171   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2098:2103   */\n      dup3\n        /* \"#utility.yul\":2094:2172   */\n      and\n        /* \"#utility.yul\":2083:2172   */\n      swap1\n      pop\n        /* \"#utility.yul\":2029:2178   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2184:2304   */\n    tag_332:\n        /* \"#utility.yul\":2256:2279   */\n      tag_431\n        /* \"#utility.yul\":2273:2278   */\n      dup2\n        /* \"#utility.yul\":2256:2279   */\n      tag_331\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2246:2280   */\n      eq\n        /* \"#utility.yul\":2236:2298   */\n      tag_432\n      jumpi\n        /* \"#utility.yul\":2294:2295   */\n      0x00\n        /* \"#utility.yul\":2291:2292   */\n      dup1\n        /* \"#utility.yul\":2284:2296   */\n      revert\n        /* \"#utility.yul\":2236:2298   */\n    tag_432:\n        /* \"#utility.yul\":2184:2304   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2310:2447   */\n    tag_333:\n        /* \"#utility.yul\":2355:2360   */\n      0x00\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2380:2400   */\n      calldataload\n        /* \"#utility.yul\":2371:2400   */\n      swap1\n      pop\n        /* \"#utility.yul\":2409:2441   */\n      tag_434\n        /* \"#utility.yul\":2435:2440   */\n      dup2\n        /* \"#utility.yul\":2409:2441   */\n      tag_332\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":2310:2447   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2453:2780   */\n    tag_28:\n        /* \"#utility.yul\":2511:2517   */\n      0x00\n        /* \"#utility.yul\":2560:2562   */\n      0x20\n        /* \"#utility.yul\":2548:2557   */\n      dup3\n        /* \"#utility.yul\":2539:2546   */\n      dup5\n        /* \"#utility.yul\":2535:2558   */\n      sub\n        /* \"#utility.yul\":2531:2563   */\n      slt\n        /* \"#utility.yul\":2528:2647   */\n      iszero\n      tag_436\n      jumpi\n        /* \"#utility.yul\":2566:2645   */\n      tag_437\n      tag_321\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":2528:2647   */\n    tag_436:\n        /* \"#utility.yul\":2686:2687   */\n      0x00\n        /* \"#utility.yul\":2711:2763   */\n      tag_438\n        /* \"#utility.yul\":2755:2762   */\n      dup5\n        /* \"#utility.yul\":2746:2752   */\n      dup3\n        /* \"#utility.yul\":2735:2744   */\n      dup6\n        /* \"#utility.yul\":2731:2753   */\n      add\n        /* \"#utility.yul\":2711:2763   */\n      tag_333\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":2701:2763   */\n      swap2\n      pop\n        /* \"#utility.yul\":2657:2773   */\n      pop\n        /* \"#utility.yul\":2453:2780   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2786:2876   */\n    tag_334:\n        /* \"#utility.yul\":2820:2827   */\n      0x00\n        /* \"#utility.yul\":2863:2868   */\n      dup2\n        /* \"#utility.yul\":2856:2869   */\n      iszero\n        /* \"#utility.yul\":2849:2870   */\n      iszero\n        /* \"#utility.yul\":2838:2870   */\n      swap1\n      pop\n        /* \"#utility.yul\":2786:2876   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2882:2991   */\n    tag_335:\n        /* \"#utility.yul\":2963:2984   */\n      tag_441\n        /* \"#utility.yul\":2978:2983   */\n      dup2\n        /* \"#utility.yul\":2963:2984   */\n      tag_334\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":2958:2961   */\n      dup3\n        /* \"#utility.yul\":2951:2985   */\n      mstore\n        /* \"#utility.yul\":2882:2991   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2997:3207   */\n    tag_31:\n        /* \"#utility.yul\":3084:3088   */\n      0x00\n        /* \"#utility.yul\":3122:3124   */\n      0x20\n        /* \"#utility.yul\":3111:3120   */\n      dup3\n        /* \"#utility.yul\":3107:3125   */\n      add\n        /* \"#utility.yul\":3099:3125   */\n      swap1\n      pop\n        /* \"#utility.yul\":3135:3200   */\n      tag_443\n        /* \"#utility.yul\":3197:3198   */\n      0x00\n        /* \"#utility.yul\":3186:3195   */\n      dup4\n        /* \"#utility.yul\":3182:3199   */\n      add\n        /* \"#utility.yul\":3173:3179   */\n      dup5\n        /* \"#utility.yul\":3135:3200   */\n      tag_335\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":2997:3207   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3213:3312   */\n    tag_336:\n        /* \"#utility.yul\":3265:3271   */\n      0x00\n        /* \"#utility.yul\":3299:3304   */\n      dup2\n        /* \"#utility.yul\":3293:3305   */\n      mload\n        /* \"#utility.yul\":3283:3305   */\n      swap1\n      pop\n        /* \"#utility.yul\":3213:3312   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3318:3487   */\n    tag_337:\n        /* \"#utility.yul\":3402:3413   */\n      0x00\n        /* \"#utility.yul\":3436:3442   */\n      dup3\n        /* \"#utility.yul\":3431:3434   */\n      dup3\n        /* \"#utility.yul\":3424:3443   */\n      mstore\n        /* \"#utility.yul\":3476:3480   */\n      0x20\n        /* \"#utility.yul\":3471:3474   */\n      dup3\n        /* \"#utility.yul\":3467:3481   */\n      add\n        /* \"#utility.yul\":3452:3481   */\n      swap1\n      pop\n        /* \"#utility.yul\":3318:3487   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3493:3739   */\n    tag_338:\n        /* \"#utility.yul\":3574:3575   */\n      0x00\n        /* \"#utility.yul\":3584:3697   */\n    tag_447:\n        /* \"#utility.yul\":3598:3604   */\n      dup4\n        /* \"#utility.yul\":3595:3596   */\n      dup2\n        /* \"#utility.yul\":3592:3605   */\n      lt\n        /* \"#utility.yul\":3584:3697   */\n      iszero\n      tag_449\n      jumpi\n        /* \"#utility.yul\":3683:3684   */\n      dup1\n        /* \"#utility.yul\":3678:3681   */\n      dup3\n        /* \"#utility.yul\":3674:3685   */\n      add\n        /* \"#utility.yul\":3668:3686   */\n      mload\n        /* \"#utility.yul\":3664:3665   */\n      dup2\n        /* \"#utility.yul\":3659:3662   */\n      dup5\n        /* \"#utility.yul\":3655:3666   */\n      add\n        /* \"#utility.yul\":3648:3687   */\n      mstore\n        /* \"#utility.yul\":3620:3622   */\n      0x20\n        /* \"#utility.yul\":3617:3618   */\n      dup2\n        /* \"#utility.yul\":3613:3623   */\n      add\n        /* \"#utility.yul\":3608:3623   */\n      swap1\n      pop\n        /* \"#utility.yul\":3584:3697   */\n      jump(tag_447)\n    tag_449:\n        /* \"#utility.yul\":3731:3732   */\n      0x00\n        /* \"#utility.yul\":3722:3728   */\n      dup5\n        /* \"#utility.yul\":3717:3720   */\n      dup5\n        /* \"#utility.yul\":3713:3729   */\n      add\n        /* \"#utility.yul\":3706:3733   */\n      mstore\n        /* \"#utility.yul\":3555:3739   */\n      pop\n        /* \"#utility.yul\":3493:3739   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3745:3847   */\n    tag_339:\n        /* \"#utility.yul\":3786:3792   */\n      0x00\n        /* \"#utility.yul\":3837:3839   */\n      0x1f\n        /* \"#utility.yul\":3833:3840   */\n      not\n        /* \"#utility.yul\":3828:3830   */\n      0x1f\n        /* \"#utility.yul\":3821:3826   */\n      dup4\n        /* \"#utility.yul\":3817:3831   */\n      add\n        /* \"#utility.yul\":3813:3841   */\n      and\n        /* \"#utility.yul\":3803:3841   */\n      swap1\n      pop\n        /* \"#utility.yul\":3745:3847   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3853:4230   */\n    tag_340:\n        /* \"#utility.yul\":3941:3944   */\n      0x00\n        /* \"#utility.yul\":3969:4008   */\n      tag_452\n        /* \"#utility.yul\":4002:4007   */\n      dup3\n        /* \"#utility.yul\":3969:4008   */\n      tag_336\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":4024:4095   */\n      tag_453\n        /* \"#utility.yul\":4088:4094   */\n      dup2\n        /* \"#utility.yul\":4083:4086   */\n      dup6\n        /* \"#utility.yul\":4024:4095   */\n      tag_337\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":4017:4095   */\n      swap4\n      pop\n        /* \"#utility.yul\":4104:4169   */\n      tag_454\n        /* \"#utility.yul\":4162:4168   */\n      dup2\n        /* \"#utility.yul\":4157:4160   */\n      dup6\n        /* \"#utility.yul\":4150:4154   */\n      0x20\n        /* \"#utility.yul\":4143:4148   */\n      dup7\n        /* \"#utility.yul\":4139:4155   */\n      add\n        /* \"#utility.yul\":4104:4169   */\n      tag_338\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":4194:4223   */\n      tag_455\n        /* \"#utility.yul\":4216:4222   */\n      dup2\n        /* \"#utility.yul\":4194:4223   */\n      tag_339\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":4189:4192   */\n      dup5\n        /* \"#utility.yul\":4185:4224   */\n      add\n        /* \"#utility.yul\":4178:4224   */\n      swap2\n      pop\n        /* \"#utility.yul\":3945:4230   */\n      pop\n        /* \"#utility.yul\":3853:4230   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4236:4549   */\n    tag_35:\n        /* \"#utility.yul\":4349:4353   */\n      0x00\n        /* \"#utility.yul\":4387:4389   */\n      0x20\n        /* \"#utility.yul\":4376:4385   */\n      dup3\n        /* \"#utility.yul\":4372:4390   */\n      add\n        /* \"#utility.yul\":4364:4390   */\n      swap1\n      pop\n        /* \"#utility.yul\":4436:4445   */\n      dup2\n        /* \"#utility.yul\":4430:4434   */\n      dup2\n        /* \"#utility.yul\":4426:4446   */\n      sub\n        /* \"#utility.yul\":4422:4423   */\n      0x00\n        /* \"#utility.yul\":4411:4420   */\n      dup4\n        /* \"#utility.yul\":4407:4424   */\n      add\n        /* \"#utility.yul\":4400:4447   */\n      mstore\n        /* \"#utility.yul\":4464:4542   */\n      tag_457\n        /* \"#utility.yul\":4537:4541   */\n      dup2\n        /* \"#utility.yul\":4528:4534   */\n      dup5\n        /* \"#utility.yul\":4464:4542   */\n      tag_340\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":4456:4542   */\n      swap1\n      pop\n        /* \"#utility.yul\":4236:4549   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4555:4672   */\n    tag_341:\n        /* \"#utility.yul\":4664:4665   */\n      0x00\n        /* \"#utility.yul\":4661:4662   */\n      dup1\n        /* \"#utility.yul\":4654:4666   */\n      revert\n        /* \"#utility.yul\":4678:4858   */\n    tag_144:\n        /* \"#utility.yul\":4726:4803   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4723:4724   */\n      0x00\n        /* \"#utility.yul\":4716:4804   */\n      mstore\n        /* \"#utility.yul\":4823:4827   */\n      0x41\n        /* \"#utility.yul\":4820:4821   */\n      0x04\n        /* \"#utility.yul\":4813:4828   */\n      mstore\n        /* \"#utility.yul\":4847:4851   */\n      0x24\n        /* \"#utility.yul\":4844:4845   */\n      0x00\n        /* \"#utility.yul\":4837:4852   */\n      revert\n        /* \"#utility.yul\":4864:5145   */\n    tag_342:\n        /* \"#utility.yul\":4947:4974   */\n      tag_461\n        /* \"#utility.yul\":4969:4973   */\n      dup3\n        /* \"#utility.yul\":4947:4974   */\n      tag_339\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":4939:4945   */\n      dup2\n        /* \"#utility.yul\":4935:4975   */\n      add\n        /* \"#utility.yul\":5077:5083   */\n      dup2\n        /* \"#utility.yul\":5065:5075   */\n      dup2\n        /* \"#utility.yul\":5062:5084   */\n      lt\n        /* \"#utility.yul\":5041:5059   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5029:5039   */\n      dup3\n        /* \"#utility.yul\":5026:5060   */\n      gt\n        /* \"#utility.yul\":5023:5085   */\n      or\n        /* \"#utility.yul\":5020:5108   */\n      iszero\n      tag_462\n      jumpi\n        /* \"#utility.yul\":5088:5106   */\n      tag_463\n      tag_144\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":5020:5108   */\n    tag_462:\n        /* \"#utility.yul\":5128:5138   */\n      dup1\n        /* \"#utility.yul\":5124:5126   */\n      0x40\n        /* \"#utility.yul\":5117:5139   */\n      mstore\n        /* \"#utility.yul\":4907:5145   */\n      pop\n        /* \"#utility.yul\":4864:5145   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5151:5280   */\n    tag_343:\n        /* \"#utility.yul\":5185:5191   */\n      0x00\n        /* \"#utility.yul\":5212:5232   */\n      tag_465\n      tag_320\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":5202:5232   */\n      swap1\n      pop\n        /* \"#utility.yul\":5241:5274   */\n      tag_466\n        /* \"#utility.yul\":5269:5273   */\n      dup3\n        /* \"#utility.yul\":5261:5267   */\n      dup3\n        /* \"#utility.yul\":5241:5274   */\n      tag_342\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":5151:5280   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5286:5597   */\n    tag_344:\n        /* \"#utility.yul\":5363:5367   */\n      0x00\n        /* \"#utility.yul\":5453:5471   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5445:5451   */\n      dup3\n        /* \"#utility.yul\":5442:5472   */\n      gt\n        /* \"#utility.yul\":5439:5495   */\n      iszero\n      tag_468\n      jumpi\n        /* \"#utility.yul\":5475:5493   */\n      tag_469\n      tag_144\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":5439:5495   */\n    tag_468:\n        /* \"#utility.yul\":5525:5529   */\n      0x20\n        /* \"#utility.yul\":5517:5523   */\n      dup3\n        /* \"#utility.yul\":5513:5530   */\n      mul\n        /* \"#utility.yul\":5505:5530   */\n      swap1\n      pop\n        /* \"#utility.yul\":5585:5589   */\n      0x20\n        /* \"#utility.yul\":5579:5583   */\n      dup2\n        /* \"#utility.yul\":5575:5590   */\n      add\n        /* \"#utility.yul\":5567:5590   */\n      swap1\n      pop\n        /* \"#utility.yul\":5286:5597   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5603:5720   */\n    tag_345:\n        /* \"#utility.yul\":5712:5713   */\n      0x00\n        /* \"#utility.yul\":5709:5710   */\n      dup1\n        /* \"#utility.yul\":5702:5714   */\n      revert\n        /* \"#utility.yul\":5743:6453   */\n    tag_346:\n        /* \"#utility.yul\":5839:5844   */\n      0x00\n        /* \"#utility.yul\":5864:5945   */\n      tag_472\n        /* \"#utility.yul\":5880:5944   */\n      tag_473\n        /* \"#utility.yul\":5937:5943   */\n      dup5\n        /* \"#utility.yul\":5880:5944   */\n      tag_344\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":5864:5945   */\n      tag_343\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":5855:5945   */\n      swap1\n      pop\n        /* \"#utility.yul\":5965:5970   */\n      dup1\n        /* \"#utility.yul\":5994:6000   */\n      dup4\n        /* \"#utility.yul\":5987:5992   */\n      dup3\n        /* \"#utility.yul\":5980:6001   */\n      mstore\n        /* \"#utility.yul\":6028:6032   */\n      0x20\n        /* \"#utility.yul\":6021:6026   */\n      dup3\n        /* \"#utility.yul\":6017:6033   */\n      add\n        /* \"#utility.yul\":6010:6033   */\n      swap1\n      pop\n        /* \"#utility.yul\":6081:6085   */\n      0x20\n        /* \"#utility.yul\":6073:6079   */\n      dup5\n        /* \"#utility.yul\":6069:6086   */\n      mul\n        /* \"#utility.yul\":6061:6067   */\n      dup4\n        /* \"#utility.yul\":6057:6087   */\n      add\n        /* \"#utility.yul\":6110:6113   */\n      dup6\n        /* \"#utility.yul\":6102:6108   */\n      dup2\n        /* \"#utility.yul\":6099:6114   */\n      gt\n        /* \"#utility.yul\":6096:6218   */\n      iszero\n      tag_474\n      jumpi\n        /* \"#utility.yul\":6129:6208   */\n      tag_475\n      tag_345\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":6096:6218   */\n    tag_474:\n        /* \"#utility.yul\":6244:6250   */\n      dup4\n        /* \"#utility.yul\":6227:6447   */\n    tag_476:\n        /* \"#utility.yul\":6261:6267   */\n      dup2\n        /* \"#utility.yul\":6256:6259   */\n      dup2\n        /* \"#utility.yul\":6253:6268   */\n      lt\n        /* \"#utility.yul\":6227:6447   */\n      iszero\n      tag_478\n      jumpi\n        /* \"#utility.yul\":6336:6339   */\n      dup1\n        /* \"#utility.yul\":6365:6402   */\n      tag_479\n        /* \"#utility.yul\":6398:6401   */\n      dup9\n        /* \"#utility.yul\":6386:6396   */\n      dup3\n        /* \"#utility.yul\":6365:6402   */\n      tag_329\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":6360:6363   */\n      dup5\n        /* \"#utility.yul\":6353:6403   */\n      mstore\n        /* \"#utility.yul\":6432:6436   */\n      0x20\n        /* \"#utility.yul\":6427:6430   */\n      dup5\n        /* \"#utility.yul\":6423:6437   */\n      add\n        /* \"#utility.yul\":6416:6437   */\n      swap4\n      pop\n        /* \"#utility.yul\":6303:6447   */\n      pop\n        /* \"#utility.yul\":6287:6291   */\n      0x20\n        /* \"#utility.yul\":6282:6285   */\n      dup2\n        /* \"#utility.yul\":6278:6292   */\n      add\n        /* \"#utility.yul\":6271:6292   */\n      swap1\n      pop\n        /* \"#utility.yul\":6227:6447   */\n      jump(tag_476)\n    tag_478:\n        /* \"#utility.yul\":6231:6252   */\n      pop\n        /* \"#utility.yul\":5845:6453   */\n      pop\n      pop\n        /* \"#utility.yul\":5743:6453   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6476:6846   */\n    tag_347:\n        /* \"#utility.yul\":6547:6552   */\n      0x00\n        /* \"#utility.yul\":6596:6599   */\n      dup3\n        /* \"#utility.yul\":6589:6593   */\n      0x1f\n        /* \"#utility.yul\":6581:6587   */\n      dup4\n        /* \"#utility.yul\":6577:6594   */\n      add\n        /* \"#utility.yul\":6573:6600   */\n      slt\n        /* \"#utility.yul\":6563:6685   */\n      tag_481\n      jumpi\n        /* \"#utility.yul\":6604:6683   */\n      tag_482\n      tag_341\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":6563:6685   */\n    tag_481:\n        /* \"#utility.yul\":6721:6727   */\n      dup2\n        /* \"#utility.yul\":6708:6728   */\n      calldataload\n        /* \"#utility.yul\":6746:6840   */\n      tag_483\n        /* \"#utility.yul\":6836:6839   */\n      dup5\n        /* \"#utility.yul\":6828:6834   */\n      dup3\n        /* \"#utility.yul\":6821:6825   */\n      0x20\n        /* \"#utility.yul\":6813:6819   */\n      dup7\n        /* \"#utility.yul\":6809:6826   */\n      add\n        /* \"#utility.yul\":6746:6840   */\n      tag_346\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":6737:6840   */\n      swap2\n      pop\n        /* \"#utility.yul\":6553:6846   */\n      pop\n        /* \"#utility.yul\":6476:6846   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6852:6969   */\n    tag_348:\n        /* \"#utility.yul\":6961:6962   */\n      0x00\n        /* \"#utility.yul\":6958:6959   */\n      dup1\n        /* \"#utility.yul\":6951:6963   */\n      revert\n        /* \"#utility.yul\":6975:7282   */\n    tag_349:\n        /* \"#utility.yul\":7036:7040   */\n      0x00\n        /* \"#utility.yul\":7126:7144   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7118:7124   */\n      dup3\n        /* \"#utility.yul\":7115:7145   */\n      gt\n        /* \"#utility.yul\":7112:7168   */\n      iszero\n      tag_486\n      jumpi\n        /* \"#utility.yul\":7148:7166   */\n      tag_487\n      tag_144\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":7112:7168   */\n    tag_486:\n        /* \"#utility.yul\":7186:7215   */\n      tag_488\n        /* \"#utility.yul\":7208:7214   */\n      dup3\n        /* \"#utility.yul\":7186:7215   */\n      tag_339\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":7178:7215   */\n      swap1\n      pop\n        /* \"#utility.yul\":7270:7274   */\n      0x20\n        /* \"#utility.yul\":7264:7268   */\n      dup2\n        /* \"#utility.yul\":7260:7275   */\n      add\n        /* \"#utility.yul\":7252:7275   */\n      swap1\n      pop\n        /* \"#utility.yul\":6975:7282   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7288:7434   */\n    tag_350:\n        /* \"#utility.yul\":7385:7391   */\n      dup3\n        /* \"#utility.yul\":7380:7383   */\n      dup2\n        /* \"#utility.yul\":7375:7378   */\n      dup4\n        /* \"#utility.yul\":7362:7392   */\n      calldatacopy\n        /* \"#utility.yul\":7426:7427   */\n      0x00\n        /* \"#utility.yul\":7417:7423   */\n      dup4\n        /* \"#utility.yul\":7412:7415   */\n      dup4\n        /* \"#utility.yul\":7408:7424   */\n      add\n        /* \"#utility.yul\":7401:7428   */\n      mstore\n        /* \"#utility.yul\":7288:7434   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7440:7863   */\n    tag_351:\n        /* \"#utility.yul\":7517:7522   */\n      0x00\n        /* \"#utility.yul\":7542:7607   */\n      tag_491\n        /* \"#utility.yul\":7558:7606   */\n      tag_492\n        /* \"#utility.yul\":7599:7605   */\n      dup5\n        /* \"#utility.yul\":7558:7606   */\n      tag_349\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":7542:7607   */\n      tag_343\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":7533:7607   */\n      swap1\n      pop\n        /* \"#utility.yul\":7630:7636   */\n      dup3\n        /* \"#utility.yul\":7623:7628   */\n      dup2\n        /* \"#utility.yul\":7616:7637   */\n      mstore\n        /* \"#utility.yul\":7668:7672   */\n      0x20\n        /* \"#utility.yul\":7661:7666   */\n      dup2\n        /* \"#utility.yul\":7657:7673   */\n      add\n        /* \"#utility.yul\":7706:7709   */\n      dup5\n        /* \"#utility.yul\":7697:7703   */\n      dup5\n        /* \"#utility.yul\":7692:7695   */\n      dup5\n        /* \"#utility.yul\":7688:7704   */\n      add\n        /* \"#utility.yul\":7685:7710   */\n      gt\n        /* \"#utility.yul\":7682:7794   */\n      iszero\n      tag_493\n      jumpi\n        /* \"#utility.yul\":7713:7792   */\n      tag_494\n      tag_348\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":7682:7794   */\n    tag_493:\n        /* \"#utility.yul\":7803:7857   */\n      tag_495\n        /* \"#utility.yul\":7850:7856   */\n      dup5\n        /* \"#utility.yul\":7845:7848   */\n      dup3\n        /* \"#utility.yul\":7840:7843   */\n      dup6\n        /* \"#utility.yul\":7803:7857   */\n      tag_350\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":7523:7863   */\n      pop\n        /* \"#utility.yul\":7440:7863   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7882:8220   */\n    tag_352:\n        /* \"#utility.yul\":7937:7942   */\n      0x00\n        /* \"#utility.yul\":7986:7989   */\n      dup3\n        /* \"#utility.yul\":7979:7983   */\n      0x1f\n        /* \"#utility.yul\":7971:7977   */\n      dup4\n        /* \"#utility.yul\":7967:7984   */\n      add\n        /* \"#utility.yul\":7963:7990   */\n      slt\n        /* \"#utility.yul\":7953:8075   */\n      tag_497\n      jumpi\n        /* \"#utility.yul\":7994:8073   */\n      tag_498\n      tag_341\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":7953:8075   */\n    tag_497:\n        /* \"#utility.yul\":8111:8117   */\n      dup2\n        /* \"#utility.yul\":8098:8118   */\n      calldataload\n        /* \"#utility.yul\":8136:8214   */\n      tag_499\n        /* \"#utility.yul\":8210:8213   */\n      dup5\n        /* \"#utility.yul\":8202:8208   */\n      dup3\n        /* \"#utility.yul\":8195:8199   */\n      0x20\n        /* \"#utility.yul\":8187:8193   */\n      dup7\n        /* \"#utility.yul\":8183:8200   */\n      add\n        /* \"#utility.yul\":8136:8214   */\n      tag_351\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":8127:8214   */\n      swap2\n      pop\n        /* \"#utility.yul\":7943:8220   */\n      pop\n        /* \"#utility.yul\":7882:8220   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8226:9735   */\n    tag_41:\n        /* \"#utility.yul\":8380:8386   */\n      0x00\n        /* \"#utility.yul\":8388:8394   */\n      dup1\n        /* \"#utility.yul\":8396:8402   */\n      0x00\n        /* \"#utility.yul\":8404:8410   */\n      dup1\n        /* \"#utility.yul\":8412:8418   */\n      0x00\n        /* \"#utility.yul\":8461:8464   */\n      0xa0\n        /* \"#utility.yul\":8449:8458   */\n      dup7\n        /* \"#utility.yul\":8440:8447   */\n      dup9\n        /* \"#utility.yul\":8436:8459   */\n      sub\n        /* \"#utility.yul\":8432:8465   */\n      slt\n        /* \"#utility.yul\":8429:8549   */\n      iszero\n      tag_501\n      jumpi\n        /* \"#utility.yul\":8468:8547   */\n      tag_502\n      tag_321\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":8429:8549   */\n    tag_501:\n        /* \"#utility.yul\":8588:8589   */\n      0x00\n        /* \"#utility.yul\":8613:8666   */\n      tag_503\n        /* \"#utility.yul\":8658:8665   */\n      dup9\n        /* \"#utility.yul\":8649:8655   */\n      dup3\n        /* \"#utility.yul\":8638:8647   */\n      dup10\n        /* \"#utility.yul\":8634:8656   */\n      add\n        /* \"#utility.yul\":8613:8666   */\n      tag_326\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":8603:8666   */\n      swap6\n      pop\n        /* \"#utility.yul\":8559:8676   */\n      pop\n        /* \"#utility.yul\":8715:8717   */\n      0x20\n        /* \"#utility.yul\":8741:8794   */\n      tag_504\n        /* \"#utility.yul\":8786:8793   */\n      dup9\n        /* \"#utility.yul\":8777:8783   */\n      dup3\n        /* \"#utility.yul\":8766:8775   */\n      dup10\n        /* \"#utility.yul\":8762:8784   */\n      add\n        /* \"#utility.yul\":8741:8794   */\n      tag_326\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":8731:8794   */\n      swap5\n      pop\n        /* \"#utility.yul\":8686:8804   */\n      pop\n        /* \"#utility.yul\":8871:8873   */\n      0x40\n        /* \"#utility.yul\":8860:8869   */\n      dup7\n        /* \"#utility.yul\":8856:8874   */\n      add\n        /* \"#utility.yul\":8843:8875   */\n      calldataload\n        /* \"#utility.yul\":8902:8920   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8894:8900   */\n      dup2\n        /* \"#utility.yul\":8891:8921   */\n      gt\n        /* \"#utility.yul\":8888:9005   */\n      iszero\n      tag_505\n      jumpi\n        /* \"#utility.yul\":8924:9003   */\n      tag_506\n      tag_322\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":8888:9005   */\n    tag_505:\n        /* \"#utility.yul\":9029:9107   */\n      tag_507\n        /* \"#utility.yul\":9099:9106   */\n      dup9\n        /* \"#utility.yul\":9090:9096   */\n      dup3\n        /* \"#utility.yul\":9079:9088   */\n      dup10\n        /* \"#utility.yul\":9075:9097   */\n      add\n        /* \"#utility.yul\":9029:9107   */\n      tag_347\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":9019:9107   */\n      swap4\n      pop\n        /* \"#utility.yul\":8814:9117   */\n      pop\n        /* \"#utility.yul\":9184:9186   */\n      0x60\n        /* \"#utility.yul\":9173:9182   */\n      dup7\n        /* \"#utility.yul\":9169:9187   */\n      add\n        /* \"#utility.yul\":9156:9188   */\n      calldataload\n        /* \"#utility.yul\":9215:9233   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9207:9213   */\n      dup2\n        /* \"#utility.yul\":9204:9234   */\n      gt\n        /* \"#utility.yul\":9201:9318   */\n      iszero\n      tag_508\n      jumpi\n        /* \"#utility.yul\":9237:9316   */\n      tag_509\n      tag_322\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":9201:9318   */\n    tag_508:\n        /* \"#utility.yul\":9342:9420   */\n      tag_510\n        /* \"#utility.yul\":9412:9419   */\n      dup9\n        /* \"#utility.yul\":9403:9409   */\n      dup3\n        /* \"#utility.yul\":9392:9401   */\n      dup10\n        /* \"#utility.yul\":9388:9410   */\n      add\n        /* \"#utility.yul\":9342:9420   */\n      tag_347\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":9332:9420   */\n      swap3\n      pop\n        /* \"#utility.yul\":9127:9430   */\n      pop\n        /* \"#utility.yul\":9497:9500   */\n      0x80\n        /* \"#utility.yul\":9486:9495   */\n      dup7\n        /* \"#utility.yul\":9482:9501   */\n      add\n        /* \"#utility.yul\":9469:9502   */\n      calldataload\n        /* \"#utility.yul\":9529:9547   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9521:9527   */\n      dup2\n        /* \"#utility.yul\":9518:9548   */\n      gt\n        /* \"#utility.yul\":9515:9632   */\n      iszero\n      tag_511\n      jumpi\n        /* \"#utility.yul\":9551:9630   */\n      tag_512\n      tag_322\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":9515:9632   */\n    tag_511:\n        /* \"#utility.yul\":9656:9718   */\n      tag_513\n        /* \"#utility.yul\":9710:9717   */\n      dup9\n        /* \"#utility.yul\":9701:9707   */\n      dup3\n        /* \"#utility.yul\":9690:9699   */\n      dup10\n        /* \"#utility.yul\":9686:9708   */\n      add\n        /* \"#utility.yul\":9656:9718   */\n      tag_352\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":9646:9718   */\n      swap2\n      pop\n        /* \"#utility.yul\":9440:9728   */\n      pop\n        /* \"#utility.yul\":8226:9735   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9741:10052   */\n    tag_353:\n        /* \"#utility.yul\":9818:9822   */\n      0x00\n        /* \"#utility.yul\":9908:9926   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9900:9906   */\n      dup3\n        /* \"#utility.yul\":9897:9927   */\n      gt\n        /* \"#utility.yul\":9894:9950   */\n      iszero\n      tag_515\n      jumpi\n        /* \"#utility.yul\":9930:9948   */\n      tag_516\n      tag_144\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":9894:9950   */\n    tag_515:\n        /* \"#utility.yul\":9980:9984   */\n      0x20\n        /* \"#utility.yul\":9972:9978   */\n      dup3\n        /* \"#utility.yul\":9968:9985   */\n      mul\n        /* \"#utility.yul\":9960:9985   */\n      swap1\n      pop\n        /* \"#utility.yul\":10040:10044   */\n      0x20\n        /* \"#utility.yul\":10034:10038   */\n      dup2\n        /* \"#utility.yul\":10030:10045   */\n      add\n        /* \"#utility.yul\":10022:10045   */\n      swap1\n      pop\n        /* \"#utility.yul\":9741:10052   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10075:10785   */\n    tag_354:\n        /* \"#utility.yul\":10171:10176   */\n      0x00\n        /* \"#utility.yul\":10196:10277   */\n      tag_518\n        /* \"#utility.yul\":10212:10276   */\n      tag_519\n        /* \"#utility.yul\":10269:10275   */\n      dup5\n        /* \"#utility.yul\":10212:10276   */\n      tag_353\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":10196:10277   */\n      tag_343\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":10187:10277   */\n      swap1\n      pop\n        /* \"#utility.yul\":10297:10302   */\n      dup1\n        /* \"#utility.yul\":10326:10332   */\n      dup4\n        /* \"#utility.yul\":10319:10324   */\n      dup3\n        /* \"#utility.yul\":10312:10333   */\n      mstore\n        /* \"#utility.yul\":10360:10364   */\n      0x20\n        /* \"#utility.yul\":10353:10358   */\n      dup3\n        /* \"#utility.yul\":10349:10365   */\n      add\n        /* \"#utility.yul\":10342:10365   */\n      swap1\n      pop\n        /* \"#utility.yul\":10413:10417   */\n      0x20\n        /* \"#utility.yul\":10405:10411   */\n      dup5\n        /* \"#utility.yul\":10401:10418   */\n      mul\n        /* \"#utility.yul\":10393:10399   */\n      dup4\n        /* \"#utility.yul\":10389:10419   */\n      add\n        /* \"#utility.yul\":10442:10445   */\n      dup6\n        /* \"#utility.yul\":10434:10440   */\n      dup2\n        /* \"#utility.yul\":10431:10446   */\n      gt\n        /* \"#utility.yul\":10428:10550   */\n      iszero\n      tag_520\n      jumpi\n        /* \"#utility.yul\":10461:10540   */\n      tag_521\n      tag_345\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":10428:10550   */\n    tag_520:\n        /* \"#utility.yul\":10576:10582   */\n      dup4\n        /* \"#utility.yul\":10559:10779   */\n    tag_522:\n        /* \"#utility.yul\":10593:10599   */\n      dup2\n        /* \"#utility.yul\":10588:10591   */\n      dup2\n        /* \"#utility.yul\":10585:10600   */\n      lt\n        /* \"#utility.yul\":10559:10779   */\n      iszero\n      tag_524\n      jumpi\n        /* \"#utility.yul\":10668:10671   */\n      dup1\n        /* \"#utility.yul\":10697:10734   */\n      tag_525\n        /* \"#utility.yul\":10730:10733   */\n      dup9\n        /* \"#utility.yul\":10718:10728   */\n      dup3\n        /* \"#utility.yul\":10697:10734   */\n      tag_326\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":10692:10695   */\n      dup5\n        /* \"#utility.yul\":10685:10735   */\n      mstore\n        /* \"#utility.yul\":10764:10768   */\n      0x20\n        /* \"#utility.yul\":10759:10762   */\n      dup5\n        /* \"#utility.yul\":10755:10769   */\n      add\n        /* \"#utility.yul\":10748:10769   */\n      swap4\n      pop\n        /* \"#utility.yul\":10635:10779   */\n      pop\n        /* \"#utility.yul\":10619:10623   */\n      0x20\n        /* \"#utility.yul\":10614:10617   */\n      dup2\n        /* \"#utility.yul\":10610:10624   */\n      add\n        /* \"#utility.yul\":10603:10624   */\n      swap1\n      pop\n        /* \"#utility.yul\":10559:10779   */\n      jump(tag_522)\n    tag_524:\n        /* \"#utility.yul\":10563:10584   */\n      pop\n        /* \"#utility.yul\":10177:10785   */\n      pop\n      pop\n        /* \"#utility.yul\":10075:10785   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10808:11178   */\n    tag_355:\n        /* \"#utility.yul\":10879:10884   */\n      0x00\n        /* \"#utility.yul\":10928:10931   */\n      dup3\n        /* \"#utility.yul\":10921:10925   */\n      0x1f\n        /* \"#utility.yul\":10913:10919   */\n      dup4\n        /* \"#utility.yul\":10909:10926   */\n      add\n        /* \"#utility.yul\":10905:10932   */\n      slt\n        /* \"#utility.yul\":10895:11017   */\n      tag_527\n      jumpi\n        /* \"#utility.yul\":10936:11015   */\n      tag_528\n      tag_341\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":10895:11017   */\n    tag_527:\n        /* \"#utility.yul\":11053:11059   */\n      dup2\n        /* \"#utility.yul\":11040:11060   */\n      calldataload\n        /* \"#utility.yul\":11078:11172   */\n      tag_529\n        /* \"#utility.yul\":11168:11171   */\n      dup5\n        /* \"#utility.yul\":11160:11166   */\n      dup3\n        /* \"#utility.yul\":11153:11157   */\n      0x20\n        /* \"#utility.yul\":11145:11151   */\n      dup7\n        /* \"#utility.yul\":11141:11158   */\n      add\n        /* \"#utility.yul\":11078:11172   */\n      tag_354\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":11069:11172   */\n      swap2\n      pop\n        /* \"#utility.yul\":10885:11178   */\n      pop\n        /* \"#utility.yul\":10808:11178   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11184:12078   */\n    tag_45:\n        /* \"#utility.yul\":11302:11308   */\n      0x00\n        /* \"#utility.yul\":11310:11316   */\n      dup1\n        /* \"#utility.yul\":11359:11361   */\n      0x40\n        /* \"#utility.yul\":11347:11356   */\n      dup4\n        /* \"#utility.yul\":11338:11345   */\n      dup6\n        /* \"#utility.yul\":11334:11357   */\n      sub\n        /* \"#utility.yul\":11330:11362   */\n      slt\n        /* \"#utility.yul\":11327:11446   */\n      iszero\n      tag_531\n      jumpi\n        /* \"#utility.yul\":11365:11444   */\n      tag_532\n      tag_321\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":11327:11446   */\n    tag_531:\n        /* \"#utility.yul\":11513:11514   */\n      0x00\n        /* \"#utility.yul\":11502:11511   */\n      dup4\n        /* \"#utility.yul\":11498:11515   */\n      add\n        /* \"#utility.yul\":11485:11516   */\n      calldataload\n        /* \"#utility.yul\":11543:11561   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11535:11541   */\n      dup2\n        /* \"#utility.yul\":11532:11562   */\n      gt\n        /* \"#utility.yul\":11529:11646   */\n      iszero\n      tag_533\n      jumpi\n        /* \"#utility.yul\":11565:11644   */\n      tag_534\n      tag_322\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":11529:11646   */\n    tag_533:\n        /* \"#utility.yul\":11670:11748   */\n      tag_535\n        /* \"#utility.yul\":11740:11747   */\n      dup6\n        /* \"#utility.yul\":11731:11737   */\n      dup3\n        /* \"#utility.yul\":11720:11729   */\n      dup7\n        /* \"#utility.yul\":11716:11738   */\n      add\n        /* \"#utility.yul\":11670:11748   */\n      tag_355\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":11660:11748   */\n      swap3\n      pop\n        /* \"#utility.yul\":11456:11758   */\n      pop\n        /* \"#utility.yul\":11825:11827   */\n      0x20\n        /* \"#utility.yul\":11814:11823   */\n      dup4\n        /* \"#utility.yul\":11810:11828   */\n      add\n        /* \"#utility.yul\":11797:11829   */\n      calldataload\n        /* \"#utility.yul\":11856:11874   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11848:11854   */\n      dup2\n        /* \"#utility.yul\":11845:11875   */\n      gt\n        /* \"#utility.yul\":11842:11959   */\n      iszero\n      tag_536\n      jumpi\n        /* \"#utility.yul\":11878:11957   */\n      tag_537\n      tag_322\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":11842:11959   */\n    tag_536:\n        /* \"#utility.yul\":11983:12061   */\n      tag_538\n        /* \"#utility.yul\":12053:12060   */\n      dup6\n        /* \"#utility.yul\":12044:12050   */\n      dup3\n        /* \"#utility.yul\":12033:12042   */\n      dup7\n        /* \"#utility.yul\":12029:12051   */\n      add\n        /* \"#utility.yul\":11983:12061   */\n      tag_347\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":11973:12061   */\n      swap2\n      pop\n        /* \"#utility.yul\":11768:12071   */\n      pop\n        /* \"#utility.yul\":11184:12078   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12084:12198   */\n    tag_356:\n        /* \"#utility.yul\":12151:12157   */\n      0x00\n        /* \"#utility.yul\":12185:12190   */\n      dup2\n        /* \"#utility.yul\":12179:12191   */\n      mload\n        /* \"#utility.yul\":12169:12191   */\n      swap1\n      pop\n        /* \"#utility.yul\":12084:12198   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12204:12388   */\n    tag_357:\n        /* \"#utility.yul\":12303:12314   */\n      0x00\n        /* \"#utility.yul\":12337:12343   */\n      dup3\n        /* \"#utility.yul\":12332:12335   */\n      dup3\n        /* \"#utility.yul\":12325:12344   */\n      mstore\n        /* \"#utility.yul\":12377:12381   */\n      0x20\n        /* \"#utility.yul\":12372:12375   */\n      dup3\n        /* \"#utility.yul\":12368:12382   */\n      add\n        /* \"#utility.yul\":12353:12382   */\n      swap1\n      pop\n        /* \"#utility.yul\":12204:12388   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12394:12526   */\n    tag_358:\n        /* \"#utility.yul\":12461:12465   */\n      0x00\n        /* \"#utility.yul\":12484:12487   */\n      dup2\n        /* \"#utility.yul\":12476:12487   */\n      swap1\n      pop\n        /* \"#utility.yul\":12514:12518   */\n      0x20\n        /* \"#utility.yul\":12509:12512   */\n      dup3\n        /* \"#utility.yul\":12505:12519   */\n      add\n        /* \"#utility.yul\":12497:12519   */\n      swap1\n      pop\n        /* \"#utility.yul\":12394:12526   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12532:12640   */\n    tag_359:\n        /* \"#utility.yul\":12609:12633   */\n      tag_543\n        /* \"#utility.yul\":12627:12632   */\n      dup2\n        /* \"#utility.yul\":12609:12633   */\n      tag_327\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":12604:12607   */\n      dup3\n        /* \"#utility.yul\":12597:12634   */\n      mstore\n        /* \"#utility.yul\":12532:12640   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12646:12825   */\n    tag_360:\n        /* \"#utility.yul\":12715:12725   */\n      0x00\n        /* \"#utility.yul\":12736:12782   */\n      tag_545\n        /* \"#utility.yul\":12778:12781   */\n      dup4\n        /* \"#utility.yul\":12770:12776   */\n      dup4\n        /* \"#utility.yul\":12736:12782   */\n      tag_359\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":12814:12818   */\n      0x20\n        /* \"#utility.yul\":12809:12812   */\n      dup4\n        /* \"#utility.yul\":12805:12819   */\n      add\n        /* \"#utility.yul\":12791:12819   */\n      swap1\n      pop\n        /* \"#utility.yul\":12646:12825   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12831:12944   */\n    tag_361:\n        /* \"#utility.yul\":12901:12905   */\n      0x00\n        /* \"#utility.yul\":12933:12937   */\n      0x20\n        /* \"#utility.yul\":12928:12931   */\n      dup3\n        /* \"#utility.yul\":12924:12938   */\n      add\n        /* \"#utility.yul\":12916:12938   */\n      swap1\n      pop\n        /* \"#utility.yul\":12831:12944   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12980:13712   */\n    tag_362:\n        /* \"#utility.yul\":13099:13102   */\n      0x00\n        /* \"#utility.yul\":13128:13182   */\n      tag_548\n        /* \"#utility.yul\":13176:13181   */\n      dup3\n        /* \"#utility.yul\":13128:13182   */\n      tag_356\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":13198:13284   */\n      tag_549\n        /* \"#utility.yul\":13277:13283   */\n      dup2\n        /* \"#utility.yul\":13272:13275   */\n      dup6\n        /* \"#utility.yul\":13198:13284   */\n      tag_357\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":13191:13284   */\n      swap4\n      pop\n        /* \"#utility.yul\":13308:13364   */\n      tag_550\n        /* \"#utility.yul\":13358:13363   */\n      dup4\n        /* \"#utility.yul\":13308:13364   */\n      tag_358\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":13387:13394   */\n      dup1\n        /* \"#utility.yul\":13418:13419   */\n      0x00\n        /* \"#utility.yul\":13403:13687   */\n    tag_551:\n        /* \"#utility.yul\":13428:13434   */\n      dup4\n        /* \"#utility.yul\":13425:13426   */\n      dup2\n        /* \"#utility.yul\":13422:13435   */\n      lt\n        /* \"#utility.yul\":13403:13687   */\n      iszero\n      tag_553\n      jumpi\n        /* \"#utility.yul\":13504:13510   */\n      dup2\n        /* \"#utility.yul\":13498:13511   */\n      mload\n        /* \"#utility.yul\":13531:13594   */\n      tag_554\n        /* \"#utility.yul\":13590:13593   */\n      dup9\n        /* \"#utility.yul\":13575:13588   */\n      dup3\n        /* \"#utility.yul\":13531:13594   */\n      tag_360\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":13524:13594   */\n      swap8\n      pop\n        /* \"#utility.yul\":13617:13677   */\n      tag_555\n        /* \"#utility.yul\":13670:13676   */\n      dup4\n        /* \"#utility.yul\":13617:13677   */\n      tag_361\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":13607:13677   */\n      swap3\n      pop\n        /* \"#utility.yul\":13463:13687   */\n      pop\n        /* \"#utility.yul\":13450:13451   */\n      0x01\n        /* \"#utility.yul\":13447:13448   */\n      dup2\n        /* \"#utility.yul\":13443:13452   */\n      add\n        /* \"#utility.yul\":13438:13452   */\n      swap1\n      pop\n        /* \"#utility.yul\":13403:13687   */\n      jump(tag_551)\n    tag_553:\n        /* \"#utility.yul\":13407:13421   */\n      pop\n        /* \"#utility.yul\":13703:13706   */\n      dup6\n        /* \"#utility.yul\":13696:13706   */\n      swap4\n      pop\n        /* \"#utility.yul\":13104:13712   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":12980:13712   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13718:14091   */\n    tag_48:\n        /* \"#utility.yul\":13861:13865   */\n      0x00\n        /* \"#utility.yul\":13899:13901   */\n      0x20\n        /* \"#utility.yul\":13888:13897   */\n      dup3\n        /* \"#utility.yul\":13884:13902   */\n      add\n        /* \"#utility.yul\":13876:13902   */\n      swap1\n      pop\n        /* \"#utility.yul\":13948:13957   */\n      dup2\n        /* \"#utility.yul\":13942:13946   */\n      dup2\n        /* \"#utility.yul\":13938:13958   */\n      sub\n        /* \"#utility.yul\":13934:13935   */\n      0x00\n        /* \"#utility.yul\":13923:13932   */\n      dup4\n        /* \"#utility.yul\":13919:13936   */\n      add\n        /* \"#utility.yul\":13912:13959   */\n      mstore\n        /* \"#utility.yul\":13976:14084   */\n      tag_557\n        /* \"#utility.yul\":14079:14083   */\n      dup2\n        /* \"#utility.yul\":14070:14076   */\n      dup5\n        /* \"#utility.yul\":13976:14084   */\n      tag_362\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":13968:14084   */\n      swap1\n      pop\n        /* \"#utility.yul\":13718:14091   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14097:14213   */\n    tag_363:\n        /* \"#utility.yul\":14167:14188   */\n      tag_559\n        /* \"#utility.yul\":14182:14187   */\n      dup2\n        /* \"#utility.yul\":14167:14188   */\n      tag_334\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":14160:14165   */\n      dup2\n        /* \"#utility.yul\":14157:14189   */\n      eq\n        /* \"#utility.yul\":14147:14207   */\n      tag_560\n      jumpi\n        /* \"#utility.yul\":14203:14204   */\n      0x00\n        /* \"#utility.yul\":14200:14201   */\n      dup1\n        /* \"#utility.yul\":14193:14205   */\n      revert\n        /* \"#utility.yul\":14147:14207   */\n    tag_560:\n        /* \"#utility.yul\":14097:14213   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14219:14352   */\n    tag_364:\n        /* \"#utility.yul\":14262:14267   */\n      0x00\n        /* \"#utility.yul\":14300:14306   */\n      dup2\n        /* \"#utility.yul\":14287:14307   */\n      calldataload\n        /* \"#utility.yul\":14278:14307   */\n      swap1\n      pop\n        /* \"#utility.yul\":14316:14346   */\n      tag_562\n        /* \"#utility.yul\":14340:14345   */\n      dup2\n        /* \"#utility.yul\":14316:14346   */\n      tag_363\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":14219:14352   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14358:14826   */\n    tag_54:\n        /* \"#utility.yul\":14423:14429   */\n      0x00\n        /* \"#utility.yul\":14431:14437   */\n      dup1\n        /* \"#utility.yul\":14480:14482   */\n      0x40\n        /* \"#utility.yul\":14468:14477   */\n      dup4\n        /* \"#utility.yul\":14459:14466   */\n      dup6\n        /* \"#utility.yul\":14455:14478   */\n      sub\n        /* \"#utility.yul\":14451:14483   */\n      slt\n        /* \"#utility.yul\":14448:14567   */\n      iszero\n      tag_564\n      jumpi\n        /* \"#utility.yul\":14486:14565   */\n      tag_565\n      tag_321\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":14448:14567   */\n    tag_564:\n        /* \"#utility.yul\":14606:14607   */\n      0x00\n        /* \"#utility.yul\":14631:14684   */\n      tag_566\n        /* \"#utility.yul\":14676:14683   */\n      dup6\n        /* \"#utility.yul\":14667:14673   */\n      dup3\n        /* \"#utility.yul\":14656:14665   */\n      dup7\n        /* \"#utility.yul\":14652:14674   */\n      add\n        /* \"#utility.yul\":14631:14684   */\n      tag_326\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":14621:14684   */\n      swap3\n      pop\n        /* \"#utility.yul\":14577:14694   */\n      pop\n        /* \"#utility.yul\":14733:14735   */\n      0x20\n        /* \"#utility.yul\":14759:14809   */\n      tag_567\n        /* \"#utility.yul\":14801:14808   */\n      dup6\n        /* \"#utility.yul\":14792:14798   */\n      dup3\n        /* \"#utility.yul\":14781:14790   */\n      dup7\n        /* \"#utility.yul\":14777:14799   */\n      add\n        /* \"#utility.yul\":14759:14809   */\n      tag_364\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":14749:14809   */\n      swap2\n      pop\n        /* \"#utility.yul\":14704:14819   */\n      pop\n        /* \"#utility.yul\":14358:14826   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14832:15161   */\n    tag_61:\n        /* \"#utility.yul\":14891:14897   */\n      0x00\n        /* \"#utility.yul\":14940:14942   */\n      0x20\n        /* \"#utility.yul\":14928:14937   */\n      dup3\n        /* \"#utility.yul\":14919:14926   */\n      dup5\n        /* \"#utility.yul\":14915:14938   */\n      sub\n        /* \"#utility.yul\":14911:14943   */\n      slt\n        /* \"#utility.yul\":14908:15027   */\n      iszero\n      tag_569\n      jumpi\n        /* \"#utility.yul\":14946:15025   */\n      tag_570\n      tag_321\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":14908:15027   */\n    tag_569:\n        /* \"#utility.yul\":15066:15067   */\n      0x00\n        /* \"#utility.yul\":15091:15144   */\n      tag_571\n        /* \"#utility.yul\":15136:15143   */\n      dup5\n        /* \"#utility.yul\":15127:15133   */\n      dup3\n        /* \"#utility.yul\":15116:15125   */\n      dup6\n        /* \"#utility.yul\":15112:15134   */\n      add\n        /* \"#utility.yul\":15091:15144   */\n      tag_329\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":15081:15144   */\n      swap2\n      pop\n        /* \"#utility.yul\":15037:15154   */\n      pop\n        /* \"#utility.yul\":14832:15161   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15167:15285   */\n    tag_365:\n        /* \"#utility.yul\":15254:15278   */\n      tag_573\n        /* \"#utility.yul\":15272:15277   */\n      dup2\n        /* \"#utility.yul\":15254:15278   */\n      tag_324\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":15249:15252   */\n      dup3\n        /* \"#utility.yul\":15242:15279   */\n      mstore\n        /* \"#utility.yul\":15167:15285   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15291:15513   */\n    tag_72:\n        /* \"#utility.yul\":15384:15388   */\n      0x00\n        /* \"#utility.yul\":15422:15424   */\n      0x20\n        /* \"#utility.yul\":15411:15420   */\n      dup3\n        /* \"#utility.yul\":15407:15425   */\n      add\n        /* \"#utility.yul\":15399:15425   */\n      swap1\n      pop\n        /* \"#utility.yul\":15435:15506   */\n      tag_575\n        /* \"#utility.yul\":15503:15504   */\n      0x00\n        /* \"#utility.yul\":15492:15501   */\n      dup4\n        /* \"#utility.yul\":15488:15505   */\n      add\n        /* \"#utility.yul\":15479:15485   */\n      dup5\n        /* \"#utility.yul\":15435:15506   */\n      tag_365\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":15291:15513   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15519:15993   */\n    tag_75:\n        /* \"#utility.yul\":15587:15593   */\n      0x00\n        /* \"#utility.yul\":15595:15601   */\n      dup1\n        /* \"#utility.yul\":15644:15646   */\n      0x40\n        /* \"#utility.yul\":15632:15641   */\n      dup4\n        /* \"#utility.yul\":15623:15630   */\n      dup6\n        /* \"#utility.yul\":15619:15642   */\n      sub\n        /* \"#utility.yul\":15615:15647   */\n      slt\n        /* \"#utility.yul\":15612:15731   */\n      iszero\n      tag_577\n      jumpi\n        /* \"#utility.yul\":15650:15729   */\n      tag_578\n      tag_321\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":15612:15731   */\n    tag_577:\n        /* \"#utility.yul\":15770:15771   */\n      0x00\n        /* \"#utility.yul\":15795:15848   */\n      tag_579\n        /* \"#utility.yul\":15840:15847   */\n      dup6\n        /* \"#utility.yul\":15831:15837   */\n      dup3\n        /* \"#utility.yul\":15820:15829   */\n      dup7\n        /* \"#utility.yul\":15816:15838   */\n      add\n        /* \"#utility.yul\":15795:15848   */\n      tag_326\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":15785:15848   */\n      swap3\n      pop\n        /* \"#utility.yul\":15741:15858   */\n      pop\n        /* \"#utility.yul\":15897:15899   */\n      0x20\n        /* \"#utility.yul\":15923:15976   */\n      tag_580\n        /* \"#utility.yul\":15968:15975   */\n      dup6\n        /* \"#utility.yul\":15959:15965   */\n      dup3\n        /* \"#utility.yul\":15948:15957   */\n      dup7\n        /* \"#utility.yul\":15944:15966   */\n      add\n        /* \"#utility.yul\":15923:15976   */\n      tag_326\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":15913:15976   */\n      swap2\n      pop\n        /* \"#utility.yul\":15868:15986   */\n      pop\n        /* \"#utility.yul\":15519:15993   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15999:17088   */\n    tag_80:\n        /* \"#utility.yul\":16103:16109   */\n      0x00\n        /* \"#utility.yul\":16111:16117   */\n      dup1\n        /* \"#utility.yul\":16119:16125   */\n      0x00\n        /* \"#utility.yul\":16127:16133   */\n      dup1\n        /* \"#utility.yul\":16135:16141   */\n      0x00\n        /* \"#utility.yul\":16184:16187   */\n      0xa0\n        /* \"#utility.yul\":16172:16181   */\n      dup7\n        /* \"#utility.yul\":16163:16170   */\n      dup9\n        /* \"#utility.yul\":16159:16182   */\n      sub\n        /* \"#utility.yul\":16155:16188   */\n      slt\n        /* \"#utility.yul\":16152:16272   */\n      iszero\n      tag_582\n      jumpi\n        /* \"#utility.yul\":16191:16270   */\n      tag_583\n      tag_321\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":16152:16272   */\n    tag_582:\n        /* \"#utility.yul\":16311:16312   */\n      0x00\n        /* \"#utility.yul\":16336:16389   */\n      tag_584\n        /* \"#utility.yul\":16381:16388   */\n      dup9\n        /* \"#utility.yul\":16372:16378   */\n      dup3\n        /* \"#utility.yul\":16361:16370   */\n      dup10\n        /* \"#utility.yul\":16357:16379   */\n      add\n        /* \"#utility.yul\":16336:16389   */\n      tag_326\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":16326:16389   */\n      swap6\n      pop\n        /* \"#utility.yul\":16282:16399   */\n      pop\n        /* \"#utility.yul\":16438:16440   */\n      0x20\n        /* \"#utility.yul\":16464:16517   */\n      tag_585\n        /* \"#utility.yul\":16509:16516   */\n      dup9\n        /* \"#utility.yul\":16500:16506   */\n      dup3\n        /* \"#utility.yul\":16489:16498   */\n      dup10\n        /* \"#utility.yul\":16485:16507   */\n      add\n        /* \"#utility.yul\":16464:16517   */\n      tag_326\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":16454:16517   */\n      swap5\n      pop\n        /* \"#utility.yul\":16409:16527   */\n      pop\n        /* \"#utility.yul\":16566:16568   */\n      0x40\n        /* \"#utility.yul\":16592:16645   */\n      tag_586\n        /* \"#utility.yul\":16637:16644   */\n      dup9\n        /* \"#utility.yul\":16628:16634   */\n      dup3\n        /* \"#utility.yul\":16617:16626   */\n      dup10\n        /* \"#utility.yul\":16613:16635   */\n      add\n        /* \"#utility.yul\":16592:16645   */\n      tag_329\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":16582:16645   */\n      swap4\n      pop\n        /* \"#utility.yul\":16537:16655   */\n      pop\n        /* \"#utility.yul\":16694:16696   */\n      0x60\n        /* \"#utility.yul\":16720:16773   */\n      tag_587\n        /* \"#utility.yul\":16765:16772   */\n      dup9\n        /* \"#utility.yul\":16756:16762   */\n      dup3\n        /* \"#utility.yul\":16745:16754   */\n      dup10\n        /* \"#utility.yul\":16741:16763   */\n      add\n        /* \"#utility.yul\":16720:16773   */\n      tag_329\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":16710:16773   */\n      swap3\n      pop\n        /* \"#utility.yul\":16665:16783   */\n      pop\n        /* \"#utility.yul\":16850:16853   */\n      0x80\n        /* \"#utility.yul\":16839:16848   */\n      dup7\n        /* \"#utility.yul\":16835:16854   */\n      add\n        /* \"#utility.yul\":16822:16855   */\n      calldataload\n        /* \"#utility.yul\":16882:16900   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16874:16880   */\n      dup2\n        /* \"#utility.yul\":16871:16901   */\n      gt\n        /* \"#utility.yul\":16868:16985   */\n      iszero\n      tag_588\n      jumpi\n        /* \"#utility.yul\":16904:16983   */\n      tag_589\n      tag_322\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":16868:16985   */\n    tag_588:\n        /* \"#utility.yul\":17009:17071   */\n      tag_590\n        /* \"#utility.yul\":17063:17070   */\n      dup9\n        /* \"#utility.yul\":17054:17060   */\n      dup3\n        /* \"#utility.yul\":17043:17052   */\n      dup10\n        /* \"#utility.yul\":17039:17061   */\n      add\n        /* \"#utility.yul\":17009:17071   */\n      tag_352\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":16999:17071   */\n      swap2\n      pop\n        /* \"#utility.yul\":16793:17081   */\n      pop\n        /* \"#utility.yul\":15999:17088   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17094:17333   */\n    tag_366:\n        /* \"#utility.yul\":17234:17268   */\n      0x455243313135354d657461646174613a2062616c616e63652071756572792066\n        /* \"#utility.yul\":17230:17231   */\n      0x00\n        /* \"#utility.yul\":17222:17228   */\n      dup3\n        /* \"#utility.yul\":17218:17232   */\n      add\n        /* \"#utility.yul\":17211:17269   */\n      mstore\n        /* \"#utility.yul\":17303:17325   */\n      0x6f72206e6f6e6578697374656e7420746f6b656e000000000000000000000000\n        /* \"#utility.yul\":17298:17300   */\n      0x20\n        /* \"#utility.yul\":17290:17296   */\n      dup3\n        /* \"#utility.yul\":17286:17301   */\n      add\n        /* \"#utility.yul\":17279:17326   */\n      mstore\n        /* \"#utility.yul\":17094:17333   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17339:17705   */\n    tag_367:\n        /* \"#utility.yul\":17481:17484   */\n      0x00\n        /* \"#utility.yul\":17502:17569   */\n      tag_593\n        /* \"#utility.yul\":17566:17568   */\n      0x34\n        /* \"#utility.yul\":17561:17564   */\n      dup4\n        /* \"#utility.yul\":17502:17569   */\n      tag_337\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":17495:17569   */\n      swap2\n      pop\n        /* \"#utility.yul\":17578:17671   */\n      tag_594\n        /* \"#utility.yul\":17667:17670   */\n      dup3\n        /* \"#utility.yul\":17578:17671   */\n      tag_366\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":17696:17698   */\n      0x40\n        /* \"#utility.yul\":17691:17694   */\n      dup3\n        /* \"#utility.yul\":17687:17699   */\n      add\n        /* \"#utility.yul\":17680:17699   */\n      swap1\n      pop\n        /* \"#utility.yul\":17339:17705   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17711:18130   */\n    tag_87:\n        /* \"#utility.yul\":17877:17881   */\n      0x00\n        /* \"#utility.yul\":17915:17917   */\n      0x20\n        /* \"#utility.yul\":17904:17913   */\n      dup3\n        /* \"#utility.yul\":17900:17918   */\n      add\n        /* \"#utility.yul\":17892:17918   */\n      swap1\n      pop\n        /* \"#utility.yul\":17964:17973   */\n      dup2\n        /* \"#utility.yul\":17958:17962   */\n      dup2\n        /* \"#utility.yul\":17954:17974   */\n      sub\n        /* \"#utility.yul\":17950:17951   */\n      0x00\n        /* \"#utility.yul\":17939:17948   */\n      dup4\n        /* \"#utility.yul\":17935:17952   */\n      add\n        /* \"#utility.yul\":17928:17975   */\n      mstore\n        /* \"#utility.yul\":17992:18123   */\n      tag_596\n        /* \"#utility.yul\":18118:18122   */\n      dup2\n        /* \"#utility.yul\":17992:18123   */\n      tag_367\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":17984:18123   */\n      swap1\n      pop\n        /* \"#utility.yul\":17711:18130   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18136:18366   */\n    tag_368:\n        /* \"#utility.yul\":18276:18310   */\n      0x455243313135353a2062616c616e636520717565727920666f7220746865207a\n        /* \"#utility.yul\":18272:18273   */\n      0x00\n        /* \"#utility.yul\":18264:18270   */\n      dup3\n        /* \"#utility.yul\":18260:18274   */\n      add\n        /* \"#utility.yul\":18253:18311   */\n      mstore\n        /* \"#utility.yul\":18345:18358   */\n      0x65726f2061646472657373000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18340:18342   */\n      0x20\n        /* \"#utility.yul\":18332:18338   */\n      dup3\n        /* \"#utility.yul\":18328:18343   */\n      add\n        /* \"#utility.yul\":18321:18359   */\n      mstore\n        /* \"#utility.yul\":18136:18366   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18372:18738   */\n    tag_369:\n        /* \"#utility.yul\":18514:18517   */\n      0x00\n        /* \"#utility.yul\":18535:18602   */\n      tag_599\n        /* \"#utility.yul\":18599:18601   */\n      0x2b\n        /* \"#utility.yul\":18594:18597   */\n      dup4\n        /* \"#utility.yul\":18535:18602   */\n      tag_337\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":18528:18602   */\n      swap2\n      pop\n        /* \"#utility.yul\":18611:18704   */\n      tag_600\n        /* \"#utility.yul\":18700:18703   */\n      dup3\n        /* \"#utility.yul\":18611:18704   */\n      tag_368\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":18729:18731   */\n      0x40\n        /* \"#utility.yul\":18724:18727   */\n      dup3\n        /* \"#utility.yul\":18720:18732   */\n      add\n        /* \"#utility.yul\":18713:18732   */\n      swap1\n      pop\n        /* \"#utility.yul\":18372:18738   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18744:19163   */\n    tag_90:\n        /* \"#utility.yul\":18910:18914   */\n      0x00\n        /* \"#utility.yul\":18948:18950   */\n      0x20\n        /* \"#utility.yul\":18937:18946   */\n      dup3\n        /* \"#utility.yul\":18933:18951   */\n      add\n        /* \"#utility.yul\":18925:18951   */\n      swap1\n      pop\n        /* \"#utility.yul\":18997:19006   */\n      dup2\n        /* \"#utility.yul\":18991:18995   */\n      dup2\n        /* \"#utility.yul\":18987:19007   */\n      sub\n        /* \"#utility.yul\":18983:18984   */\n      0x00\n        /* \"#utility.yul\":18972:18981   */\n      dup4\n        /* \"#utility.yul\":18968:18985   */\n      add\n        /* \"#utility.yul\":18961:19008   */\n      mstore\n        /* \"#utility.yul\":19025:19156   */\n      tag_602\n        /* \"#utility.yul\":19151:19155   */\n      dup2\n        /* \"#utility.yul\":19025:19156   */\n      tag_369\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":19017:19156   */\n      swap1\n      pop\n        /* \"#utility.yul\":18744:19163   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19169:19349   */\n    tag_370:\n        /* \"#utility.yul\":19217:19294   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19214:19215   */\n      0x00\n        /* \"#utility.yul\":19207:19295   */\n      mstore\n        /* \"#utility.yul\":19314:19318   */\n      0x22\n        /* \"#utility.yul\":19311:19312   */\n      0x04\n        /* \"#utility.yul\":19304:19319   */\n      mstore\n        /* \"#utility.yul\":19338:19342   */\n      0x24\n        /* \"#utility.yul\":19335:19336   */\n      0x00\n        /* \"#utility.yul\":19328:19343   */\n      revert\n        /* \"#utility.yul\":19355:19675   */\n    tag_94:\n        /* \"#utility.yul\":19399:19405   */\n      0x00\n        /* \"#utility.yul\":19436:19437   */\n      0x02\n        /* \"#utility.yul\":19430:19434   */\n      dup3\n        /* \"#utility.yul\":19426:19438   */\n      div\n        /* \"#utility.yul\":19416:19438   */\n      swap1\n      pop\n        /* \"#utility.yul\":19483:19484   */\n      0x01\n        /* \"#utility.yul\":19477:19481   */\n      dup3\n        /* \"#utility.yul\":19473:19485   */\n      and\n        /* \"#utility.yul\":19504:19522   */\n      dup1\n        /* \"#utility.yul\":19494:19575   */\n      tag_605\n      jumpi\n        /* \"#utility.yul\":19560:19564   */\n      0x7f\n        /* \"#utility.yul\":19552:19558   */\n      dup3\n        /* \"#utility.yul\":19548:19565   */\n      and\n        /* \"#utility.yul\":19538:19565   */\n      swap2\n      pop\n        /* \"#utility.yul\":19494:19575   */\n    tag_605:\n        /* \"#utility.yul\":19622:19624   */\n      0x20\n        /* \"#utility.yul\":19614:19620   */\n      dup3\n        /* \"#utility.yul\":19611:19625   */\n      lt\n        /* \"#utility.yul\":19591:19609   */\n      dup2\n        /* \"#utility.yul\":19588:19626   */\n      sub\n        /* \"#utility.yul\":19585:19669   */\n      tag_606\n      jumpi\n        /* \"#utility.yul\":19641:19659   */\n      tag_607\n      tag_370\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":19585:19669   */\n    tag_606:\n        /* \"#utility.yul\":19406:19675   */\n      pop\n        /* \"#utility.yul\":19355:19675   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19681:19908   */\n    tag_371:\n        /* \"#utility.yul\":19821:19855   */\n      0x455243313135353a2069647320616e6420616d6f756e7473206c656e67746820\n        /* \"#utility.yul\":19817:19818   */\n      0x00\n        /* \"#utility.yul\":19809:19815   */\n      dup3\n        /* \"#utility.yul\":19805:19819   */\n      add\n        /* \"#utility.yul\":19798:19856   */\n      mstore\n        /* \"#utility.yul\":19890:19900   */\n      0x6d69736d61746368000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19885:19887   */\n      0x20\n        /* \"#utility.yul\":19877:19883   */\n      dup3\n        /* \"#utility.yul\":19873:19888   */\n      add\n        /* \"#utility.yul\":19866:19901   */\n      mstore\n        /* \"#utility.yul\":19681:19908   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19914:20280   */\n    tag_372:\n        /* \"#utility.yul\":20056:20059   */\n      0x00\n        /* \"#utility.yul\":20077:20144   */\n      tag_610\n        /* \"#utility.yul\":20141:20143   */\n      0x28\n        /* \"#utility.yul\":20136:20139   */\n      dup4\n        /* \"#utility.yul\":20077:20144   */\n      tag_337\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":20070:20144   */\n      swap2\n      pop\n        /* \"#utility.yul\":20153:20246   */\n      tag_611\n        /* \"#utility.yul\":20242:20245   */\n      dup3\n        /* \"#utility.yul\":20153:20246   */\n      tag_371\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":20271:20273   */\n      0x40\n        /* \"#utility.yul\":20266:20269   */\n      dup3\n        /* \"#utility.yul\":20262:20274   */\n      add\n        /* \"#utility.yul\":20255:20274   */\n      swap1\n      pop\n        /* \"#utility.yul\":19914:20280   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20286:20705   */\n    tag_105:\n        /* \"#utility.yul\":20452:20456   */\n      0x00\n        /* \"#utility.yul\":20490:20492   */\n      0x20\n        /* \"#utility.yul\":20479:20488   */\n      dup3\n        /* \"#utility.yul\":20475:20493   */\n      add\n        /* \"#utility.yul\":20467:20493   */\n      swap1\n      pop\n        /* \"#utility.yul\":20539:20548   */\n      dup2\n        /* \"#utility.yul\":20533:20537   */\n      dup2\n        /* \"#utility.yul\":20529:20549   */\n      sub\n        /* \"#utility.yul\":20525:20526   */\n      0x00\n        /* \"#utility.yul\":20514:20523   */\n      dup4\n        /* \"#utility.yul\":20510:20527   */\n      add\n        /* \"#utility.yul\":20503:20550   */\n      mstore\n        /* \"#utility.yul\":20567:20698   */\n      tag_613\n        /* \"#utility.yul\":20693:20697   */\n      dup2\n        /* \"#utility.yul\":20567:20698   */\n      tag_372\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":20559:20698   */\n      swap1\n      pop\n        /* \"#utility.yul\":20286:20705   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20711:20935   */\n    tag_373:\n        /* \"#utility.yul\":20851:20885   */\n      0x455243313135353a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":20847:20848   */\n      0x00\n        /* \"#utility.yul\":20839:20845   */\n      dup3\n        /* \"#utility.yul\":20835:20849   */\n      add\n        /* \"#utility.yul\":20828:20886   */\n      mstore\n        /* \"#utility.yul\":20920:20927   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20915:20917   */\n      0x20\n        /* \"#utility.yul\":20907:20913   */\n      dup3\n        /* \"#utility.yul\":20903:20918   */\n      add\n        /* \"#utility.yul\":20896:20928   */\n      mstore\n        /* \"#utility.yul\":20711:20935   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20941:21307   */\n    tag_374:\n        /* \"#utility.yul\":21083:21086   */\n      0x00\n        /* \"#utility.yul\":21104:21171   */\n      tag_616\n        /* \"#utility.yul\":21168:21170   */\n      0x25\n        /* \"#utility.yul\":21163:21166   */\n      dup4\n        /* \"#utility.yul\":21104:21171   */\n      tag_337\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":21097:21171   */\n      swap2\n      pop\n        /* \"#utility.yul\":21180:21273   */\n      tag_617\n        /* \"#utility.yul\":21269:21272   */\n      dup3\n        /* \"#utility.yul\":21180:21273   */\n      tag_373\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":21298:21300   */\n      0x40\n        /* \"#utility.yul\":21293:21296   */\n      dup3\n        /* \"#utility.yul\":21289:21301   */\n      add\n        /* \"#utility.yul\":21282:21301   */\n      swap1\n      pop\n        /* \"#utility.yul\":20941:21307   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21313:21732   */\n    tag_108:\n        /* \"#utility.yul\":21479:21483   */\n      0x00\n        /* \"#utility.yul\":21517:21519   */\n      0x20\n        /* \"#utility.yul\":21506:21515   */\n      dup3\n        /* \"#utility.yul\":21502:21520   */\n      add\n        /* \"#utility.yul\":21494:21520   */\n      swap1\n      pop\n        /* \"#utility.yul\":21566:21575   */\n      dup2\n        /* \"#utility.yul\":21560:21564   */\n      dup2\n        /* \"#utility.yul\":21556:21576   */\n      sub\n        /* \"#utility.yul\":21552:21553   */\n      0x00\n        /* \"#utility.yul\":21541:21550   */\n      dup4\n        /* \"#utility.yul\":21537:21554   */\n      add\n        /* \"#utility.yul\":21530:21577   */\n      mstore\n        /* \"#utility.yul\":21594:21725   */\n      tag_619\n        /* \"#utility.yul\":21720:21724   */\n      dup2\n        /* \"#utility.yul\":21594:21725   */\n      tag_374\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":21586:21725   */\n      swap1\n      pop\n        /* \"#utility.yul\":21313:21732   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21738:21975   */\n    tag_375:\n        /* \"#utility.yul\":21878:21912   */\n      0x455243313135353a207472616e736665722063616c6c6572206973206e6f7420\n        /* \"#utility.yul\":21874:21875   */\n      0x00\n        /* \"#utility.yul\":21866:21872   */\n      dup3\n        /* \"#utility.yul\":21862:21876   */\n      add\n        /* \"#utility.yul\":21855:21913   */\n      mstore\n        /* \"#utility.yul\":21947:21967   */\n      0x6f776e6572206e6f7220617070726f7665640000000000000000000000000000\n        /* \"#utility.yul\":21942:21944   */\n      0x20\n        /* \"#utility.yul\":21934:21940   */\n      dup3\n        /* \"#utility.yul\":21930:21945   */\n      add\n        /* \"#utility.yul\":21923:21968   */\n      mstore\n        /* \"#utility.yul\":21738:21975   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21981:22347   */\n    tag_376:\n        /* \"#utility.yul\":22123:22126   */\n      0x00\n        /* \"#utility.yul\":22144:22211   */\n      tag_622\n        /* \"#utility.yul\":22208:22210   */\n      0x32\n        /* \"#utility.yul\":22203:22206   */\n      dup4\n        /* \"#utility.yul\":22144:22211   */\n      tag_337\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":22137:22211   */\n      swap2\n      pop\n        /* \"#utility.yul\":22220:22313   */\n      tag_623\n        /* \"#utility.yul\":22309:22312   */\n      dup3\n        /* \"#utility.yul\":22220:22313   */\n      tag_375\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":22338:22340   */\n      0x40\n        /* \"#utility.yul\":22333:22336   */\n      dup3\n        /* \"#utility.yul\":22329:22341   */\n      add\n        /* \"#utility.yul\":22322:22341   */\n      swap1\n      pop\n        /* \"#utility.yul\":21981:22347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22353:22772   */\n    tag_116:\n        /* \"#utility.yul\":22519:22523   */\n      0x00\n        /* \"#utility.yul\":22557:22559   */\n      0x20\n        /* \"#utility.yul\":22546:22555   */\n      dup3\n        /* \"#utility.yul\":22542:22560   */\n      add\n        /* \"#utility.yul\":22534:22560   */\n      swap1\n      pop\n        /* \"#utility.yul\":22606:22615   */\n      dup2\n        /* \"#utility.yul\":22600:22604   */\n      dup2\n        /* \"#utility.yul\":22596:22616   */\n      sub\n        /* \"#utility.yul\":22592:22593   */\n      0x00\n        /* \"#utility.yul\":22581:22590   */\n      dup4\n        /* \"#utility.yul\":22577:22594   */\n      add\n        /* \"#utility.yul\":22570:22617   */\n      mstore\n        /* \"#utility.yul\":22634:22765   */\n      tag_625\n        /* \"#utility.yul\":22760:22764   */\n      dup2\n        /* \"#utility.yul\":22634:22765   */\n      tag_376\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":22626:22765   */\n      swap1\n      pop\n        /* \"#utility.yul\":22353:22772   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22778:22958   */\n    tag_125:\n        /* \"#utility.yul\":22826:22903   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22823:22824   */\n      0x00\n        /* \"#utility.yul\":22816:22904   */\n      mstore\n        /* \"#utility.yul\":22923:22927   */\n      0x32\n        /* \"#utility.yul\":22920:22921   */\n      0x04\n        /* \"#utility.yul\":22913:22928   */\n      mstore\n        /* \"#utility.yul\":22947:22951   */\n      0x24\n        /* \"#utility.yul\":22944:22945   */\n      0x00\n        /* \"#utility.yul\":22937:22952   */\n      revert\n        /* \"#utility.yul\":22964:23144   */\n    tag_377:\n        /* \"#utility.yul\":23012:23089   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23009:23010   */\n      0x00\n        /* \"#utility.yul\":23002:23090   */\n      mstore\n        /* \"#utility.yul\":23109:23113   */\n      0x11\n        /* \"#utility.yul\":23106:23107   */\n      0x04\n        /* \"#utility.yul\":23099:23114   */\n      mstore\n        /* \"#utility.yul\":23133:23137   */\n      0x24\n        /* \"#utility.yul\":23130:23131   */\n      0x00\n        /* \"#utility.yul\":23123:23138   */\n      revert\n        /* \"#utility.yul\":23150:23383   */\n    tag_133:\n        /* \"#utility.yul\":23189:23192   */\n      0x00\n        /* \"#utility.yul\":23212:23236   */\n      tag_629\n        /* \"#utility.yul\":23230:23235   */\n      dup3\n        /* \"#utility.yul\":23212:23236   */\n      tag_327\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":23203:23236   */\n      swap2\n      pop\n        /* \"#utility.yul\":23258:23324   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":23251:23256   */\n      dup3\n        /* \"#utility.yul\":23248:23325   */\n      sub\n        /* \"#utility.yul\":23245:23348   */\n      tag_630\n      jumpi\n        /* \"#utility.yul\":23328:23346   */\n      tag_631\n      tag_377\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":23245:23348   */\n    tag_630:\n        /* \"#utility.yul\":23375:23376   */\n      0x01\n        /* \"#utility.yul\":23368:23373   */\n      dup3\n        /* \"#utility.yul\":23364:23377   */\n      add\n        /* \"#utility.yul\":23357:23377   */\n      swap1\n      pop\n        /* \"#utility.yul\":23150:23383   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23389:24023   */\n    tag_135:\n        /* \"#utility.yul\":23610:23614   */\n      0x00\n        /* \"#utility.yul\":23648:23650   */\n      0x40\n        /* \"#utility.yul\":23637:23646   */\n      dup3\n        /* \"#utility.yul\":23633:23651   */\n      add\n        /* \"#utility.yul\":23625:23651   */\n      swap1\n      pop\n        /* \"#utility.yul\":23697:23706   */\n      dup2\n        /* \"#utility.yul\":23691:23695   */\n      dup2\n        /* \"#utility.yul\":23687:23707   */\n      sub\n        /* \"#utility.yul\":23683:23684   */\n      0x00\n        /* \"#utility.yul\":23672:23681   */\n      dup4\n        /* \"#utility.yul\":23668:23685   */\n      add\n        /* \"#utility.yul\":23661:23708   */\n      mstore\n        /* \"#utility.yul\":23725:23833   */\n      tag_633\n        /* \"#utility.yul\":23828:23832   */\n      dup2\n        /* \"#utility.yul\":23819:23825   */\n      dup6\n        /* \"#utility.yul\":23725:23833   */\n      tag_362\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":23717:23833   */\n      swap1\n      pop\n        /* \"#utility.yul\":23880:23889   */\n      dup2\n        /* \"#utility.yul\":23874:23878   */\n      dup2\n        /* \"#utility.yul\":23870:23890   */\n      sub\n        /* \"#utility.yul\":23865:23867   */\n      0x20\n        /* \"#utility.yul\":23854:23863   */\n      dup4\n        /* \"#utility.yul\":23850:23868   */\n      add\n        /* \"#utility.yul\":23843:23891   */\n      mstore\n        /* \"#utility.yul\":23908:24016   */\n      tag_634\n        /* \"#utility.yul\":24011:24015   */\n      dup2\n        /* \"#utility.yul\":24002:24008   */\n      dup5\n        /* \"#utility.yul\":23908:24016   */\n      tag_362\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":23900:24016   */\n      swap1\n      pop\n        /* \"#utility.yul\":23389:24023   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24029:24257   */\n    tag_378:\n        /* \"#utility.yul\":24169:24203   */\n      0x455243313135353a206163636f756e747320616e6420696473206c656e677468\n        /* \"#utility.yul\":24165:24166   */\n      0x00\n        /* \"#utility.yul\":24157:24163   */\n      dup3\n        /* \"#utility.yul\":24153:24167   */\n      add\n        /* \"#utility.yul\":24146:24204   */\n      mstore\n        /* \"#utility.yul\":24238:24249   */\n      0x206d69736d617463680000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":24233:24235   */\n      0x20\n        /* \"#utility.yul\":24225:24231   */\n      dup3\n        /* \"#utility.yul\":24221:24236   */\n      add\n        /* \"#utility.yul\":24214:24250   */\n      mstore\n        /* \"#utility.yul\":24029:24257   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24263:24629   */\n    tag_379:\n        /* \"#utility.yul\":24405:24408   */\n      0x00\n        /* \"#utility.yul\":24426:24493   */\n      tag_637\n        /* \"#utility.yul\":24490:24492   */\n      0x29\n        /* \"#utility.yul\":24485:24488   */\n      dup4\n        /* \"#utility.yul\":24426:24493   */\n      tag_337\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":24419:24493   */\n      swap2\n      pop\n        /* \"#utility.yul\":24502:24595   */\n      tag_638\n        /* \"#utility.yul\":24591:24594   */\n      dup3\n        /* \"#utility.yul\":24502:24595   */\n      tag_378\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":24620:24622   */\n      0x40\n        /* \"#utility.yul\":24615:24618   */\n      dup3\n        /* \"#utility.yul\":24611:24623   */\n      add\n        /* \"#utility.yul\":24604:24623   */\n      swap1\n      pop\n        /* \"#utility.yul\":24263:24629   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24635:25054   */\n    tag_141:\n        /* \"#utility.yul\":24801:24805   */\n      0x00\n        /* \"#utility.yul\":24839:24841   */\n      0x20\n        /* \"#utility.yul\":24828:24837   */\n      dup3\n        /* \"#utility.yul\":24824:24842   */\n      add\n        /* \"#utility.yul\":24816:24842   */\n      swap1\n      pop\n        /* \"#utility.yul\":24888:24897   */\n      dup2\n        /* \"#utility.yul\":24882:24886   */\n      dup2\n        /* \"#utility.yul\":24878:24898   */\n      sub\n        /* \"#utility.yul\":24874:24875   */\n      0x00\n        /* \"#utility.yul\":24863:24872   */\n      dup4\n        /* \"#utility.yul\":24859:24876   */\n      add\n        /* \"#utility.yul\":24852:24899   */\n      mstore\n        /* \"#utility.yul\":24916:25047   */\n      tag_640\n        /* \"#utility.yul\":25042:25046   */\n      dup2\n        /* \"#utility.yul\":24916:25047   */\n      tag_379\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":24908:25047   */\n      swap1\n      pop\n        /* \"#utility.yul\":24635:25054   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25060:25296   */\n    tag_380:\n        /* \"#utility.yul\":25200:25234   */\n      0x455243313135353a2062617463682062616c616e636520717565727920666f72\n        /* \"#utility.yul\":25196:25197   */\n      0x00\n        /* \"#utility.yul\":25188:25194   */\n      dup3\n        /* \"#utility.yul\":25184:25198   */\n      add\n        /* \"#utility.yul\":25177:25235   */\n      mstore\n        /* \"#utility.yul\":25269:25288   */\n      0x20746865207a65726f2061646472657373000000000000000000000000000000\n        /* \"#utility.yul\":25264:25266   */\n      0x20\n        /* \"#utility.yul\":25256:25262   */\n      dup3\n        /* \"#utility.yul\":25252:25267   */\n      add\n        /* \"#utility.yul\":25245:25289   */\n      mstore\n        /* \"#utility.yul\":25060:25296   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25302:25668   */\n    tag_381:\n        /* \"#utility.yul\":25444:25447   */\n      0x00\n        /* \"#utility.yul\":25465:25532   */\n      tag_643\n        /* \"#utility.yul\":25529:25531   */\n      0x31\n        /* \"#utility.yul\":25524:25527   */\n      dup4\n        /* \"#utility.yul\":25465:25532   */\n      tag_337\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":25458:25532   */\n      swap2\n      pop\n        /* \"#utility.yul\":25541:25634   */\n      tag_644\n        /* \"#utility.yul\":25630:25633   */\n      dup3\n        /* \"#utility.yul\":25541:25634   */\n      tag_380\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":25659:25661   */\n      0x40\n        /* \"#utility.yul\":25654:25657   */\n      dup3\n        /* \"#utility.yul\":25650:25662   */\n      add\n        /* \"#utility.yul\":25643:25662   */\n      swap1\n      pop\n        /* \"#utility.yul\":25302:25668   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25674:26093   */\n    tag_153:\n        /* \"#utility.yul\":25840:25844   */\n      0x00\n        /* \"#utility.yul\":25878:25880   */\n      0x20\n        /* \"#utility.yul\":25867:25876   */\n      dup3\n        /* \"#utility.yul\":25863:25881   */\n      add\n        /* \"#utility.yul\":25855:25881   */\n      swap1\n      pop\n        /* \"#utility.yul\":25927:25936   */\n      dup2\n        /* \"#utility.yul\":25921:25925   */\n      dup2\n        /* \"#utility.yul\":25917:25937   */\n      sub\n        /* \"#utility.yul\":25913:25914   */\n      0x00\n        /* \"#utility.yul\":25902:25911   */\n      dup4\n        /* \"#utility.yul\":25898:25915   */\n      add\n        /* \"#utility.yul\":25891:25938   */\n      mstore\n        /* \"#utility.yul\":25955:26086   */\n      tag_646\n        /* \"#utility.yul\":26081:26085   */\n      dup2\n        /* \"#utility.yul\":25955:26086   */\n      tag_381\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":25947:26086   */\n      swap1\n      pop\n        /* \"#utility.yul\":25674:26093   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26099:26327   */\n    tag_382:\n        /* \"#utility.yul\":26239:26273   */\n      0x455243313135353a2073657474696e6720617070726f76616c20737461747573\n        /* \"#utility.yul\":26235:26236   */\n      0x00\n        /* \"#utility.yul\":26227:26233   */\n      dup3\n        /* \"#utility.yul\":26223:26237   */\n      add\n        /* \"#utility.yul\":26216:26274   */\n      mstore\n        /* \"#utility.yul\":26308:26319   */\n      0x20666f722073656c660000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":26303:26305   */\n      0x20\n        /* \"#utility.yul\":26295:26301   */\n      dup3\n        /* \"#utility.yul\":26291:26306   */\n      add\n        /* \"#utility.yul\":26284:26320   */\n      mstore\n        /* \"#utility.yul\":26099:26327   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26333:26699   */\n    tag_383:\n        /* \"#utility.yul\":26475:26478   */\n      0x00\n        /* \"#utility.yul\":26496:26563   */\n      tag_649\n        /* \"#utility.yul\":26560:26562   */\n      0x29\n        /* \"#utility.yul\":26555:26558   */\n      dup4\n        /* \"#utility.yul\":26496:26563   */\n      tag_337\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":26489:26563   */\n      swap2\n      pop\n        /* \"#utility.yul\":26572:26665   */\n      tag_650\n        /* \"#utility.yul\":26661:26664   */\n      dup3\n        /* \"#utility.yul\":26572:26665   */\n      tag_382\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":26690:26692   */\n      0x40\n        /* \"#utility.yul\":26685:26688   */\n      dup3\n        /* \"#utility.yul\":26681:26693   */\n      add\n        /* \"#utility.yul\":26674:26693   */\n      swap1\n      pop\n        /* \"#utility.yul\":26333:26699   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26705:27124   */\n    tag_171:\n        /* \"#utility.yul\":26871:26875   */\n      0x00\n        /* \"#utility.yul\":26909:26911   */\n      0x20\n        /* \"#utility.yul\":26898:26907   */\n      dup3\n        /* \"#utility.yul\":26894:26912   */\n      add\n        /* \"#utility.yul\":26886:26912   */\n      swap1\n      pop\n        /* \"#utility.yul\":26958:26967   */\n      dup2\n        /* \"#utility.yul\":26952:26956   */\n      dup2\n        /* \"#utility.yul\":26948:26968   */\n      sub\n        /* \"#utility.yul\":26944:26945   */\n      0x00\n        /* \"#utility.yul\":26933:26942   */\n      dup4\n        /* \"#utility.yul\":26929:26946   */\n      add\n        /* \"#utility.yul\":26922:26969   */\n      mstore\n        /* \"#utility.yul\":26986:27117   */\n      tag_652\n        /* \"#utility.yul\":27112:27116   */\n      dup2\n        /* \"#utility.yul\":26986:27117   */\n      tag_383\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":26978:27117   */\n      swap1\n      pop\n        /* \"#utility.yul\":26705:27124   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27130:27365   */\n    tag_384:\n        /* \"#utility.yul\":27270:27304   */\n      0x455243313135354d657461646174613a2055524920717565727920666f72206e\n        /* \"#utility.yul\":27266:27267   */\n      0x00\n        /* \"#utility.yul\":27258:27264   */\n      dup3\n        /* \"#utility.yul\":27254:27268   */\n      add\n        /* \"#utility.yul\":27247:27305   */\n      mstore\n        /* \"#utility.yul\":27339:27357   */\n      0x6f6e6578697374656e7420746f6b656e00000000000000000000000000000000\n        /* \"#utility.yul\":27334:27336   */\n      0x20\n        /* \"#utility.yul\":27326:27332   */\n      dup3\n        /* \"#utility.yul\":27322:27337   */\n      add\n        /* \"#utility.yul\":27315:27358   */\n      mstore\n        /* \"#utility.yul\":27130:27365   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27371:27737   */\n    tag_385:\n        /* \"#utility.yul\":27513:27516   */\n      0x00\n        /* \"#utility.yul\":27534:27601   */\n      tag_655\n        /* \"#utility.yul\":27598:27600   */\n      0x30\n        /* \"#utility.yul\":27593:27596   */\n      dup4\n        /* \"#utility.yul\":27534:27601   */\n      tag_337\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":27527:27601   */\n      swap2\n      pop\n        /* \"#utility.yul\":27610:27703   */\n      tag_656\n        /* \"#utility.yul\":27699:27702   */\n      dup3\n        /* \"#utility.yul\":27610:27703   */\n      tag_384\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":27728:27730   */\n      0x40\n        /* \"#utility.yul\":27723:27726   */\n      dup3\n        /* \"#utility.yul\":27719:27731   */\n      add\n        /* \"#utility.yul\":27712:27731   */\n      swap1\n      pop\n        /* \"#utility.yul\":27371:27737   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27743:28162   */\n    tag_185:\n        /* \"#utility.yul\":27909:27913   */\n      0x00\n        /* \"#utility.yul\":27947:27949   */\n      0x20\n        /* \"#utility.yul\":27936:27945   */\n      dup3\n        /* \"#utility.yul\":27932:27950   */\n      add\n        /* \"#utility.yul\":27924:27950   */\n      swap1\n      pop\n        /* \"#utility.yul\":27996:28005   */\n      dup2\n        /* \"#utility.yul\":27990:27994   */\n      dup2\n        /* \"#utility.yul\":27986:28006   */\n      sub\n        /* \"#utility.yul\":27982:27983   */\n      0x00\n        /* \"#utility.yul\":27971:27980   */\n      dup4\n        /* \"#utility.yul\":27967:27984   */\n      add\n        /* \"#utility.yul\":27960:28007   */\n      mstore\n        /* \"#utility.yul\":28024:28155   */\n      tag_658\n        /* \"#utility.yul\":28150:28154   */\n      dup2\n        /* \"#utility.yul\":28024:28155   */\n      tag_385\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":28016:28155   */\n      swap1\n      pop\n        /* \"#utility.yul\":27743:28162   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28168:28316   */\n    tag_386:\n        /* \"#utility.yul\":28270:28281   */\n      0x00\n        /* \"#utility.yul\":28307:28310   */\n      dup2\n        /* \"#utility.yul\":28292:28310   */\n      swap1\n      pop\n        /* \"#utility.yul\":28168:28316   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28322:28712   */\n    tag_387:\n        /* \"#utility.yul\":28428:28431   */\n      0x00\n        /* \"#utility.yul\":28456:28495   */\n      tag_661\n        /* \"#utility.yul\":28489:28494   */\n      dup3\n        /* \"#utility.yul\":28456:28495   */\n      tag_336\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":28511:28600   */\n      tag_662\n        /* \"#utility.yul\":28593:28599   */\n      dup2\n        /* \"#utility.yul\":28588:28591   */\n      dup6\n        /* \"#utility.yul\":28511:28600   */\n      tag_386\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":28504:28600   */\n      swap4\n      pop\n        /* \"#utility.yul\":28609:28674   */\n      tag_663\n        /* \"#utility.yul\":28667:28673   */\n      dup2\n        /* \"#utility.yul\":28662:28665   */\n      dup6\n        /* \"#utility.yul\":28655:28659   */\n      0x20\n        /* \"#utility.yul\":28648:28653   */\n      dup7\n        /* \"#utility.yul\":28644:28660   */\n      add\n        /* \"#utility.yul\":28609:28674   */\n      tag_338\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":28699:28705   */\n      dup1\n        /* \"#utility.yul\":28694:28697   */\n      dup5\n        /* \"#utility.yul\":28690:28706   */\n      add\n        /* \"#utility.yul\":28683:28706   */\n      swap2\n      pop\n        /* \"#utility.yul\":28432:28712   */\n      pop\n        /* \"#utility.yul\":28322:28712   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28718:29153   */\n    tag_199:\n        /* \"#utility.yul\":28898:28901   */\n      0x00\n        /* \"#utility.yul\":28920:29015   */\n      tag_665\n        /* \"#utility.yul\":29011:29014   */\n      dup3\n        /* \"#utility.yul\":29002:29008   */\n      dup6\n        /* \"#utility.yul\":28920:29015   */\n      tag_387\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":28913:29015   */\n      swap2\n      pop\n        /* \"#utility.yul\":29032:29127   */\n      tag_666\n        /* \"#utility.yul\":29123:29126   */\n      dup3\n        /* \"#utility.yul\":29114:29120   */\n      dup5\n        /* \"#utility.yul\":29032:29127   */\n      tag_387\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":29025:29127   */\n      swap2\n      pop\n        /* \"#utility.yul\":29144:29147   */\n      dup2\n        /* \"#utility.yul\":29137:29147   */\n      swap1\n      pop\n        /* \"#utility.yul\":28718:29153   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29159:29387   */\n    tag_388:\n        /* \"#utility.yul\":29299:29333   */\n      0x455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72\n        /* \"#utility.yul\":29295:29296   */\n      0x00\n        /* \"#utility.yul\":29287:29293   */\n      dup3\n        /* \"#utility.yul\":29283:29297   */\n      add\n        /* \"#utility.yul\":29276:29334   */\n      mstore\n        /* \"#utility.yul\":29368:29379   */\n      0x20617070726f7665640000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":29363:29365   */\n      0x20\n        /* \"#utility.yul\":29355:29361   */\n      dup3\n        /* \"#utility.yul\":29351:29366   */\n      add\n        /* \"#utility.yul\":29344:29380   */\n      mstore\n        /* \"#utility.yul\":29159:29387   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29393:29759   */\n    tag_389:\n        /* \"#utility.yul\":29535:29538   */\n      0x00\n        /* \"#utility.yul\":29556:29623   */\n      tag_669\n        /* \"#utility.yul\":29620:29622   */\n      0x29\n        /* \"#utility.yul\":29615:29618   */\n      dup4\n        /* \"#utility.yul\":29556:29623   */\n      tag_337\n      jump\t// in\n    tag_669:\n        /* \"#utility.yul\":29549:29623   */\n      swap2\n      pop\n        /* \"#utility.yul\":29632:29725   */\n      tag_670\n        /* \"#utility.yul\":29721:29724   */\n      dup3\n        /* \"#utility.yul\":29632:29725   */\n      tag_388\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":29750:29752   */\n      0x40\n        /* \"#utility.yul\":29745:29748   */\n      dup3\n        /* \"#utility.yul\":29741:29753   */\n      add\n        /* \"#utility.yul\":29734:29753   */\n      swap1\n      pop\n        /* \"#utility.yul\":29393:29759   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29765:30184   */\n    tag_214:\n        /* \"#utility.yul\":29931:29935   */\n      0x00\n        /* \"#utility.yul\":29969:29971   */\n      0x20\n        /* \"#utility.yul\":29958:29967   */\n      dup3\n        /* \"#utility.yul\":29954:29972   */\n      add\n        /* \"#utility.yul\":29946:29972   */\n      swap1\n      pop\n        /* \"#utility.yul\":30018:30027   */\n      dup2\n        /* \"#utility.yul\":30012:30016   */\n      dup2\n        /* \"#utility.yul\":30008:30028   */\n      sub\n        /* \"#utility.yul\":30004:30005   */\n      0x00\n        /* \"#utility.yul\":29993:30002   */\n      dup4\n        /* \"#utility.yul\":29989:30006   */\n      add\n        /* \"#utility.yul\":29982:30029   */\n      mstore\n        /* \"#utility.yul\":30046:30177   */\n      tag_672\n        /* \"#utility.yul\":30172:30176   */\n      dup2\n        /* \"#utility.yul\":30046:30177   */\n      tag_389\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":30038:30177   */\n      swap1\n      pop\n        /* \"#utility.yul\":29765:30184   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30190:30522   */\n    tag_223:\n        /* \"#utility.yul\":30311:30315   */\n      0x00\n        /* \"#utility.yul\":30349:30351   */\n      0x40\n        /* \"#utility.yul\":30338:30347   */\n      dup3\n        /* \"#utility.yul\":30334:30352   */\n      add\n        /* \"#utility.yul\":30326:30352   */\n      swap1\n      pop\n        /* \"#utility.yul\":30362:30433   */\n      tag_674\n        /* \"#utility.yul\":30430:30431   */\n      0x00\n        /* \"#utility.yul\":30419:30428   */\n      dup4\n        /* \"#utility.yul\":30415:30432   */\n      add\n        /* \"#utility.yul\":30406:30412   */\n      dup6\n        /* \"#utility.yul\":30362:30433   */\n      tag_330\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":30443:30515   */\n      tag_675\n        /* \"#utility.yul\":30511:30513   */\n      0x20\n        /* \"#utility.yul\":30500:30509   */\n      dup4\n        /* \"#utility.yul\":30496:30514   */\n      add\n        /* \"#utility.yul\":30487:30493   */\n      dup5\n        /* \"#utility.yul\":30443:30515   */\n      tag_330\n      jump\t// in\n    tag_675:\n        /* \"#utility.yul\":30190:30522   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30528:30722   */\n    tag_238:\n        /* \"#utility.yul\":30568:30572   */\n      0x00\n        /* \"#utility.yul\":30588:30608   */\n      tag_677\n        /* \"#utility.yul\":30606:30607   */\n      dup3\n        /* \"#utility.yul\":30588:30608   */\n      tag_327\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":30583:30608   */\n      swap2\n      pop\n        /* \"#utility.yul\":30622:30642   */\n      tag_678\n        /* \"#utility.yul\":30640:30641   */\n      dup4\n        /* \"#utility.yul\":30622:30642   */\n      tag_327\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":30617:30642   */\n      swap3\n      pop\n        /* \"#utility.yul\":30666:30667   */\n      dup3\n        /* \"#utility.yul\":30663:30664   */\n      dup3\n        /* \"#utility.yul\":30659:30668   */\n      sub\n        /* \"#utility.yul\":30651:30668   */\n      swap1\n      pop\n        /* \"#utility.yul\":30690:30691   */\n      dup2\n        /* \"#utility.yul\":30684:30688   */\n      dup2\n        /* \"#utility.yul\":30681:30692   */\n      gt\n        /* \"#utility.yul\":30678:30715   */\n      iszero\n      tag_679\n      jumpi\n        /* \"#utility.yul\":30695:30713   */\n      tag_680\n      tag_377\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":30678:30715   */\n    tag_679:\n        /* \"#utility.yul\":30528:30722   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30728:30919   */\n    tag_241:\n        /* \"#utility.yul\":30768:30771   */\n      0x00\n        /* \"#utility.yul\":30787:30807   */\n      tag_682\n        /* \"#utility.yul\":30805:30806   */\n      dup3\n        /* \"#utility.yul\":30787:30807   */\n      tag_327\n      jump\t// in\n    tag_682:\n        /* \"#utility.yul\":30782:30807   */\n      swap2\n      pop\n        /* \"#utility.yul\":30821:30841   */\n      tag_683\n        /* \"#utility.yul\":30839:30840   */\n      dup4\n        /* \"#utility.yul\":30821:30841   */\n      tag_327\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":30816:30841   */\n      swap3\n      pop\n        /* \"#utility.yul\":30864:30865   */\n      dup3\n        /* \"#utility.yul\":30861:30862   */\n      dup3\n        /* \"#utility.yul\":30857:30866   */\n      add\n        /* \"#utility.yul\":30850:30866   */\n      swap1\n      pop\n        /* \"#utility.yul\":30885:30888   */\n      dup1\n        /* \"#utility.yul\":30882:30883   */\n      dup3\n        /* \"#utility.yul\":30879:30889   */\n      gt\n        /* \"#utility.yul\":30876:30912   */\n      iszero\n      tag_684\n      jumpi\n        /* \"#utility.yul\":30892:30910   */\n      tag_685\n      tag_377\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":30876:30912   */\n    tag_684:\n        /* \"#utility.yul\":30728:30919   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30925:31102   */\n    tag_390:\n        /* \"#utility.yul\":31065:31094   */\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n        /* \"#utility.yul\":31061:31062   */\n      0x00\n        /* \"#utility.yul\":31053:31059   */\n      dup3\n        /* \"#utility.yul\":31049:31063   */\n      add\n        /* \"#utility.yul\":31042:31095   */\n      mstore\n        /* \"#utility.yul\":30925:31102   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31108:31474   */\n    tag_391:\n        /* \"#utility.yul\":31250:31253   */\n      0x00\n        /* \"#utility.yul\":31271:31338   */\n      tag_688\n        /* \"#utility.yul\":31335:31337   */\n      0x1b\n        /* \"#utility.yul\":31330:31333   */\n      dup4\n        /* \"#utility.yul\":31271:31338   */\n      tag_337\n      jump\t// in\n    tag_688:\n        /* \"#utility.yul\":31264:31338   */\n      swap2\n      pop\n        /* \"#utility.yul\":31347:31440   */\n      tag_689\n        /* \"#utility.yul\":31436:31439   */\n      dup3\n        /* \"#utility.yul\":31347:31440   */\n      tag_390\n      jump\t// in\n    tag_689:\n        /* \"#utility.yul\":31465:31467   */\n      0x20\n        /* \"#utility.yul\":31460:31463   */\n      dup3\n        /* \"#utility.yul\":31456:31468   */\n      add\n        /* \"#utility.yul\":31449:31468   */\n      swap1\n      pop\n        /* \"#utility.yul\":31108:31474   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31480:31899   */\n    tag_244:\n        /* \"#utility.yul\":31646:31650   */\n      0x00\n        /* \"#utility.yul\":31684:31686   */\n      0x20\n        /* \"#utility.yul\":31673:31682   */\n      dup3\n        /* \"#utility.yul\":31669:31687   */\n      add\n        /* \"#utility.yul\":31661:31687   */\n      swap1\n      pop\n        /* \"#utility.yul\":31733:31742   */\n      dup2\n        /* \"#utility.yul\":31727:31731   */\n      dup2\n        /* \"#utility.yul\":31723:31743   */\n      sub\n        /* \"#utility.yul\":31719:31720   */\n      0x00\n        /* \"#utility.yul\":31708:31717   */\n      dup4\n        /* \"#utility.yul\":31704:31721   */\n      add\n        /* \"#utility.yul\":31697:31744   */\n      mstore\n        /* \"#utility.yul\":31761:31892   */\n      tag_691\n        /* \"#utility.yul\":31887:31891   */\n      dup2\n        /* \"#utility.yul\":31761:31892   */\n      tag_391\n      jump\t// in\n    tag_691:\n        /* \"#utility.yul\":31753:31892   */\n      swap1\n      pop\n        /* \"#utility.yul\":31480:31899   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31905:32003   */\n    tag_392:\n        /* \"#utility.yul\":31956:31962   */\n      0x00\n        /* \"#utility.yul\":31990:31995   */\n      dup2\n        /* \"#utility.yul\":31984:31996   */\n      mload\n        /* \"#utility.yul\":31974:31996   */\n      swap1\n      pop\n        /* \"#utility.yul\":31905:32003   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32009:32177   */\n    tag_393:\n        /* \"#utility.yul\":32092:32103   */\n      0x00\n        /* \"#utility.yul\":32126:32132   */\n      dup3\n        /* \"#utility.yul\":32121:32124   */\n      dup3\n        /* \"#utility.yul\":32114:32133   */\n      mstore\n        /* \"#utility.yul\":32166:32170   */\n      0x20\n        /* \"#utility.yul\":32161:32164   */\n      dup3\n        /* \"#utility.yul\":32157:32171   */\n      add\n        /* \"#utility.yul\":32142:32171   */\n      swap1\n      pop\n        /* \"#utility.yul\":32009:32177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32183:32556   */\n    tag_394:\n        /* \"#utility.yul\":32269:32272   */\n      0x00\n        /* \"#utility.yul\":32297:32335   */\n      tag_695\n        /* \"#utility.yul\":32329:32334   */\n      dup3\n        /* \"#utility.yul\":32297:32335   */\n      tag_392\n      jump\t// in\n    tag_695:\n        /* \"#utility.yul\":32351:32421   */\n      tag_696\n        /* \"#utility.yul\":32414:32420   */\n      dup2\n        /* \"#utility.yul\":32409:32412   */\n      dup6\n        /* \"#utility.yul\":32351:32421   */\n      tag_393\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":32344:32421   */\n      swap4\n      pop\n        /* \"#utility.yul\":32430:32495   */\n      tag_697\n        /* \"#utility.yul\":32488:32494   */\n      dup2\n        /* \"#utility.yul\":32483:32486   */\n      dup6\n        /* \"#utility.yul\":32476:32480   */\n      0x20\n        /* \"#utility.yul\":32469:32474   */\n      dup7\n        /* \"#utility.yul\":32465:32481   */\n      add\n        /* \"#utility.yul\":32430:32495   */\n      tag_338\n      jump\t// in\n    tag_697:\n        /* \"#utility.yul\":32520:32549   */\n      tag_698\n        /* \"#utility.yul\":32542:32548   */\n      dup2\n        /* \"#utility.yul\":32520:32549   */\n      tag_339\n      jump\t// in\n    tag_698:\n        /* \"#utility.yul\":32515:32518   */\n      dup5\n        /* \"#utility.yul\":32511:32550   */\n      add\n        /* \"#utility.yul\":32504:32550   */\n      swap2\n      pop\n        /* \"#utility.yul\":32273:32556   */\n      pop\n        /* \"#utility.yul\":32183:32556   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32562:33615   */\n    tag_250:\n        /* \"#utility.yul\":32885:32889   */\n      0x00\n        /* \"#utility.yul\":32923:32926   */\n      0xa0\n        /* \"#utility.yul\":32912:32921   */\n      dup3\n        /* \"#utility.yul\":32908:32927   */\n      add\n        /* \"#utility.yul\":32900:32927   */\n      swap1\n      pop\n        /* \"#utility.yul\":32937:33008   */\n      tag_700\n        /* \"#utility.yul\":33005:33006   */\n      0x00\n        /* \"#utility.yul\":32994:33003   */\n      dup4\n        /* \"#utility.yul\":32990:33007   */\n      add\n        /* \"#utility.yul\":32981:32987   */\n      dup9\n        /* \"#utility.yul\":32937:33008   */\n      tag_365\n      jump\t// in\n    tag_700:\n        /* \"#utility.yul\":33018:33090   */\n      tag_701\n        /* \"#utility.yul\":33086:33088   */\n      0x20\n        /* \"#utility.yul\":33075:33084   */\n      dup4\n        /* \"#utility.yul\":33071:33089   */\n      add\n        /* \"#utility.yul\":33062:33068   */\n      dup8\n        /* \"#utility.yul\":33018:33090   */\n      tag_365\n      jump\t// in\n    tag_701:\n        /* \"#utility.yul\":33137:33146   */\n      dup2\n        /* \"#utility.yul\":33131:33135   */\n      dup2\n        /* \"#utility.yul\":33127:33147   */\n      sub\n        /* \"#utility.yul\":33122:33124   */\n      0x40\n        /* \"#utility.yul\":33111:33120   */\n      dup4\n        /* \"#utility.yul\":33107:33125   */\n      add\n        /* \"#utility.yul\":33100:33148   */\n      mstore\n        /* \"#utility.yul\":33165:33273   */\n      tag_702\n        /* \"#utility.yul\":33268:33272   */\n      dup2\n        /* \"#utility.yul\":33259:33265   */\n      dup7\n        /* \"#utility.yul\":33165:33273   */\n      tag_362\n      jump\t// in\n    tag_702:\n        /* \"#utility.yul\":33157:33273   */\n      swap1\n      pop\n        /* \"#utility.yul\":33320:33329   */\n      dup2\n        /* \"#utility.yul\":33314:33318   */\n      dup2\n        /* \"#utility.yul\":33310:33330   */\n      sub\n        /* \"#utility.yul\":33305:33307   */\n      0x60\n        /* \"#utility.yul\":33294:33303   */\n      dup4\n        /* \"#utility.yul\":33290:33308   */\n      add\n        /* \"#utility.yul\":33283:33331   */\n      mstore\n        /* \"#utility.yul\":33348:33456   */\n      tag_703\n        /* \"#utility.yul\":33451:33455   */\n      dup2\n        /* \"#utility.yul\":33442:33448   */\n      dup6\n        /* \"#utility.yul\":33348:33456   */\n      tag_362\n      jump\t// in\n    tag_703:\n        /* \"#utility.yul\":33340:33456   */\n      swap1\n      pop\n        /* \"#utility.yul\":33504:33513   */\n      dup2\n        /* \"#utility.yul\":33498:33502   */\n      dup2\n        /* \"#utility.yul\":33494:33514   */\n      sub\n        /* \"#utility.yul\":33488:33491   */\n      0x80\n        /* \"#utility.yul\":33477:33486   */\n      dup4\n        /* \"#utility.yul\":33473:33492   */\n      add\n        /* \"#utility.yul\":33466:33515   */\n      mstore\n        /* \"#utility.yul\":33532:33608   */\n      tag_704\n        /* \"#utility.yul\":33603:33607   */\n      dup2\n        /* \"#utility.yul\":33594:33600   */\n      dup5\n        /* \"#utility.yul\":33532:33608   */\n      tag_394\n      jump\t// in\n    tag_704:\n        /* \"#utility.yul\":33524:33608   */\n      swap1\n      pop\n        /* \"#utility.yul\":32562:33615   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":33621:33762   */\n    tag_395:\n        /* \"#utility.yul\":33677:33682   */\n      0x00\n        /* \"#utility.yul\":33708:33714   */\n      dup2\n        /* \"#utility.yul\":33702:33715   */\n      mload\n        /* \"#utility.yul\":33693:33715   */\n      swap1\n      pop\n        /* \"#utility.yul\":33724:33756   */\n      tag_706\n        /* \"#utility.yul\":33750:33755   */\n      dup2\n        /* \"#utility.yul\":33724:33756   */\n      tag_332\n      jump\t// in\n    tag_706:\n        /* \"#utility.yul\":33621:33762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":33768:34117   */\n    tag_253:\n        /* \"#utility.yul\":33837:33843   */\n      0x00\n        /* \"#utility.yul\":33886:33888   */\n      0x20\n        /* \"#utility.yul\":33874:33883   */\n      dup3\n        /* \"#utility.yul\":33865:33872   */\n      dup5\n        /* \"#utility.yul\":33861:33884   */\n      sub\n        /* \"#utility.yul\":33857:33889   */\n      slt\n        /* \"#utility.yul\":33854:33973   */\n      iszero\n      tag_708\n      jumpi\n        /* \"#utility.yul\":33892:33971   */\n      tag_709\n      tag_321\n      jump\t// in\n    tag_709:\n        /* \"#utility.yul\":33854:33973   */\n    tag_708:\n        /* \"#utility.yul\":34012:34013   */\n      0x00\n        /* \"#utility.yul\":34037:34100   */\n      tag_710\n        /* \"#utility.yul\":34092:34099   */\n      dup5\n        /* \"#utility.yul\":34083:34089   */\n      dup3\n        /* \"#utility.yul\":34072:34081   */\n      dup6\n        /* \"#utility.yul\":34068:34090   */\n      add\n        /* \"#utility.yul\":34037:34100   */\n      tag_395\n      jump\t// in\n    tag_710:\n        /* \"#utility.yul\":34027:34100   */\n      swap2\n      pop\n        /* \"#utility.yul\":33983:34110   */\n      pop\n        /* \"#utility.yul\":33768:34117   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":34123:34229   */\n    tag_396:\n        /* \"#utility.yul\":34167:34175   */\n      0x00\n        /* \"#utility.yul\":34216:34221   */\n      dup2\n        /* \"#utility.yul\":34211:34214   */\n      0xe0\n        /* \"#utility.yul\":34207:34222   */\n      shr\n        /* \"#utility.yul\":34186:34222   */\n      swap1\n      pop\n        /* \"#utility.yul\":34123:34229   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":34235:34418   */\n    tag_259:\n        /* \"#utility.yul\":34270:34273   */\n      0x00\n        /* \"#utility.yul\":34308:34309   */\n      0x03\n        /* \"#utility.yul\":34290:34306   */\n      returndatasize\n        /* \"#utility.yul\":34287:34310   */\n      gt\n        /* \"#utility.yul\":34284:34412   */\n      iszero\n      tag_713\n      jumpi\n        /* \"#utility.yul\":34346:34347   */\n      0x04\n        /* \"#utility.yul\":34343:34344   */\n      0x00\n        /* \"#utility.yul\":34340:34341   */\n      dup1\n        /* \"#utility.yul\":34325:34348   */\n      returndatacopy\n        /* \"#utility.yul\":34368:34402   */\n      tag_714\n        /* \"#utility.yul\":34399:34400   */\n      0x00\n        /* \"#utility.yul\":34393:34401   */\n      mload\n        /* \"#utility.yul\":34368:34402   */\n      tag_396\n      jump\t// in\n    tag_714:\n        /* \"#utility.yul\":34361:34402   */\n      swap1\n      pop\n        /* \"#utility.yul\":34284:34412   */\n    tag_713:\n        /* \"#utility.yul\":34235:34418   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":34424:35135   */\n    tag_261:\n        /* \"#utility.yul\":34463:34466   */\n      0x00\n        /* \"#utility.yul\":34501:34505   */\n      0x44\n        /* \"#utility.yul\":34483:34499   */\n      returndatasize\n        /* \"#utility.yul\":34480:34506   */\n      lt\n        /* \"#utility.yul\":34509:34514   */\n      tag_715\n        /* \"#utility.yul\":34477:34516   */\n      jumpi\n        /* \"#utility.yul\":34538:34558   */\n      tag_717\n      tag_320\n      jump\t// in\n    tag_717:\n        /* \"#utility.yul\":34613:34614   */\n      0x04\n        /* \"#utility.yul\":34595:34611   */\n      returndatasize\n        /* \"#utility.yul\":34591:34615   */\n      sub\n        /* \"#utility.yul\":34588:34589   */\n      0x04\n        /* \"#utility.yul\":34582:34586   */\n      dup3\n        /* \"#utility.yul\":34567:34616   */\n      returndatacopy\n        /* \"#utility.yul\":34646:34650   */\n      dup1\n        /* \"#utility.yul\":34640:34651   */\n      mload\n        /* \"#utility.yul\":34745:34761   */\n      returndatasize\n        /* \"#utility.yul\":34738:34742   */\n      0x24\n        /* \"#utility.yul\":34730:34736   */\n      dup3\n        /* \"#utility.yul\":34726:34743   */\n      add\n        /* \"#utility.yul\":34723:34762   */\n      gt\n        /* \"#utility.yul\":34690:34708   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":34682:34688   */\n      dup3\n        /* \"#utility.yul\":34679:34709   */\n      gt\n        /* \"#utility.yul\":34663:34776   */\n      or\n        /* \"#utility.yul\":34660:34806   */\n      iszero\n      tag_718\n      jumpi\n        /* \"#utility.yul\":34791:34796   */\n      pop\n      pop\n      jump(tag_715)\n        /* \"#utility.yul\":34660:34806   */\n    tag_718:\n        /* \"#utility.yul\":34837:34843   */\n      dup1\n        /* \"#utility.yul\":34831:34835   */\n      dup3\n        /* \"#utility.yul\":34827:34844   */\n      add\n        /* \"#utility.yul\":34873:34876   */\n      dup1\n        /* \"#utility.yul\":34867:34877   */\n      mload\n        /* \"#utility.yul\":34900:34918   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":34892:34898   */\n      dup2\n        /* \"#utility.yul\":34889:34919   */\n      gt\n        /* \"#utility.yul\":34886:34929   */\n      iszero\n      tag_719\n      jumpi\n        /* \"#utility.yul\":34922:34927   */\n      pop\n      pop\n      pop\n      pop\n      jump(tag_715)\n        /* \"#utility.yul\":34886:34929   */\n    tag_719:\n        /* \"#utility.yul\":34970:34976   */\n      dup1\n        /* \"#utility.yul\":34963:34967   */\n      0x20\n        /* \"#utility.yul\":34958:34961   */\n      dup4\n        /* \"#utility.yul\":34954:34968   */\n      add\n        /* \"#utility.yul\":34950:34977   */\n      add\n        /* \"#utility.yul\":35029:35030   */\n      0x04\n        /* \"#utility.yul\":35011:35027   */\n      returndatasize\n        /* \"#utility.yul\":35007:35031   */\n      sub\n        /* \"#utility.yul\":35001:35005   */\n      dup6\n        /* \"#utility.yul\":34997:35032   */\n      add\n        /* \"#utility.yul\":34992:34995   */\n      dup2\n        /* \"#utility.yul\":34989:35033   */\n      gt\n        /* \"#utility.yul\":34986:35043   */\n      iszero\n      tag_720\n      jumpi\n        /* \"#utility.yul\":35036:35041   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_715)\n        /* \"#utility.yul\":34986:35043   */\n    tag_720:\n        /* \"#utility.yul\":35053:35110   */\n      tag_721\n        /* \"#utility.yul\":35101:35107   */\n      dup3\n        /* \"#utility.yul\":35095:35099   */\n      0x20\n        /* \"#utility.yul\":35091:35108   */\n      add\n        /* \"#utility.yul\":35083:35089   */\n      dup6\n        /* \"#utility.yul\":35079:35109   */\n      add\n        /* \"#utility.yul\":35073:35077   */\n      dup7\n        /* \"#utility.yul\":35053:35110   */\n      tag_342\n      jump\t// in\n    tag_721:\n        /* \"#utility.yul\":35126:35129   */\n      dup3\n        /* \"#utility.yul\":35119:35129   */\n      swap6\n      pop\n        /* \"#utility.yul\":34467:35135   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":34424:35135   */\n    tag_715:\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":35141:35380   */\n    tag_397:\n        /* \"#utility.yul\":35281:35315   */\n      0x455243313135353a207472616e7366657220746f206e6f6e2045524331313535\n        /* \"#utility.yul\":35277:35278   */\n      0x00\n        /* \"#utility.yul\":35269:35275   */\n      dup3\n        /* \"#utility.yul\":35265:35279   */\n      add\n        /* \"#utility.yul\":35258:35316   */\n      mstore\n        /* \"#utility.yul\":35350:35372   */\n      0x526563656976657220696d706c656d656e746572000000000000000000000000\n        /* \"#utility.yul\":35345:35347   */\n      0x20\n        /* \"#utility.yul\":35337:35343   */\n      dup3\n        /* \"#utility.yul\":35333:35348   */\n      add\n        /* \"#utility.yul\":35326:35373   */\n      mstore\n        /* \"#utility.yul\":35141:35380   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":35386:35752   */\n    tag_398:\n        /* \"#utility.yul\":35528:35531   */\n      0x00\n        /* \"#utility.yul\":35549:35616   */\n      tag_724\n        /* \"#utility.yul\":35613:35615   */\n      0x34\n        /* \"#utility.yul\":35608:35611   */\n      dup4\n        /* \"#utility.yul\":35549:35616   */\n      tag_337\n      jump\t// in\n    tag_724:\n        /* \"#utility.yul\":35542:35616   */\n      swap2\n      pop\n        /* \"#utility.yul\":35625:35718   */\n      tag_725\n        /* \"#utility.yul\":35714:35717   */\n      dup3\n        /* \"#utility.yul\":35625:35718   */\n      tag_397\n      jump\t// in\n    tag_725:\n        /* \"#utility.yul\":35743:35745   */\n      0x40\n        /* \"#utility.yul\":35738:35741   */\n      dup3\n        /* \"#utility.yul\":35734:35746   */\n      add\n        /* \"#utility.yul\":35727:35746   */\n      swap1\n      pop\n        /* \"#utility.yul\":35386:35752   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":35758:36177   */\n    tag_265:\n        /* \"#utility.yul\":35924:35928   */\n      0x00\n        /* \"#utility.yul\":35962:35964   */\n      0x20\n        /* \"#utility.yul\":35951:35960   */\n      dup3\n        /* \"#utility.yul\":35947:35965   */\n      add\n        /* \"#utility.yul\":35939:35965   */\n      swap1\n      pop\n        /* \"#utility.yul\":36011:36020   */\n      dup2\n        /* \"#utility.yul\":36005:36009   */\n      dup2\n        /* \"#utility.yul\":36001:36021   */\n      sub\n        /* \"#utility.yul\":35997:35998   */\n      0x00\n        /* \"#utility.yul\":35986:35995   */\n      dup4\n        /* \"#utility.yul\":35982:35999   */\n      add\n        /* \"#utility.yul\":35975:36022   */\n      mstore\n        /* \"#utility.yul\":36039:36170   */\n      tag_727\n        /* \"#utility.yul\":36165:36169   */\n      dup2\n        /* \"#utility.yul\":36039:36170   */\n      tag_398\n      jump\t// in\n    tag_727:\n        /* \"#utility.yul\":36031:36170   */\n      swap1\n      pop\n        /* \"#utility.yul\":35758:36177   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":36183:36410   */\n    tag_399:\n        /* \"#utility.yul\":36323:36357   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":36319:36320   */\n      0x00\n        /* \"#utility.yul\":36311:36317   */\n      dup3\n        /* \"#utility.yul\":36307:36321   */\n      add\n        /* \"#utility.yul\":36300:36358   */\n      mstore\n        /* \"#utility.yul\":36392:36402   */\n      0x6420746f6b656e73000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":36387:36389   */\n      0x20\n        /* \"#utility.yul\":36379:36385   */\n      dup3\n        /* \"#utility.yul\":36375:36390   */\n      add\n        /* \"#utility.yul\":36368:36403   */\n      mstore\n        /* \"#utility.yul\":36183:36410   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":36416:36782   */\n    tag_400:\n        /* \"#utility.yul\":36558:36561   */\n      0x00\n        /* \"#utility.yul\":36579:36646   */\n      tag_730\n        /* \"#utility.yul\":36643:36645   */\n      0x28\n        /* \"#utility.yul\":36638:36641   */\n      dup4\n        /* \"#utility.yul\":36579:36646   */\n      tag_337\n      jump\t// in\n    tag_730:\n        /* \"#utility.yul\":36572:36646   */\n      swap2\n      pop\n        /* \"#utility.yul\":36655:36748   */\n      tag_731\n        /* \"#utility.yul\":36744:36747   */\n      dup3\n        /* \"#utility.yul\":36655:36748   */\n      tag_399\n      jump\t// in\n    tag_731:\n        /* \"#utility.yul\":36773:36775   */\n      0x40\n        /* \"#utility.yul\":36768:36771   */\n      dup3\n        /* \"#utility.yul\":36764:36776   */\n      add\n        /* \"#utility.yul\":36757:36776   */\n      swap1\n      pop\n        /* \"#utility.yul\":36416:36782   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":36788:37207   */\n    tag_269:\n        /* \"#utility.yul\":36954:36958   */\n      0x00\n        /* \"#utility.yul\":36992:36994   */\n      0x20\n        /* \"#utility.yul\":36981:36990   */\n      dup3\n        /* \"#utility.yul\":36977:36995   */\n      add\n        /* \"#utility.yul\":36969:36995   */\n      swap1\n      pop\n        /* \"#utility.yul\":37041:37050   */\n      dup2\n        /* \"#utility.yul\":37035:37039   */\n      dup2\n        /* \"#utility.yul\":37031:37051   */\n      sub\n        /* \"#utility.yul\":37027:37028   */\n      0x00\n        /* \"#utility.yul\":37016:37025   */\n      dup4\n        /* \"#utility.yul\":37012:37029   */\n      add\n        /* \"#utility.yul\":37005:37052   */\n      mstore\n        /* \"#utility.yul\":37069:37200   */\n      tag_733\n        /* \"#utility.yul\":37195:37199   */\n      dup2\n        /* \"#utility.yul\":37069:37200   */\n      tag_400\n      jump\t// in\n    tag_733:\n        /* \"#utility.yul\":37061:37200   */\n      swap1\n      pop\n        /* \"#utility.yul\":36788:37207   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":37213:37393   */\n    tag_401:\n        /* \"#utility.yul\":37261:37338   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":37258:37259   */\n      0x00\n        /* \"#utility.yul\":37251:37339   */\n      mstore\n        /* \"#utility.yul\":37358:37362   */\n      0x12\n        /* \"#utility.yul\":37355:37356   */\n      0x04\n        /* \"#utility.yul\":37348:37363   */\n      mstore\n        /* \"#utility.yul\":37382:37386   */\n      0x24\n        /* \"#utility.yul\":37379:37380   */\n      0x00\n        /* \"#utility.yul\":37372:37387   */\n      revert\n        /* \"#utility.yul\":37399:37584   */\n    tag_276:\n        /* \"#utility.yul\":37439:37440   */\n      0x00\n        /* \"#utility.yul\":37456:37476   */\n      tag_736\n        /* \"#utility.yul\":37474:37475   */\n      dup3\n        /* \"#utility.yul\":37456:37476   */\n      tag_327\n      jump\t// in\n    tag_736:\n        /* \"#utility.yul\":37451:37476   */\n      swap2\n      pop\n        /* \"#utility.yul\":37490:37510   */\n      tag_737\n        /* \"#utility.yul\":37508:37509   */\n      dup4\n        /* \"#utility.yul\":37490:37510   */\n      tag_327\n      jump\t// in\n    tag_737:\n        /* \"#utility.yul\":37485:37510   */\n      swap3\n      pop\n        /* \"#utility.yul\":37529:37530   */\n      dup3\n        /* \"#utility.yul\":37519:37554   */\n      tag_738\n      jumpi\n        /* \"#utility.yul\":37534:37552   */\n      tag_739\n      tag_401\n      jump\t// in\n    tag_739:\n        /* \"#utility.yul\":37519:37554   */\n    tag_738:\n        /* \"#utility.yul\":37576:37577   */\n      dup3\n        /* \"#utility.yul\":37573:37574   */\n      dup3\n        /* \"#utility.yul\":37569:37578   */\n      div\n        /* \"#utility.yul\":37564:37578   */\n      swap1\n      pop\n        /* \"#utility.yul\":37399:37584   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":37590:37766   */\n    tag_284:\n        /* \"#utility.yul\":37622:37623   */\n      0x00\n        /* \"#utility.yul\":37639:37659   */\n      tag_741\n        /* \"#utility.yul\":37657:37658   */\n      dup3\n        /* \"#utility.yul\":37639:37659   */\n      tag_327\n      jump\t// in\n    tag_741:\n        /* \"#utility.yul\":37634:37659   */\n      swap2\n      pop\n        /* \"#utility.yul\":37673:37693   */\n      tag_742\n        /* \"#utility.yul\":37691:37692   */\n      dup4\n        /* \"#utility.yul\":37673:37693   */\n      tag_327\n      jump\t// in\n    tag_742:\n        /* \"#utility.yul\":37668:37693   */\n      swap3\n      pop\n        /* \"#utility.yul\":37712:37713   */\n      dup3\n        /* \"#utility.yul\":37702:37737   */\n      tag_743\n      jumpi\n        /* \"#utility.yul\":37717:37735   */\n      tag_744\n      tag_401\n      jump\t// in\n    tag_744:\n        /* \"#utility.yul\":37702:37737   */\n    tag_743:\n        /* \"#utility.yul\":37758:37759   */\n      dup3\n        /* \"#utility.yul\":37755:37756   */\n      dup3\n        /* \"#utility.yul\":37751:37760   */\n      mod\n        /* \"#utility.yul\":37746:37760   */\n      swap1\n      pop\n        /* \"#utility.yul\":37590:37766   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":37772:38523   */\n    tag_299:\n        /* \"#utility.yul\":37995:37999   */\n      0x00\n        /* \"#utility.yul\":38033:38036   */\n      0xa0\n        /* \"#utility.yul\":38022:38031   */\n      dup3\n        /* \"#utility.yul\":38018:38037   */\n      add\n        /* \"#utility.yul\":38010:38037   */\n      swap1\n      pop\n        /* \"#utility.yul\":38047:38118   */\n      tag_746\n        /* \"#utility.yul\":38115:38116   */\n      0x00\n        /* \"#utility.yul\":38104:38113   */\n      dup4\n        /* \"#utility.yul\":38100:38117   */\n      add\n        /* \"#utility.yul\":38091:38097   */\n      dup9\n        /* \"#utility.yul\":38047:38118   */\n      tag_365\n      jump\t// in\n    tag_746:\n        /* \"#utility.yul\":38128:38200   */\n      tag_747\n        /* \"#utility.yul\":38196:38198   */\n      0x20\n        /* \"#utility.yul\":38185:38194   */\n      dup4\n        /* \"#utility.yul\":38181:38199   */\n      add\n        /* \"#utility.yul\":38172:38178   */\n      dup8\n        /* \"#utility.yul\":38128:38200   */\n      tag_365\n      jump\t// in\n    tag_747:\n        /* \"#utility.yul\":38210:38282   */\n      tag_748\n        /* \"#utility.yul\":38278:38280   */\n      0x40\n        /* \"#utility.yul\":38267:38276   */\n      dup4\n        /* \"#utility.yul\":38263:38281   */\n      add\n        /* \"#utility.yul\":38254:38260   */\n      dup7\n        /* \"#utility.yul\":38210:38282   */\n      tag_330\n      jump\t// in\n    tag_748:\n        /* \"#utility.yul\":38292:38364   */\n      tag_749\n        /* \"#utility.yul\":38360:38362   */\n      0x60\n        /* \"#utility.yul\":38349:38358   */\n      dup4\n        /* \"#utility.yul\":38345:38363   */\n      add\n        /* \"#utility.yul\":38336:38342   */\n      dup6\n        /* \"#utility.yul\":38292:38364   */\n      tag_330\n      jump\t// in\n    tag_749:\n        /* \"#utility.yul\":38412:38421   */\n      dup2\n        /* \"#utility.yul\":38406:38410   */\n      dup2\n        /* \"#utility.yul\":38402:38422   */\n      sub\n        /* \"#utility.yul\":38396:38399   */\n      0x80\n        /* \"#utility.yul\":38385:38394   */\n      dup4\n        /* \"#utility.yul\":38381:38400   */\n      add\n        /* \"#utility.yul\":38374:38423   */\n      mstore\n        /* \"#utility.yul\":38440:38516   */\n      tag_750\n        /* \"#utility.yul\":38511:38515   */\n      dup2\n        /* \"#utility.yul\":38502:38508   */\n      dup5\n        /* \"#utility.yul\":38440:38516   */\n      tag_394\n      jump\t// in\n    tag_750:\n        /* \"#utility.yul\":38432:38516   */\n      swap1\n      pop\n        /* \"#utility.yul\":37772:38523   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf 455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572\n\n    auxdata: 0xa26469706673582212201b30d8156f8f5062a1139ebc7e396d5ba32d3e4e7d92653e250d50c2addc5ab964736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1581": {
									"entryPoint": null,
									"id": 1581,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_93": {
									"entryPoint": null,
									"id": 93,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_registerInterface_1613": {
									"entryPoint": 204,
									"id": 1613,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1514,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1589,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 1640,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1831,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1870,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1385,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1284,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1416,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 577,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 419,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1773,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 898,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 713,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 859,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 733,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1053,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1470,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 598,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 524,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1023,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1331,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 723,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 991,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 477,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 430,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 773,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1304,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1309,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1299,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1294,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1314,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 614,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 978,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 831,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee": {
									"entryPoint": 1790,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 627,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 783,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 826,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9730:11",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:11",
														"type": ""
													}
												],
												"src": "7:99:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "140:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "157:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "160:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "150:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "150:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "254:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "257:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "247:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "247:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "278:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "281:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "271:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "271:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "326:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "343:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "346:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "336:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "336:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:4:11",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "464:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "467:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "457:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "457:15:11"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "535:269:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "545:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "565:1:11",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "555:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "612:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "602:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "580:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "653:51:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "667:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "689:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "626:26:11"
															},
															"nodeType": "YulIf",
															"src": "623:81:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "756:42:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "751:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "717:38:11"
															},
															"nodeType": "YulIf",
															"src": "714:84:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "519:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "528:6:11",
														"type": ""
													}
												],
												"src": "484:320:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "864:87:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "874:11:11",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "882:3:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "902:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "895:14:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "895:14:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "918:26:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "936:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "939:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "926:18:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:11"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "851:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "859:4:11",
														"type": ""
													}
												],
												"src": "810:141:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1001:49:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1011:33:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1021:23:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:11"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "984:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "994:6:11",
														"type": ""
													}
												],
												"src": "957:93:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:54:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1119:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:11"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:11"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1140:16:11"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:11"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "1084:4:11",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1090:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "1100:8:11",
														"type": ""
													}
												],
												"src": "1056:107:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1245:317:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:11",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1272:18:11"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1311:97:11"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1417:51:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:11"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:11"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1429:39:11"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1477:30:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:11"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1486:21:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1516:40:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:11"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1526:30:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:11"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1206:5:11",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "1213:10:11",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "1225:8:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1238:6:11",
														"type": ""
													}
												],
												"src": "1169:393:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:32:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1623:16:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1634:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1595:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1605:7:11",
														"type": ""
													}
												],
												"src": "1568:77:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1683:28:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1693:12:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1700:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:11"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1669:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1679:3:11",
														"type": ""
													}
												],
												"src": "1651:60:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1777:82:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1787:66:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:11"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1800:53:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1757:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1767:9:11",
														"type": ""
													}
												],
												"src": "1717:142:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1912:28:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1922:12:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1929:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:11"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1898:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1908:3:11",
														"type": ""
													}
												],
												"src": "1865:75:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2022:193:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:11",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2056:39:11"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:11"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:11"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:11"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:11"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:11"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2104:105:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:11"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1999:4:11",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2005:6:11",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "2013:7:11",
														"type": ""
													}
												],
												"src": "1946:269:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2270:24:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2280:8:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2287:1:11",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:11"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2266:3:11",
														"type": ""
													}
												],
												"src": "2221:73:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2353:136:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:11",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2377:32:11"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:11"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:11"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:11"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2418:65:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:11"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2339:4:11",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2345:6:11",
														"type": ""
													}
												],
												"src": "2300:189:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2545:136:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2612:63:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:11"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2562:14:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2577:26:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2579:22:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:11",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:11"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2559:2:11",
																"statements": []
															},
															"src": "2555:120:11"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "2533:5:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2540:3:11",
														"type": ""
													}
												],
												"src": "2495:186:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2766:464:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2792:431:11",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:11"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:11"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:11"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:11"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3093:27:11",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3095:23:11",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:11"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:11"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:11"
																		},
																		"nodeType": "YulIf",
																		"src": "3071:49:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:11"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:11"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:11"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2780:11:11"
															},
															"nodeType": "YulIf",
															"src": "2777:446:11"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2742:5:11",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2749:3:11",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2754:10:11",
														"type": ""
													}
												],
												"src": "2687:543:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3299:54:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3309:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:11"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:11"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3330:16:11"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:11"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "3274:4:11",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3280:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "3290:8:11",
														"type": ""
													}
												],
												"src": "3236:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3410:118:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:11",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:11"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:11"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:11"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3432:56:11"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3497:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:11"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3507:15:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:11"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3387:4:11",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "3393:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "3403:6:11",
														"type": ""
													}
												],
												"src": "3359:169:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3614:214:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3747:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:11"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:11"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3755:29:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3793:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:11",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:11"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3801:21:11"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:11"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3595:4:11",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "3601:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "3609:4:11",
														"type": ""
													}
												],
												"src": "3533:295:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3925:1303:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:11",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3950:37:11"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4072:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4041:30:11"
															},
															"nodeType": "YulIf",
															"src": "4038:56:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:11"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:11"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4118:38:11"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:11"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:11"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:11"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4203:67:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4297:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4308:17:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4321:4:11",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:11"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4372:611:11",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:11",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:11"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:11",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:11"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:11"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:11",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:11"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:11"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:11",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:11",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4569:163:11",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:11"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:11"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:11"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:11"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:11"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:11"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:11"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:11"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:11"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4646:24:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:11"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:11"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:11"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4687:31:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:11"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:11",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:11"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:11"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:11"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:11"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:11"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "4547:21:11",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "4549:17:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:11"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:11",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:11"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:11"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "4528:3:11",
																					"statements": []
																				},
																				"src": "4524:208:11"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4768:156:11",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:11",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:11"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:11"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:11"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:11"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:11"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:11",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:11"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:11"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:11"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:11",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:11"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:11"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:11"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:11"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:11"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:11"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:11"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:11"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:11"
																				},
																				"nodeType": "YulIf",
																				"src": "4745:179:11"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:11"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:11"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:11",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:11"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:11"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:11",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:11"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:11"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:11"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4365:618:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:11",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5000:222:11",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:11",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:11",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5051:67:11",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "5069:35:11",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:11"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:11"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:11"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:11"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:11"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:11"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:11"
																				},
																				"nodeType": "YulIf",
																				"src": "5041:77:11"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:11"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:11"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:11"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:11"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:11"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:11"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4992:230:11",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4342:14:11"
															},
															"nodeType": "YulSwitch",
															"src": "4335:887:11"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3914:4:11",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3920:3:11",
														"type": ""
													}
												],
												"src": "3833:1395:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5274:35:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5284:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5300:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5294:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5294:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "5284:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5267:6:11",
														"type": ""
													}
												],
												"src": "5234:75:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5404:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5421:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5424:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5414:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5414:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5414:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "5315:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5527:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5544:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5547:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5537:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5537:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5537:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "5438:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5650:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5667:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5670:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5660:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5660:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5660:12:11"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "5561:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5773:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5790:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5793:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5783:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5783:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5783:12:11"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "5684:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5855:54:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5865:38:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5883:5:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5890:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5879:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5879:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5899:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5895:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5895:7:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5875:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5875:28:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "5865:6:11"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5838:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "5848:6:11",
														"type": ""
													}
												],
												"src": "5807:102:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5958:238:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5968:58:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5990:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "6020:4:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "5998:21:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5998:27:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5986:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5986:40:11"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "5972:10:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6137:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6139:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6139:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6139:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "6080:10:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6092:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6077:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6077:34:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "6116:10:11"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6128:6:11"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6113:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6113:22:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6074:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6074:62:11"
															},
															"nodeType": "YulIf",
															"src": "6071:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6175:2:11",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "6179:10:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6168:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6168:22:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6168:22:11"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5944:6:11",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5952:4:11",
														"type": ""
													}
												],
												"src": "5915:281:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6243:88:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6253:30:11",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "6263:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6263:20:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "6253:6:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6312:6:11"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "6320:4:11"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "6292:19:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6292:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6292:33:11"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "6227:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6236:6:11",
														"type": ""
													}
												],
												"src": "6202:129:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6404:241:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6509:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6511:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6511:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6511:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6481:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6489:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6478:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6478:30:11"
															},
															"nodeType": "YulIf",
															"src": "6475:56:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6541:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6571:6:11"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "6549:21:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6549:29:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6541:4:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6615:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "6627:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6633:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6623:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6623:15:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6615:4:11"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6388:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "6399:4:11",
														"type": ""
													}
												],
												"src": "6337:308:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6713:184:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6723:10:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6732:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6727:1:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6792:63:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "6817:3:11"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "6822:1:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6813:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6813:11:11"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "6836:3:11"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "6841:1:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6832:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6832:11:11"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "6826:5:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6826:18:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6806:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6806:39:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6806:39:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6753:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6756:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6750:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6750:13:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6764:19:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6766:15:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6775:1:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6778:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6771:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6771:10:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6766:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6746:3:11",
																"statements": []
															},
															"src": "6742:113:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "6875:3:11"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6880:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6871:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6871:16:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6889:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6864:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6864:27:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6864:27:11"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "6695:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "6700:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6705:6:11",
														"type": ""
													}
												],
												"src": "6651:246:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6998:339:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7008:75:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7075:6:11"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "7033:41:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7033:49:11"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "7017:15:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7017:66:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "7008:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "7099:5:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7106:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7092:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7092:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7092:21:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7122:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "7137:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7144:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7133:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7133:16:11"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "7126:3:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7187:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "7189:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7189:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7189:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "7168:3:11"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7173:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7164:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7164:16:11"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "7182:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7161:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7161:25:11"
															},
															"nodeType": "YulIf",
															"src": "7158:112:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7314:3:11"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "7319:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7324:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "7279:34:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7279:52:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7279:52:11"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "6971:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6976:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6984:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6992:5:11",
														"type": ""
													}
												],
												"src": "6903:434:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7430:282:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7479:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "7481:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7481:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7481:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7458:6:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7466:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7454:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7454:17:11"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "7473:3:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "7450:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7450:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7443:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7443:35:11"
															},
															"nodeType": "YulIf",
															"src": "7440:122:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7571:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7591:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7585:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7585:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7575:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7607:99:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7679:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7687:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7675:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7675:17:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7694:6:11"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "7702:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "7616:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7616:90:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "7607:5:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7408:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7416:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "7424:5:11",
														"type": ""
													}
												],
												"src": "7357:355:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7832:739:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7878:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7880:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7880:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7880:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7853:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7862:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7849:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7849:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7874:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7845:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7845:32:11"
															},
															"nodeType": "YulIf",
															"src": "7842:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "7971:291:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7986:38:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8010:9:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8021:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8006:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8006:17:11"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "8000:5:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8000:24:11"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7990:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8071:83:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "8073:77:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8073:79:11"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8073:79:11"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8043:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8051:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8040:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8040:30:11"
																	},
																	"nodeType": "YulIf",
																	"src": "8037:117:11"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8168:84:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8224:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8235:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8220:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8220:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8244:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "8178:41:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8178:74:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8168:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8272:292:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8287:39:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8311:9:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8322:2:11",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8307:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8307:18:11"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "8301:5:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8301:25:11"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8291:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8373:83:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "8375:77:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8375:79:11"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8375:79:11"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8345:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8353:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8342:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8342:30:11"
																	},
																	"nodeType": "YulIf",
																	"src": "8339:117:11"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8470:84:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8526:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8537:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8522:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8522:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8546:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "8480:41:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8480:74:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "8470:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7794:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7805:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7817:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7825:6:11",
														"type": ""
													}
												],
												"src": "7718:853:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8673:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8690:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8695:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8683:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8683:19:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8683:19:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8711:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8730:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8735:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8726:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8726:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "8711:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8645:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8650:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "8661:11:11",
														"type": ""
													}
												],
												"src": "8577:169:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8858:72:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8880:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8888:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8876:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8876:14:11"
																	},
																	{
																		"hexValue": "4552433136353a20696e76616c696420696e74657266616365206964",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8892:30:11",
																		"type": "",
																		"value": "ERC165: invalid interface id"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8869:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8869:54:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8869:54:11"
														}
													]
												},
												"name": "store_literal_in_memory_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8850:6:11",
														"type": ""
													}
												],
												"src": "8752:178:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9082:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9092:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9158:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9163:2:11",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9099:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9099:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9092:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9264:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee",
																	"nodeType": "YulIdentifier",
																	"src": "9175:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9175:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9175:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9277:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9288:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9293:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9284:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9284:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9277:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9070:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9078:3:11",
														"type": ""
													}
												],
												"src": "8936:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9479:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9489:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9501:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9512:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9497:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9497:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9489:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9536:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9547:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9532:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9532:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9555:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9561:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9551:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9551:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9525:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9525:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9525:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9581:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9715:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9589:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9589:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9581:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9459:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9474:4:11",
														"type": ""
													}
												],
												"src": "9308:419:11"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC165: invalid interface id\")\n\n    }\n\n    function abi_encode_t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405260405180602001604052806000815250600590816200002491906200041d565b503480156200003257600080fd5b50604051620037a0380380620037a0833981810160405281019062000058919062000668565b620000706301ffc9a760e01b620000cc60201b60201c565b81600990816200008191906200041d565b5080600a90816200009391906200041d565b50620000ac63d9b67a2660e01b620000cc60201b60201c565b620000c4630e89341c60e01b620000cc60201b60201c565b505062000770565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19160362000137576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200012e906200074e565b60405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200022557607f821691505b6020821081036200023b576200023a620001dd565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620002a57fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000266565b620002b1868362000266565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620002fe620002f8620002f284620002c9565b620002d3565b620002c9565b9050919050565b6000819050919050565b6200031a83620002dd565b62000332620003298262000305565b84845462000273565b825550505050565b600090565b620003496200033a565b620003568184846200030f565b505050565b5b818110156200037e57620003726000826200033f565b6001810190506200035c565b5050565b601f821115620003cd57620003978162000241565b620003a28462000256565b81016020851015620003b2578190505b620003ca620003c18562000256565b8301826200035b565b50505b505050565b600082821c905092915050565b6000620003f260001984600802620003d2565b1980831691505092915050565b60006200040d8383620003df565b9150826002028217905092915050565b6200042882620001a3565b67ffffffffffffffff811115620004445762000443620001ae565b5b6200045082546200020c565b6200045d82828562000382565b600060209050601f83116001811462000495576000841562000480578287015190505b6200048c8582620003ff565b865550620004fc565b601f198416620004a58662000241565b60005b82811015620004cf57848901518255600182019150602085019450602081019050620004a8565b86831015620004ef5784890151620004eb601f891682620003df565b8355505b6001600288020188555050505b505050505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6200053e8262000522565b810181811067ffffffffffffffff8211171562000560576200055f620001ae565b5b80604052505050565b60006200057562000504565b905062000583828262000533565b919050565b600067ffffffffffffffff821115620005a657620005a5620001ae565b5b620005b18262000522565b9050602081019050919050565b60005b83811015620005de578082015181840152602081019050620005c1565b60008484015250505050565b600062000601620005fb8462000588565b62000569565b90508281526020810184848401111562000620576200061f6200051d565b5b6200062d848285620005be565b509392505050565b600082601f8301126200064d576200064c62000518565b5b81516200065f848260208601620005ea565b91505092915050565b600080604083850312156200068257620006816200050e565b5b600083015167ffffffffffffffff811115620006a357620006a262000513565b5b620006b18582860162000635565b925050602083015167ffffffffffffffff811115620006d557620006d462000513565b5b620006e38582860162000635565b9150509250929050565b600082825260208201905092915050565b7f4552433136353a20696e76616c696420696e7465726661636520696400000000600082015250565b600062000736601c83620006ed565b91506200074382620006fe565b602082019050919050565b60006020820190508181036000830152620007698162000727565b9050919050565b61302080620007806000396000f3fe608060405234801561001057600080fd5b50600436106100e95760003560e01c8063a22cb4651161008c578063c87b56dd11610066578063c87b56dd1461025e578063d48e638a1461028e578063e985e9c5146102be578063f242432a146102ee576100e9565b8063a22cb465146101f4578063c0ac998314610210578063c57dc2351461022e576100e9565b806318160ddd116100c857806318160ddd1461016c5780632eb2c2d61461018a5780634e1273f4146101a657806395d89b41146101d6576100e9565b8062fdd58e146100ee57806301ffc9a71461011e57806306fdde031461014e575b600080fd5b61010860048036038101906101039190611b4d565b61030a565b6040516101159190611b9c565b60405180910390f35b61013860048036038101906101339190611c0f565b61041c565b6040516101459190611c57565b60405180910390f35b610156610483565b6040516101639190611d02565b60405180910390f35b610174610515565b6040516101819190611b9c565b60405180910390f35b6101a4600480360381019061019f9190611f21565b610526565b005b6101c060048036038101906101bb91906120b3565b6108fa565b6040516101cd91906121e9565b60405180910390f35b6101de610ae3565b6040516101eb9190611d02565b60405180910390f35b61020e60048036038101906102099190612237565b610b75565b005b610218610cf5565b6040516102259190611d02565b60405180910390f35b61024860048036038101906102439190612277565b610d83565b6040516102559190611b9c565b60405180910390f35b61027860048036038101906102739190612277565b610da0565b6040516102859190611d02565b60405180910390f35b6102a860048036038101906102a39190612277565b610f95565b6040516102b591906122b3565b60405180910390f35b6102d860048036038101906102d391906122ce565b610fd2565b6040516102e59190611c57565b60405180910390f35b6103086004803603810190610303919061230e565b611066565b005b6000610315826113a8565b610354576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034b90612417565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036103c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ba906124a9565b60405180910390fd5b6003600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060098054610492906124f8565b80601f01602080910402602001604051908101604052809291908181526020018280546104be906124f8565b801561050b5780601f106104e05761010080835404028352916020019161050b565b820191906000526020600020905b8154815290600101906020018083116104ee57829003601f168201915b5050505050905090565b600061052160076113c5565b905090565b815183511461056a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105619061259b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036105d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d09061262d565b60405180910390fd5b6105e16113da565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614806106275750610626856106216113da565b610fd2565b5b610666576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065d906126bf565b60405180910390fd5b60006106706113da565b90506106808187878787876113e2565b60005b84518110156108655760008582815181106106a1576106a06126df565b5b6020026020010151905060008583815181106106c0576106bf6126df565b5b60200260200101519050610747816040518060600160405280602a8152602001612fc1602a91396003600086815260200190815260200160002060008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113ea9092919063ffffffff16565b6003600084815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506107fe816003600085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461144e90919063ffffffff16565b6003600084815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050508061085e9061273d565b9050610683565b508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516108dc929190612785565b60405180910390a46108f28187878787876114ac565b505050505050565b60608151835114610940576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109379061282e565b60405180910390fd5b6000835167ffffffffffffffff81111561095d5761095c611d29565b5b60405190808252806020026020018201604052801561098b5781602001602082028036833780820191505090505b50905060005b8451811015610ad857600073ffffffffffffffffffffffffffffffffffffffff168582815181106109c5576109c46126df565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1603610a23576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1a906128c0565b60405180910390fd5b60036000858381518110610a3a57610a396126df565b5b602002602001015181526020019081526020016000206000868381518110610a6557610a646126df565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054828281518110610abb57610aba6126df565b5b60200260200101818152505080610ad19061273d565b9050610991565b508091505092915050565b6060600a8054610af2906124f8565b80601f0160208091040260200160405190810160405280929190818152602001828054610b1e906124f8565b8015610b6b5780601f10610b4057610100808354040283529160200191610b6b565b820191906000526020600020905b815481529060010190602001808311610b4e57829003601f168201915b5050505050905090565b8173ffffffffffffffffffffffffffffffffffffffff16610b946113da565b73ffffffffffffffffffffffffffffffffffffffff1603610bea576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be190612952565b60405180910390fd5b8060046000610bf76113da565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610ca46113da565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610ce99190611c57565b60405180910390a35050565b60058054610d02906124f8565b80601f0160208091040260200160405190810160405280929190818152602001828054610d2e906124f8565b8015610d7b5780601f10610d5057610100808354040283529160200191610d7b565b820191906000526020600020905b815481529060010190602001808311610d5e57829003601f168201915b505050505081565b600060026000838152602001908152602001600020549050919050565b6060610dab826113a8565b610dea576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610de1906129e4565b60405180910390fd5b6000600660008481526020019081526020016000208054610e0a906124f8565b80601f0160208091040260200160405190810160405280929190818152602001828054610e36906124f8565b8015610e835780601f10610e5857610100808354040283529160200191610e83565b820191906000526020600020905b815481529060010190602001808311610e6657829003601f168201915b50505050509050600060058054610e99906124f8565b80601f0160208091040260200160405190810160405280929190818152602001828054610ec5906124f8565b8015610f125780601f10610ee757610100808354040283529160200191610f12565b820191906000526020600020905b815481529060010190602001808311610ef557829003601f168201915b505050505090506000815103610f2c578192505050610f90565b600082511115610f61578082604051602001610f49929190612a40565b60405160208183030381529060405292505050610f90565b80610f6b85611683565b604051602001610f7c929190612a40565b604051602081830303815290604052925050505b919050565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036110d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110cc9061262d565b60405180910390fd5b6110dd6113da565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16148061112357506111228561111d6113da565b610fd2565b5b611162576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161115990612ad6565b60405180910390fd5b600061116c6113da565b905061118c81878761117d886117e3565b611186886117e3565b876113e2565b611209836040518060600160405280602a8152602001612fc1602a91396003600088815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113ea9092919063ffffffff16565b6003600086815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506112c0836003600087815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461144e90919063ffffffff16565b6003600086815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62878760405161138a929190612af6565b60405180910390a46113a081878787878761185d565b505050505050565b60006113be826007611a3490919063ffffffff16565b9050919050565b60006113d382600001611a4e565b9050919050565b600033905090565b505050505050565b6000838311158290611432576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114299190611d02565b60405180910390fd5b50600083856114419190612b1f565b9050809150509392505050565b600080828461145d9190612b53565b9050838110156114a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161149990612bd3565b60405180910390fd5b8091505092915050565b6114cb8473ffffffffffffffffffffffffffffffffffffffff16611a5f565b1561167b578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401611511959493929190612c48565b6020604051808303816000875af192505050801561154d57506040513d601f19601f8201168201806040525081019061154a9190612cc5565b60015b6115f257611559612cff565b806308c379a0036115b5575061156d612d21565b8061157857506115b7565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115ac9190611d02565b60405180910390fd5b505b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115e990612e23565b60405180910390fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611679576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161167090612eb5565b60405180910390fd5b505b505050505050565b6060600082036116ca576040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506117de565b600082905060005b600082146116fc5780806116e59061273d565b915050600a826116f59190612f04565b91506116d2565b60008167ffffffffffffffff81111561171857611717611d29565b5b6040519080825280601f01601f19166020018201604052801561174a5781602001600182028036833780820191505090505b5090505b600085146117d7576001826117639190612b1f565b9150600a856117729190612f35565b603061177e9190612b53565b60f81b818381518110611794576117936126df565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a856117d09190612f04565b945061174e565b8093505050505b919050565b60606000600167ffffffffffffffff81111561180257611801611d29565b5b6040519080825280602002602001820160405280156118305781602001602082028036833780820191505090505b5090508281600081518110611848576118476126df565b5b60200260200101818152505080915050919050565b61187c8473ffffffffffffffffffffffffffffffffffffffff16611a5f565b15611a2c578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b81526004016118c2959493929190612f66565b6020604051808303816000875af19250505080156118fe57506040513d601f19601f820116820180604052508101906118fb9190612cc5565b60015b6119a35761190a612cff565b806308c379a003611966575061191e612d21565b806119295750611968565b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161195d9190611d02565b60405180910390fd5b505b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161199a90612e23565b60405180910390fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611a2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a2190612eb5565b60405180910390fd5b505b505050505050565b6000611a46836000018360001b611a82565b905092915050565b600081600001805490509050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600080836001016000848152602001908152602001600020541415905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611ae482611ab9565b9050919050565b611af481611ad9565b8114611aff57600080fd5b50565b600081359050611b1181611aeb565b92915050565b6000819050919050565b611b2a81611b17565b8114611b3557600080fd5b50565b600081359050611b4781611b21565b92915050565b60008060408385031215611b6457611b63611aaf565b5b6000611b7285828601611b02565b9250506020611b8385828601611b38565b9150509250929050565b611b9681611b17565b82525050565b6000602082019050611bb16000830184611b8d565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611bec81611bb7565b8114611bf757600080fd5b50565b600081359050611c0981611be3565b92915050565b600060208284031215611c2557611c24611aaf565b5b6000611c3384828501611bfa565b91505092915050565b60008115159050919050565b611c5181611c3c565b82525050565b6000602082019050611c6c6000830184611c48565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611cac578082015181840152602081019050611c91565b60008484015250505050565b6000601f19601f8301169050919050565b6000611cd482611c72565b611cde8185611c7d565b9350611cee818560208601611c8e565b611cf781611cb8565b840191505092915050565b60006020820190508181036000830152611d1c8184611cc9565b905092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611d6182611cb8565b810181811067ffffffffffffffff82111715611d8057611d7f611d29565b5b80604052505050565b6000611d93611aa5565b9050611d9f8282611d58565b919050565b600067ffffffffffffffff821115611dbf57611dbe611d29565b5b602082029050602081019050919050565b600080fd5b6000611de8611de384611da4565b611d89565b90508083825260208201905060208402830185811115611e0b57611e0a611dd0565b5b835b81811015611e345780611e208882611b38565b845260208401935050602081019050611e0d565b5050509392505050565b600082601f830112611e5357611e52611d24565b5b8135611e63848260208601611dd5565b91505092915050565b600080fd5b600067ffffffffffffffff821115611e8c57611e8b611d29565b5b611e9582611cb8565b9050602081019050919050565b82818337600083830152505050565b6000611ec4611ebf84611e71565b611d89565b905082815260208101848484011115611ee057611edf611e6c565b5b611eeb848285611ea2565b509392505050565b600082601f830112611f0857611f07611d24565b5b8135611f18848260208601611eb1565b91505092915050565b600080600080600060a08688031215611f3d57611f3c611aaf565b5b6000611f4b88828901611b02565b9550506020611f5c88828901611b02565b945050604086013567ffffffffffffffff811115611f7d57611f7c611ab4565b5b611f8988828901611e3e565b935050606086013567ffffffffffffffff811115611faa57611fa9611ab4565b5b611fb688828901611e3e565b925050608086013567ffffffffffffffff811115611fd757611fd6611ab4565b5b611fe388828901611ef3565b9150509295509295909350565b600067ffffffffffffffff82111561200b5761200a611d29565b5b602082029050602081019050919050565b600061202f61202a84611ff0565b611d89565b9050808382526020820190506020840283018581111561205257612051611dd0565b5b835b8181101561207b57806120678882611b02565b845260208401935050602081019050612054565b5050509392505050565b600082601f83011261209a57612099611d24565b5b81356120aa84826020860161201c565b91505092915050565b600080604083850312156120ca576120c9611aaf565b5b600083013567ffffffffffffffff8111156120e8576120e7611ab4565b5b6120f485828601612085565b925050602083013567ffffffffffffffff81111561211557612114611ab4565b5b61212185828601611e3e565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61216081611b17565b82525050565b60006121728383612157565b60208301905092915050565b6000602082019050919050565b60006121968261212b565b6121a08185612136565b93506121ab83612147565b8060005b838110156121dc5781516121c38882612166565b97506121ce8361217e565b9250506001810190506121af565b5085935050505092915050565b60006020820190508181036000830152612203818461218b565b905092915050565b61221481611c3c565b811461221f57600080fd5b50565b6000813590506122318161220b565b92915050565b6000806040838503121561224e5761224d611aaf565b5b600061225c85828601611b02565b925050602061226d85828601612222565b9150509250929050565b60006020828403121561228d5761228c611aaf565b5b600061229b84828501611b38565b91505092915050565b6122ad81611ad9565b82525050565b60006020820190506122c860008301846122a4565b92915050565b600080604083850312156122e5576122e4611aaf565b5b60006122f385828601611b02565b925050602061230485828601611b02565b9150509250929050565b600080600080600060a0868803121561232a57612329611aaf565b5b600061233888828901611b02565b955050602061234988828901611b02565b945050604061235a88828901611b38565b935050606061236b88828901611b38565b925050608086013567ffffffffffffffff81111561238c5761238b611ab4565b5b61239888828901611ef3565b9150509295509295909350565b7f455243313135354d657461646174613a2062616c616e6365207175657279206660008201527f6f72206e6f6e6578697374656e7420746f6b656e000000000000000000000000602082015250565b6000612401603483611c7d565b915061240c826123a5565b604082019050919050565b60006020820190508181036000830152612430816123f4565b9050919050565b7f455243313135353a2062616c616e636520717565727920666f7220746865207a60008201527f65726f2061646472657373000000000000000000000000000000000000000000602082015250565b6000612493602b83611c7d565b915061249e82612437565b604082019050919050565b600060208201905081810360008301526124c281612486565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061251057607f821691505b602082108103612523576125226124c9565b5b50919050565b7f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060008201527f6d69736d61746368000000000000000000000000000000000000000000000000602082015250565b6000612585602883611c7d565b915061259082612529565b604082019050919050565b600060208201905081810360008301526125b481612578565b9050919050565b7f455243313135353a207472616e7366657220746f20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000612617602583611c7d565b9150612622826125bb565b604082019050919050565b600060208201905081810360008301526126468161260a565b9050919050565b7f455243313135353a207472616e736665722063616c6c6572206973206e6f742060008201527f6f776e6572206e6f7220617070726f7665640000000000000000000000000000602082015250565b60006126a9603283611c7d565b91506126b48261264d565b604082019050919050565b600060208201905081810360008301526126d88161269c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061274882611b17565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361277a5761277961270e565b5b600182019050919050565b6000604082019050818103600083015261279f818561218b565b905081810360208301526127b3818461218b565b90509392505050565b7f455243313135353a206163636f756e747320616e6420696473206c656e67746860008201527f206d69736d617463680000000000000000000000000000000000000000000000602082015250565b6000612818602983611c7d565b9150612823826127bc565b604082019050919050565b600060208201905081810360008301526128478161280b565b9050919050565b7f455243313135353a2062617463682062616c616e636520717565727920666f7260008201527f20746865207a65726f2061646472657373000000000000000000000000000000602082015250565b60006128aa603183611c7d565b91506128b58261284e565b604082019050919050565b600060208201905081810360008301526128d98161289d565b9050919050565b7f455243313135353a2073657474696e6720617070726f76616c2073746174757360008201527f20666f722073656c660000000000000000000000000000000000000000000000602082015250565b600061293c602983611c7d565b9150612947826128e0565b604082019050919050565b6000602082019050818103600083015261296b8161292f565b9050919050565b7f455243313135354d657461646174613a2055524920717565727920666f72206e60008201527f6f6e6578697374656e7420746f6b656e00000000000000000000000000000000602082015250565b60006129ce603083611c7d565b91506129d982612972565b604082019050919050565b600060208201905081810360008301526129fd816129c1565b9050919050565b600081905092915050565b6000612a1a82611c72565b612a248185612a04565b9350612a34818560208601611c8e565b80840191505092915050565b6000612a4c8285612a0f565b9150612a588284612a0f565b91508190509392505050565b7f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260008201527f20617070726f7665640000000000000000000000000000000000000000000000602082015250565b6000612ac0602983611c7d565b9150612acb82612a64565b604082019050919050565b60006020820190508181036000830152612aef81612ab3565b9050919050565b6000604082019050612b0b6000830185611b8d565b612b186020830184611b8d565b9392505050565b6000612b2a82611b17565b9150612b3583611b17565b9250828203905081811115612b4d57612b4c61270e565b5b92915050565b6000612b5e82611b17565b9150612b6983611b17565b9250828201905080821115612b8157612b8061270e565b5b92915050565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000600082015250565b6000612bbd601b83611c7d565b9150612bc882612b87565b602082019050919050565b60006020820190508181036000830152612bec81612bb0565b9050919050565b600081519050919050565b600082825260208201905092915050565b6000612c1a82612bf3565b612c248185612bfe565b9350612c34818560208601611c8e565b612c3d81611cb8565b840191505092915050565b600060a082019050612c5d60008301886122a4565b612c6a60208301876122a4565b8181036040830152612c7c818661218b565b90508181036060830152612c90818561218b565b90508181036080830152612ca48184612c0f565b90509695505050505050565b600081519050612cbf81611be3565b92915050565b600060208284031215612cdb57612cda611aaf565b5b6000612ce984828501612cb0565b91505092915050565b60008160e01c9050919050565b600060033d1115612d1e5760046000803e612d1b600051612cf2565b90505b90565b600060443d10612dae57612d33611aa5565b60043d036004823e80513d602482011167ffffffffffffffff82111715612d5b575050612dae565b808201805167ffffffffffffffff811115612d795750505050612dae565b80602083010160043d038501811115612d96575050505050612dae565b612da582602001850186611d58565b82955050505050505b90565b7f455243313135353a207472616e7366657220746f206e6f6e204552433131353560008201527f526563656976657220696d706c656d656e746572000000000000000000000000602082015250565b6000612e0d603483611c7d565b9150612e1882612db1565b604082019050919050565b60006020820190508181036000830152612e3c81612e00565b9050919050565b7f455243313135353a204552433131353552656365697665722072656a6563746560008201527f6420746f6b656e73000000000000000000000000000000000000000000000000602082015250565b6000612e9f602883611c7d565b9150612eaa82612e43565b604082019050919050565b60006020820190508181036000830152612ece81612e92565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612f0f82611b17565b9150612f1a83611b17565b925082612f2a57612f29612ed5565b5b828204905092915050565b6000612f4082611b17565b9150612f4b83611b17565b925082612f5b57612f5a612ed5565b5b828206905092915050565b600060a082019050612f7b60008301886122a4565b612f8860208301876122a4565b612f956040830186611b8d565b612fa26060830185611b8d565b8181036080830152612fb48184612c0f565b9050969550505050505056fe455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572a26469706673582212201b30d8156f8f5062a1139ebc7e396d5ba32d3e4e7d92653e250d50c2addc5ab964736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x5 SWAP1 DUP2 PUSH3 0x24 SWAP2 SWAP1 PUSH3 0x41D JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH3 0x32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x37A0 CODESIZE SUB DUP1 PUSH3 0x37A0 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x58 SWAP2 SWAP1 PUSH3 0x668 JUMP JUMPDEST PUSH3 0x70 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH3 0xCC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 PUSH1 0x9 SWAP1 DUP2 PUSH3 0x81 SWAP2 SWAP1 PUSH3 0x41D JUMP JUMPDEST POP DUP1 PUSH1 0xA SWAP1 DUP2 PUSH3 0x93 SWAP2 SWAP1 PUSH3 0x41D JUMP JUMPDEST POP PUSH3 0xAC PUSH4 0xD9B67A26 PUSH1 0xE0 SHL PUSH3 0xCC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xC4 PUSH4 0xE89341C PUSH1 0xE0 SHL PUSH3 0xCC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH3 0x770 JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SUB PUSH3 0x137 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x12E SWAP1 PUSH3 0x74E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x225 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x23B JUMPI PUSH3 0x23A PUSH3 0x1DD JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x2A5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x266 JUMP JUMPDEST PUSH3 0x2B1 DUP7 DUP4 PUSH3 0x266 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2FE PUSH3 0x2F8 PUSH3 0x2F2 DUP5 PUSH3 0x2C9 JUMP JUMPDEST PUSH3 0x2D3 JUMP JUMPDEST PUSH3 0x2C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x31A DUP4 PUSH3 0x2DD JUMP JUMPDEST PUSH3 0x332 PUSH3 0x329 DUP3 PUSH3 0x305 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x273 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x349 PUSH3 0x33A JUMP JUMPDEST PUSH3 0x356 DUP2 DUP5 DUP5 PUSH3 0x30F JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x37E JUMPI PUSH3 0x372 PUSH1 0x0 DUP3 PUSH3 0x33F JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x35C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x3CD JUMPI PUSH3 0x397 DUP2 PUSH3 0x241 JUMP JUMPDEST PUSH3 0x3A2 DUP5 PUSH3 0x256 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x3B2 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x3CA PUSH3 0x3C1 DUP6 PUSH3 0x256 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x35B JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3F2 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x3D2 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x40D DUP4 DUP4 PUSH3 0x3DF JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x428 DUP3 PUSH3 0x1A3 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x444 JUMPI PUSH3 0x443 PUSH3 0x1AE JUMP JUMPDEST JUMPDEST PUSH3 0x450 DUP3 SLOAD PUSH3 0x20C JUMP JUMPDEST PUSH3 0x45D DUP3 DUP3 DUP6 PUSH3 0x382 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x495 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x480 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x48C DUP6 DUP3 PUSH3 0x3FF JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x4FC JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x4A5 DUP7 PUSH3 0x241 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x4CF JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x4A8 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x4EF JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x4EB PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x3DF JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x53E DUP3 PUSH3 0x522 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x560 JUMPI PUSH3 0x55F PUSH3 0x1AE JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x575 PUSH3 0x504 JUMP JUMPDEST SWAP1 POP PUSH3 0x583 DUP3 DUP3 PUSH3 0x533 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x5A6 JUMPI PUSH3 0x5A5 PUSH3 0x1AE JUMP JUMPDEST JUMPDEST PUSH3 0x5B1 DUP3 PUSH3 0x522 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x5DE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x5C1 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x601 PUSH3 0x5FB DUP5 PUSH3 0x588 JUMP JUMPDEST PUSH3 0x569 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x620 JUMPI PUSH3 0x61F PUSH3 0x51D JUMP JUMPDEST JUMPDEST PUSH3 0x62D DUP5 DUP3 DUP6 PUSH3 0x5BE JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x64D JUMPI PUSH3 0x64C PUSH3 0x518 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x65F DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x5EA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x682 JUMPI PUSH3 0x681 PUSH3 0x50E JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x6A3 JUMPI PUSH3 0x6A2 PUSH3 0x513 JUMP JUMPDEST JUMPDEST PUSH3 0x6B1 DUP6 DUP3 DUP7 ADD PUSH3 0x635 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x6D5 JUMPI PUSH3 0x6D4 PUSH3 0x513 JUMP JUMPDEST JUMPDEST PUSH3 0x6E3 DUP6 DUP3 DUP7 ADD PUSH3 0x635 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433136353A20696E76616C696420696E7465726661636520696400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x736 PUSH1 0x1C DUP4 PUSH3 0x6ED JUMP JUMPDEST SWAP2 POP PUSH3 0x743 DUP3 PUSH3 0x6FE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x769 DUP2 PUSH3 0x727 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3020 DUP1 PUSH3 0x780 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA22CB465 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0xD48E638A EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x2EE JUMPI PUSH2 0xE9 JUMP JUMPDEST DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0xC0AC9983 EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0xC57DC235 EQ PUSH2 0x22E JUMPI PUSH2 0xE9 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1D6 JUMPI PUSH2 0xE9 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x14E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x108 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x103 SWAP2 SWAP1 PUSH2 0x1B4D JUMP JUMPDEST PUSH2 0x30A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x115 SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x138 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x133 SWAP2 SWAP1 PUSH2 0x1C0F JUMP JUMPDEST PUSH2 0x41C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x145 SWAP2 SWAP1 PUSH2 0x1C57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x156 PUSH2 0x483 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x1D02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x174 PUSH2 0x515 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x1F21 JUMP JUMPDEST PUSH2 0x526 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x20B3 JUMP JUMPDEST PUSH2 0x8FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x21E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DE PUSH2 0xAE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x1D02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x2237 JUMP JUMPDEST PUSH2 0xB75 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x218 PUSH2 0xCF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x225 SWAP2 SWAP1 PUSH2 0x1D02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x248 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x243 SWAP2 SWAP1 PUSH2 0x2277 JUMP JUMPDEST PUSH2 0xD83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x278 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x273 SWAP2 SWAP1 PUSH2 0x2277 JUMP JUMPDEST PUSH2 0xDA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x285 SWAP2 SWAP1 PUSH2 0x1D02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x2277 JUMP JUMPDEST PUSH2 0xF95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0x22B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D3 SWAP2 SWAP1 PUSH2 0x22CE JUMP JUMPDEST PUSH2 0xFD2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0x1C57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x308 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x303 SWAP2 SWAP1 PUSH2 0x230E JUMP JUMPDEST PUSH2 0x1066 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0x315 DUP3 PUSH2 0x13A8 JUMP JUMPDEST PUSH2 0x354 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34B SWAP1 PUSH2 0x2417 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3BA SWAP1 PUSH2 0x24A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x9 DUP1 SLOAD PUSH2 0x492 SWAP1 PUSH2 0x24F8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4BE SWAP1 PUSH2 0x24F8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x50B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4E0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x50B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4EE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x521 PUSH1 0x7 PUSH2 0x13C5 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x56A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x561 SWAP1 PUSH2 0x259B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D0 SWAP1 PUSH2 0x262D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E1 PUSH2 0x13DA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x627 JUMPI POP PUSH2 0x626 DUP6 PUSH2 0x621 PUSH2 0x13DA JUMP JUMPDEST PUSH2 0xFD2 JUMP JUMPDEST JUMPDEST PUSH2 0x666 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65D SWAP1 PUSH2 0x26BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x670 PUSH2 0x13DA JUMP JUMPDEST SWAP1 POP PUSH2 0x680 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x13E2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x865 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6A1 JUMPI PUSH2 0x6A0 PUSH2 0x26DF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x6C0 JUMPI PUSH2 0x6BF PUSH2 0x26DF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x747 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2FC1 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x3 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x13EA SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x7FE DUP2 PUSH1 0x3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x144E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP DUP1 PUSH2 0x85E SWAP1 PUSH2 0x273D JUMP JUMPDEST SWAP1 POP PUSH2 0x683 JUMP JUMPDEST POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x8DC SWAP3 SWAP2 SWAP1 PUSH2 0x2785 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x8F2 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x14AC JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x940 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x937 SWAP1 PUSH2 0x282E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x95D JUMPI PUSH2 0x95C PUSH2 0x1D29 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x98B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xAD8 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x9C5 JUMPI PUSH2 0x9C4 PUSH2 0x26DF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA23 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA1A SWAP1 PUSH2 0x28C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xA3A JUMPI PUSH2 0xA39 PUSH2 0x26DF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xA65 JUMPI PUSH2 0xA64 PUSH2 0x26DF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xABB JUMPI PUSH2 0xABA PUSH2 0x26DF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0xAD1 SWAP1 PUSH2 0x273D JUMP JUMPDEST SWAP1 POP PUSH2 0x991 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA DUP1 SLOAD PUSH2 0xAF2 SWAP1 PUSH2 0x24F8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB1E SWAP1 PUSH2 0x24F8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB6B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB40 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB6B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB4E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB94 PUSH2 0x13DA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBEA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE1 SWAP1 PUSH2 0x2952 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0xBF7 PUSH2 0x13DA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCA4 PUSH2 0x13DA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xCE9 SWAP2 SWAP1 PUSH2 0x1C57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH2 0xD02 SWAP1 PUSH2 0x24F8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD2E SWAP1 PUSH2 0x24F8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD7B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD50 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD7B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD5E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xDAB DUP3 PUSH2 0x13A8 JUMP JUMPDEST PUSH2 0xDEA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDE1 SWAP1 PUSH2 0x29E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0xE0A SWAP1 PUSH2 0x24F8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE36 SWAP1 PUSH2 0x24F8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE83 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE58 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE83 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE66 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x5 DUP1 SLOAD PUSH2 0xE99 SWAP1 PUSH2 0x24F8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xEC5 SWAP1 PUSH2 0x24F8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF12 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xEE7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF12 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xEF5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0xF2C JUMPI DUP2 SWAP3 POP POP POP PUSH2 0xF90 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0xF61 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF49 SWAP3 SWAP2 SWAP1 PUSH2 0x2A40 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0xF90 JUMP JUMPDEST DUP1 PUSH2 0xF6B DUP6 PUSH2 0x1683 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF7C SWAP3 SWAP2 SWAP1 PUSH2 0x2A40 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10CC SWAP1 PUSH2 0x262D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10DD PUSH2 0x13DA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1123 JUMPI POP PUSH2 0x1122 DUP6 PUSH2 0x111D PUSH2 0x13DA JUMP JUMPDEST PUSH2 0xFD2 JUMP JUMPDEST JUMPDEST PUSH2 0x1162 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1159 SWAP1 PUSH2 0x2AD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x116C PUSH2 0x13DA JUMP JUMPDEST SWAP1 POP PUSH2 0x118C DUP2 DUP8 DUP8 PUSH2 0x117D DUP9 PUSH2 0x17E3 JUMP JUMPDEST PUSH2 0x1186 DUP9 PUSH2 0x17E3 JUMP JUMPDEST DUP8 PUSH2 0x13E2 JUMP JUMPDEST PUSH2 0x1209 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2FC1 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x3 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x13EA SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x12C0 DUP4 PUSH1 0x3 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x144E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x138A SWAP3 SWAP2 SWAP1 PUSH2 0x2AF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x13A0 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x185D JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13BE DUP3 PUSH1 0x7 PUSH2 0x1A34 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13D3 DUP3 PUSH1 0x0 ADD PUSH2 0x1A4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x1432 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1429 SWAP2 SWAP1 PUSH2 0x1D02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 PUSH2 0x1441 SWAP2 SWAP1 PUSH2 0x2B1F JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0x145D SWAP2 SWAP1 PUSH2 0x2B53 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x14A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1499 SWAP1 PUSH2 0x2BD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14CB DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A5F JUMP JUMPDEST ISZERO PUSH2 0x167B JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1511 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C48 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x154D JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x154A SWAP2 SWAP1 PUSH2 0x2CC5 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x15F2 JUMPI PUSH2 0x1559 PUSH2 0x2CFF JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x15B5 JUMPI POP PUSH2 0x156D PUSH2 0x2D21 JUMP JUMPDEST DUP1 PUSH2 0x1578 JUMPI POP PUSH2 0x15B7 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15AC SWAP2 SWAP1 PUSH2 0x1D02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15E9 SWAP1 PUSH2 0x2E23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1679 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1670 SWAP1 PUSH2 0x2EB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SUB PUSH2 0x16CA JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x17DE JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x16FC JUMPI DUP1 DUP1 PUSH2 0x16E5 SWAP1 PUSH2 0x273D JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x16F5 SWAP2 SWAP1 PUSH2 0x2F04 JUMP JUMPDEST SWAP2 POP PUSH2 0x16D2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1718 JUMPI PUSH2 0x1717 PUSH2 0x1D29 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x174A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x17D7 JUMPI PUSH1 0x1 DUP3 PUSH2 0x1763 SWAP2 SWAP1 PUSH2 0x2B1F JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x1772 SWAP2 SWAP1 PUSH2 0x2F35 JUMP JUMPDEST PUSH1 0x30 PUSH2 0x177E SWAP2 SWAP1 PUSH2 0x2B53 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1794 JUMPI PUSH2 0x1793 PUSH2 0x26DF JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x17D0 SWAP2 SWAP1 PUSH2 0x2F04 JUMP JUMPDEST SWAP5 POP PUSH2 0x174E JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1802 JUMPI PUSH2 0x1801 PUSH2 0x1D29 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1830 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1848 JUMPI PUSH2 0x1847 PUSH2 0x26DF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x187C DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A5F JUMP JUMPDEST ISZERO PUSH2 0x1A2C JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18C2 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2F66 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x18FE JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18FB SWAP2 SWAP1 PUSH2 0x2CC5 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x19A3 JUMPI PUSH2 0x190A PUSH2 0x2CFF JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x1966 JUMPI POP PUSH2 0x191E PUSH2 0x2D21 JUMP JUMPDEST DUP1 PUSH2 0x1929 JUMPI POP PUSH2 0x1968 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x195D SWAP2 SWAP1 PUSH2 0x1D02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x199A SWAP1 PUSH2 0x2E23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1A2A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A21 SWAP1 PUSH2 0x2EB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A46 DUP4 PUSH1 0x0 ADD DUP4 PUSH1 0x0 SHL PUSH2 0x1A82 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AE4 DUP3 PUSH2 0x1AB9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AF4 DUP2 PUSH2 0x1AD9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B11 DUP2 PUSH2 0x1AEB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B2A DUP2 PUSH2 0x1B17 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B47 DUP2 PUSH2 0x1B21 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B64 JUMPI PUSH2 0x1B63 PUSH2 0x1AAF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B72 DUP6 DUP3 DUP7 ADD PUSH2 0x1B02 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B83 DUP6 DUP3 DUP7 ADD PUSH2 0x1B38 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B96 DUP2 PUSH2 0x1B17 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BB1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B8D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BEC DUP2 PUSH2 0x1BB7 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C09 DUP2 PUSH2 0x1BE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C25 JUMPI PUSH2 0x1C24 PUSH2 0x1AAF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C33 DUP5 DUP3 DUP6 ADD PUSH2 0x1BFA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C51 DUP2 PUSH2 0x1C3C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C6C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1CAC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1C91 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CD4 DUP3 PUSH2 0x1C72 JUMP JUMPDEST PUSH2 0x1CDE DUP2 DUP6 PUSH2 0x1C7D JUMP JUMPDEST SWAP4 POP PUSH2 0x1CEE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C8E JUMP JUMPDEST PUSH2 0x1CF7 DUP2 PUSH2 0x1CB8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D1C DUP2 DUP5 PUSH2 0x1CC9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1D61 DUP3 PUSH2 0x1CB8 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1D80 JUMPI PUSH2 0x1D7F PUSH2 0x1D29 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D93 PUSH2 0x1AA5 JUMP JUMPDEST SWAP1 POP PUSH2 0x1D9F DUP3 DUP3 PUSH2 0x1D58 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1DBF JUMPI PUSH2 0x1DBE PUSH2 0x1D29 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1DE8 PUSH2 0x1DE3 DUP5 PUSH2 0x1DA4 JUMP JUMPDEST PUSH2 0x1D89 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1E0B JUMPI PUSH2 0x1E0A PUSH2 0x1DD0 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1E34 JUMPI DUP1 PUSH2 0x1E20 DUP9 DUP3 PUSH2 0x1B38 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1E0D JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E53 JUMPI PUSH2 0x1E52 PUSH2 0x1D24 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1E63 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1DD5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1E8C JUMPI PUSH2 0x1E8B PUSH2 0x1D29 JUMP JUMPDEST JUMPDEST PUSH2 0x1E95 DUP3 PUSH2 0x1CB8 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EC4 PUSH2 0x1EBF DUP5 PUSH2 0x1E71 JUMP JUMPDEST PUSH2 0x1D89 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1EE0 JUMPI PUSH2 0x1EDF PUSH2 0x1E6C JUMP JUMPDEST JUMPDEST PUSH2 0x1EEB DUP5 DUP3 DUP6 PUSH2 0x1EA2 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1F08 JUMPI PUSH2 0x1F07 PUSH2 0x1D24 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1F18 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1EB1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1F3D JUMPI PUSH2 0x1F3C PUSH2 0x1AAF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F4B DUP9 DUP3 DUP10 ADD PUSH2 0x1B02 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1F5C DUP9 DUP3 DUP10 ADD PUSH2 0x1B02 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F7D JUMPI PUSH2 0x1F7C PUSH2 0x1AB4 JUMP JUMPDEST JUMPDEST PUSH2 0x1F89 DUP9 DUP3 DUP10 ADD PUSH2 0x1E3E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FAA JUMPI PUSH2 0x1FA9 PUSH2 0x1AB4 JUMP JUMPDEST JUMPDEST PUSH2 0x1FB6 DUP9 DUP3 DUP10 ADD PUSH2 0x1E3E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FD7 JUMPI PUSH2 0x1FD6 PUSH2 0x1AB4 JUMP JUMPDEST JUMPDEST PUSH2 0x1FE3 DUP9 DUP3 DUP10 ADD PUSH2 0x1EF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x200B JUMPI PUSH2 0x200A PUSH2 0x1D29 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x202F PUSH2 0x202A DUP5 PUSH2 0x1FF0 JUMP JUMPDEST PUSH2 0x1D89 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2052 JUMPI PUSH2 0x2051 PUSH2 0x1DD0 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x207B JUMPI DUP1 PUSH2 0x2067 DUP9 DUP3 PUSH2 0x1B02 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2054 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x209A JUMPI PUSH2 0x2099 PUSH2 0x1D24 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x20AA DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x201C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20CA JUMPI PUSH2 0x20C9 PUSH2 0x1AAF JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20E8 JUMPI PUSH2 0x20E7 PUSH2 0x1AB4 JUMP JUMPDEST JUMPDEST PUSH2 0x20F4 DUP6 DUP3 DUP7 ADD PUSH2 0x2085 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2115 JUMPI PUSH2 0x2114 PUSH2 0x1AB4 JUMP JUMPDEST JUMPDEST PUSH2 0x2121 DUP6 DUP3 DUP7 ADD PUSH2 0x1E3E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2160 DUP2 PUSH2 0x1B17 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2172 DUP4 DUP4 PUSH2 0x2157 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2196 DUP3 PUSH2 0x212B JUMP JUMPDEST PUSH2 0x21A0 DUP2 DUP6 PUSH2 0x2136 JUMP JUMPDEST SWAP4 POP PUSH2 0x21AB DUP4 PUSH2 0x2147 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x21DC JUMPI DUP2 MLOAD PUSH2 0x21C3 DUP9 DUP3 PUSH2 0x2166 JUMP JUMPDEST SWAP8 POP PUSH2 0x21CE DUP4 PUSH2 0x217E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x21AF JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2203 DUP2 DUP5 PUSH2 0x218B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2214 DUP2 PUSH2 0x1C3C JUMP JUMPDEST DUP2 EQ PUSH2 0x221F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2231 DUP2 PUSH2 0x220B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x224E JUMPI PUSH2 0x224D PUSH2 0x1AAF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x225C DUP6 DUP3 DUP7 ADD PUSH2 0x1B02 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x226D DUP6 DUP3 DUP7 ADD PUSH2 0x2222 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x228D JUMPI PUSH2 0x228C PUSH2 0x1AAF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x229B DUP5 DUP3 DUP6 ADD PUSH2 0x1B38 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22AD DUP2 PUSH2 0x1AD9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22C8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x22A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22E5 JUMPI PUSH2 0x22E4 PUSH2 0x1AAF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22F3 DUP6 DUP3 DUP7 ADD PUSH2 0x1B02 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2304 DUP6 DUP3 DUP7 ADD PUSH2 0x1B02 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x232A JUMPI PUSH2 0x2329 PUSH2 0x1AAF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2338 DUP9 DUP3 DUP10 ADD PUSH2 0x1B02 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2349 DUP9 DUP3 DUP10 ADD PUSH2 0x1B02 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x235A DUP9 DUP3 DUP10 ADD PUSH2 0x1B38 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x236B DUP9 DUP3 DUP10 ADD PUSH2 0x1B38 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x238C JUMPI PUSH2 0x238B PUSH2 0x1AB4 JUMP JUMPDEST JUMPDEST PUSH2 0x2398 DUP9 DUP3 DUP10 ADD PUSH2 0x1EF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x455243313135354D657461646174613A2062616C616E63652071756572792066 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F72206E6F6E6578697374656E7420746F6B656E000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2401 PUSH1 0x34 DUP4 PUSH2 0x1C7D JUMP JUMPDEST SWAP2 POP PUSH2 0x240C DUP3 PUSH2 0x23A5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2430 DUP2 PUSH2 0x23F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65726F2061646472657373000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2493 PUSH1 0x2B DUP4 PUSH2 0x1C7D JUMP JUMPDEST SWAP2 POP PUSH2 0x249E DUP3 PUSH2 0x2437 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24C2 DUP2 PUSH2 0x2486 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2510 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2523 JUMPI PUSH2 0x2522 PUSH2 0x24C9 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D69736D61746368000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2585 PUSH1 0x28 DUP4 PUSH2 0x1C7D JUMP JUMPDEST SWAP2 POP PUSH2 0x2590 DUP3 PUSH2 0x2529 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25B4 DUP2 PUSH2 0x2578 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2617 PUSH1 0x25 DUP4 PUSH2 0x1C7D JUMP JUMPDEST SWAP2 POP PUSH2 0x2622 DUP3 PUSH2 0x25BB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2646 DUP2 PUSH2 0x260A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572206E6F7220617070726F7665640000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26A9 PUSH1 0x32 DUP4 PUSH2 0x1C7D JUMP JUMPDEST SWAP2 POP PUSH2 0x26B4 DUP3 PUSH2 0x264D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26D8 DUP2 PUSH2 0x269C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2748 DUP3 PUSH2 0x1B17 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x277A JUMPI PUSH2 0x2779 PUSH2 0x270E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x279F DUP2 DUP6 PUSH2 0x218B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x27B3 DUP2 DUP5 PUSH2 0x218B JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2818 PUSH1 0x29 DUP4 PUSH2 0x1C7D JUMP JUMPDEST SWAP2 POP PUSH2 0x2823 DUP3 PUSH2 0x27BC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2847 DUP2 PUSH2 0x280B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A2062617463682062616C616E636520717565727920666F72 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20746865207A65726F2061646472657373000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28AA PUSH1 0x31 DUP4 PUSH2 0x1C7D JUMP JUMPDEST SWAP2 POP PUSH2 0x28B5 DUP3 PUSH2 0x284E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28D9 DUP2 PUSH2 0x289D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20666F722073656C660000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x293C PUSH1 0x29 DUP4 PUSH2 0x1C7D JUMP JUMPDEST SWAP2 POP PUSH2 0x2947 DUP3 PUSH2 0x28E0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x296B DUP2 PUSH2 0x292F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135354D657461646174613A2055524920717565727920666F72206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F6E6578697374656E7420746F6B656E00000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29CE PUSH1 0x30 DUP4 PUSH2 0x1C7D JUMP JUMPDEST SWAP2 POP PUSH2 0x29D9 DUP3 PUSH2 0x2972 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x29FD DUP2 PUSH2 0x29C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A1A DUP3 PUSH2 0x1C72 JUMP JUMPDEST PUSH2 0x2A24 DUP2 DUP6 PUSH2 0x2A04 JUMP JUMPDEST SWAP4 POP PUSH2 0x2A34 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C8E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A4C DUP3 DUP6 PUSH2 0x2A0F JUMP JUMPDEST SWAP2 POP PUSH2 0x2A58 DUP3 DUP5 PUSH2 0x2A0F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20617070726F7665640000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AC0 PUSH1 0x29 DUP4 PUSH2 0x1C7D JUMP JUMPDEST SWAP2 POP PUSH2 0x2ACB DUP3 PUSH2 0x2A64 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2AEF DUP2 PUSH2 0x2AB3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2B0B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0x2B18 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B8D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B2A DUP3 PUSH2 0x1B17 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B35 DUP4 PUSH2 0x1B17 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2B4D JUMPI PUSH2 0x2B4C PUSH2 0x270E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B5E DUP3 PUSH2 0x1B17 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B69 DUP4 PUSH2 0x1B17 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2B81 JUMPI PUSH2 0x2B80 PUSH2 0x270E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BBD PUSH1 0x1B DUP4 PUSH2 0x1C7D JUMP JUMPDEST SWAP2 POP PUSH2 0x2BC8 DUP3 PUSH2 0x2B87 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2BEC DUP2 PUSH2 0x2BB0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C1A DUP3 PUSH2 0x2BF3 JUMP JUMPDEST PUSH2 0x2C24 DUP2 DUP6 PUSH2 0x2BFE JUMP JUMPDEST SWAP4 POP PUSH2 0x2C34 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C8E JUMP JUMPDEST PUSH2 0x2C3D DUP2 PUSH2 0x1CB8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2C5D PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x22A4 JUMP JUMPDEST PUSH2 0x2C6A PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x22A4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2C7C DUP2 DUP7 PUSH2 0x218B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2C90 DUP2 DUP6 PUSH2 0x218B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2CA4 DUP2 DUP5 PUSH2 0x2C0F JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2CBF DUP2 PUSH2 0x1BE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CDB JUMPI PUSH2 0x2CDA PUSH2 0x1AAF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2CE9 DUP5 DUP3 DUP6 ADD PUSH2 0x2CB0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xE0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x2D1E JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH2 0x2D1B PUSH1 0x0 MLOAD PUSH2 0x2CF2 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT PUSH2 0x2DAE JUMPI PUSH2 0x2D33 PUSH2 0x1AA5 JUMP JUMPDEST PUSH1 0x4 RETURNDATASIZE SUB PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2D5B JUMPI POP POP PUSH2 0x2DAE JUMP JUMPDEST DUP1 DUP3 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D79 JUMPI POP POP POP POP PUSH2 0x2DAE JUMP JUMPDEST DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x4 RETURNDATASIZE SUB DUP6 ADD DUP2 GT ISZERO PUSH2 0x2D96 JUMPI POP POP POP POP POP PUSH2 0x2DAE JUMP JUMPDEST PUSH2 0x2DA5 DUP3 PUSH1 0x20 ADD DUP6 ADD DUP7 PUSH2 0x1D58 JUMP JUMPDEST DUP3 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E0D PUSH1 0x34 DUP4 PUSH2 0x1C7D JUMP JUMPDEST SWAP2 POP PUSH2 0x2E18 DUP3 PUSH2 0x2DB1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E3C DUP2 PUSH2 0x2E00 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E9F PUSH1 0x28 DUP4 PUSH2 0x1C7D JUMP JUMPDEST SWAP2 POP PUSH2 0x2EAA DUP3 PUSH2 0x2E43 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2ECE DUP2 PUSH2 0x2E92 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2F0F DUP3 PUSH2 0x1B17 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F1A DUP4 PUSH2 0x1B17 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2F2A JUMPI PUSH2 0x2F29 PUSH2 0x2ED5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F40 DUP3 PUSH2 0x1B17 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F4B DUP4 PUSH2 0x1B17 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2F5B JUMPI PUSH2 0x2F5A PUSH2 0x2ED5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2F7B PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x22A4 JUMP JUMPDEST PUSH2 0x2F88 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x22A4 JUMP JUMPDEST PUSH2 0x2F95 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0x2FA2 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1B8D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2FB4 DUP2 DUP5 PUSH2 0x2C0F JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH10 0x6E73756666696369656E PUSH21 0x2062616C616E636520666F72207472616E73666572 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL ADDRESS 0xD8 ISZERO PUSH16 0x8F5062A1139EBC7E396D5BA32D3E4E7D SWAP3 PUSH6 0x3E250D50C2AD 0xDC GAS 0xB9 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "448:17625:0:-:0;;;1023:33;;;;;;;;;;;;;;;;;;;:::i;:::-;;1426:236;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;337:40:3;231:10;356:20;;337:18;;;:40;;:::i;:::-;1502:5:0;1494;:13;;;;;;:::i;:::-;;1528:7;1518;:17;;;;;;:::i;:::-;;1548:41;1327:10;1567:21;;1548:18;;;:41;;:::i;:::-;1600:54;1407:10;1619:34;;1600:18;;;:54;;:::i;:::-;1426:236;;448:17625;;553:201:3;652:10;637:25;;:11;:25;;;;629:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;742:4;706:20;:33;727:11;706:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;553:201;:::o;7:99:11:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:75::-;5267:6;5300:2;5294:9;5284:19;;5234:75;:::o;5315:117::-;5424:1;5421;5414:12;5438:117;5547:1;5544;5537:12;5561:117;5670:1;5667;5660:12;5684:117;5793:1;5790;5783:12;5807:102;5848:6;5899:2;5895:7;5890:2;5883:5;5879:14;5875:28;5865:38;;5807:102;;;:::o;5915:281::-;5998:27;6020:4;5998:27;:::i;:::-;5990:6;5986:40;6128:6;6116:10;6113:22;6092:18;6080:10;6077:34;6074:62;6071:88;;;6139:18;;:::i;:::-;6071:88;6179:10;6175:2;6168:22;5958:238;5915:281;;:::o;6202:129::-;6236:6;6263:20;;:::i;:::-;6253:30;;6292:33;6320:4;6312:6;6292:33;:::i;:::-;6202:129;;;:::o;6337:308::-;6399:4;6489:18;6481:6;6478:30;6475:56;;;6511:18;;:::i;:::-;6475:56;6549:29;6571:6;6549:29;:::i;:::-;6541:37;;6633:4;6627;6623:15;6615:23;;6337:308;;;:::o;6651:246::-;6732:1;6742:113;6756:6;6753:1;6750:13;6742:113;;;6841:1;6836:3;6832:11;6826:18;6822:1;6817:3;6813:11;6806:39;6778:2;6775:1;6771:10;6766:15;;6742:113;;;6889:1;6880:6;6875:3;6871:16;6864:27;6713:184;6651:246;;;:::o;6903:434::-;6992:5;7017:66;7033:49;7075:6;7033:49;:::i;:::-;7017:66;:::i;:::-;7008:75;;7106:6;7099:5;7092:21;7144:4;7137:5;7133:16;7182:3;7173:6;7168:3;7164:16;7161:25;7158:112;;;7189:79;;:::i;:::-;7158:112;7279:52;7324:6;7319:3;7314;7279:52;:::i;:::-;6998:339;6903:434;;;;;:::o;7357:355::-;7424:5;7473:3;7466:4;7458:6;7454:17;7450:27;7440:122;;7481:79;;:::i;:::-;7440:122;7591:6;7585:13;7616:90;7702:3;7694:6;7687:4;7679:6;7675:17;7616:90;:::i;:::-;7607:99;;7430:282;7357:355;;;;:::o;7718:853::-;7817:6;7825;7874:2;7862:9;7853:7;7849:23;7845:32;7842:119;;;7880:79;;:::i;:::-;7842:119;8021:1;8010:9;8006:17;8000:24;8051:18;8043:6;8040:30;8037:117;;;8073:79;;:::i;:::-;8037:117;8178:74;8244:7;8235:6;8224:9;8220:22;8178:74;:::i;:::-;8168:84;;7971:291;8322:2;8311:9;8307:18;8301:25;8353:18;8345:6;8342:30;8339:117;;;8375:79;;:::i;:::-;8339:117;8480:74;8546:7;8537:6;8526:9;8522:22;8480:74;:::i;:::-;8470:84;;8272:292;7718:853;;;;;:::o;8577:169::-;8661:11;8695:6;8690:3;8683:19;8735:4;8730:3;8726:14;8711:29;;8577:169;;;;:::o;8752:178::-;8892:30;8888:1;8880:6;8876:14;8869:54;8752:178;:::o;8936:366::-;9078:3;9099:67;9163:2;9158:3;9099:67;:::i;:::-;9092:74;;9175:93;9264:3;9175:93;:::i;:::-;9293:2;9288:3;9284:12;9277:19;;8936:366;;;:::o;9308:419::-;9474:4;9512:2;9501:9;9497:18;9489:26;;9561:9;9555:4;9551:20;9547:1;9536:9;9532:17;9525:47;9589:131;9715:4;9589:131;:::i;:::-;9581:139;;9308:419;;;:::o;448:17625:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_asSingletonArray_1215": {
									"entryPoint": 6115,
									"id": 1215,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1055": {
									"entryPoint": 5090,
									"id": 1055,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_contains_1792": {
									"entryPoint": 6786,
									"id": 1792,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_doSafeBatchTransferAcceptanceCheck_1187": {
									"entryPoint": 5292,
									"id": 1187,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1120": {
									"entryPoint": 6237,
									"id": 1120,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_exists_249": {
									"entryPoint": 5032,
									"id": 249,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_length_1805": {
									"entryPoint": 6734,
									"id": 1805,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_1560": {
									"entryPoint": 5082,
									"id": 1560,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@add_2281": {
									"entryPoint": 5198,
									"id": 2281,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOfBatch_371": {
									"entryPoint": 2298,
									"id": 371,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_294": {
									"entryPoint": 778,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@contains_1952": {
									"entryPoint": 6708,
									"id": 1952,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getCreator_154": {
									"entryPoint": 3989,
									"id": 154,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_423": {
									"entryPoint": 4050,
									"id": 423,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1234": {
									"entryPoint": 6751,
									"id": 1234,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@length_1966": {
									"entryPoint": 5061,
									"id": 1966,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_102": {
									"entryPoint": 1155,
									"id": 102,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@royaltyFee_140": {
									"entryPoint": 3459,
									"id": 140,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeBatchTransferFrom_667": {
									"entryPoint": 1318,
									"id": 667,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_529": {
									"entryPoint": 4198,
									"id": 529,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_405": {
									"entryPoint": 2933,
									"id": 405,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@sub_2325": {
									"entryPoint": 5098,
									"id": 2325,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@supportsInterface_1594": {
									"entryPoint": 1052,
									"id": 1594,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_111": {
									"entryPoint": 2787,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_2533": {
									"entryPoint": 5763,
									"id": 2533,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURIPrefix_52": {
									"entryPoint": 3317,
									"id": 52,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenURI_236": {
									"entryPoint": 3488,
									"id": 236,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_259": {
									"entryPoint": 1301,
									"id": 259,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 8220,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7637,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 7857,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6914,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 8325,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7742,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 8738,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 7162,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 11440,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 7923,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6968,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8910,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 7969,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 8974,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 8759,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6989,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8371,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 7183,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 11461,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8823,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 8550,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8868,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 8587,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7240,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 11279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7369,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10767,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11776,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11922,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9350,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1fbbb69d10332726591dc7ee4a23a94661eda2bec5ce6bf93a68249147dc8d9c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10397,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11184,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10931,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9738,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9884,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_814321ce53d18305d90f5349bfa54202656fbfd2d04057161762f5aea6b210d2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9204,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a2c9550e091ebcfc2e7b62d57acd1844a32d2d24186a26ce3ff82a283ed9e8ea_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10689,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10543,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10251,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9592,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 8535,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7053,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 10816,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8883,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 11336,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 12134,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 8681,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 10117,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7255,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7426,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11811,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11957,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9385,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1fbbb69d10332726591dc7ee4a23a94661eda2bec5ce6bf93a68249147dc8d9c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10432,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11219,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10966,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9773,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_814321ce53d18305d90f5349bfa54202656fbfd2d04057161762f5aea6b210d2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9239,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a2c9550e091ebcfc2e7b62d57acd1844a32d2d24186a26ce3ff82a283ed9e8ea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10724,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10286,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9627,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7068,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 10998,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 7561,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 6821,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 8176,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7588,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 7793,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8491,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 11251,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7282,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8574,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 8502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 11262,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7293,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10756,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 11091,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 12036,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 11039,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6873,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7228,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 7095,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6841,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6935,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 7842,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7310,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 9464,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 7512,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 10045,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 12085,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9998,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 11989,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 9417,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 9951,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7465,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"return_data_selector": {
									"entryPoint": 11519,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 7460,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 7632,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 7788,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 6836,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6831,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7352,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_224_unsigned": {
									"entryPoint": 11506,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed": {
									"entryPoint": 11697,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503": {
									"entryPoint": 11843,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9": {
									"entryPoint": 9271,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1fbbb69d10332726591dc7ee4a23a94661eda2bec5ce6bf93a68249147dc8d9c": {
									"entryPoint": 10318,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a": {
									"entryPoint": 11143,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a": {
									"entryPoint": 10852,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d": {
									"entryPoint": 9659,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686": {
									"entryPoint": 9805,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_814321ce53d18305d90f5349bfa54202656fbfd2d04057161762f5aea6b210d2": {
									"entryPoint": 9125,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a2c9550e091ebcfc2e7b62d57acd1844a32d2d24186a26ce3ff82a283ed9e8ea": {
									"entryPoint": 10610,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2": {
									"entryPoint": 10464,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5": {
									"entryPoint": 10172,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807": {
									"entryPoint": 9513,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"try_decode_error_message": {
									"entryPoint": 11553,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 6891,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8715,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 7139,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6945,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:38526:11",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:11",
														"type": ""
													}
												],
												"src": "7:75:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:11",
														"type": ""
													}
												],
												"src": "334:126:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:11",
														"type": ""
													}
												],
												"src": "466:96:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:11"
															},
															"nodeType": "YulIf",
															"src": "621:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:11",
														"type": ""
													}
												],
												"src": "568:122:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:11"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:11",
														"type": ""
													}
												],
												"src": "696:139:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "886:32:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "896:16:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "907:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "868:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "878:7:11",
														"type": ""
													}
												],
												"src": "841:77:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "967:79:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1024:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:43:11"
															},
															"nodeType": "YulIf",
															"src": "977:63:11"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "960:5:11",
														"type": ""
													}
												],
												"src": "924:122:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1104:87:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1114:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1152:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1082:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1090:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1098:5:11",
														"type": ""
													}
												],
												"src": "1052:139:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1280:391:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1326:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:32:11"
															},
															"nodeType": "YulIf",
															"src": "1290:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "1419:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1463:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1546:118:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1591:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1242:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1253:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1265:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1273:6:11",
														"type": ""
													}
												],
												"src": "1197:474:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1742:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1759:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1782:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1764:17:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1764:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1752:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1752:37:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1752:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1730:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1737:3:11",
														"type": ""
													}
												],
												"src": "1677:118:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1899:124:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1909:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1921:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1932:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1917:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1917:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1909:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1989:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2002:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2013:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1998:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1998:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1945:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1945:71:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1945:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1871:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1883:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1894:4:11",
														"type": ""
													}
												],
												"src": "1801:222:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2073:105:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2083:89:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2098:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2105:66:11",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2094:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2094:78:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2083:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2055:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2065:7:11",
														"type": ""
													}
												],
												"src": "2029:149:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2226:78:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2282:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2291:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2294:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2284:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2284:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2284:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2249:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2273:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "2256:16:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2256:23:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2246:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2246:34:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2239:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2239:42:11"
															},
															"nodeType": "YulIf",
															"src": "2236:62:11"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2219:5:11",
														"type": ""
													}
												],
												"src": "2184:120:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2361:86:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2371:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2380:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2380:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2371:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2435:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "2409:25:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2409:32:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2409:32:11"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2339:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2347:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2355:5:11",
														"type": ""
													}
												],
												"src": "2310:137:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2518:262:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2564:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2566:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2566:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2566:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2539:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2548:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2535:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2535:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2560:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2531:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2531:32:11"
															},
															"nodeType": "YulIf",
															"src": "2528:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "2657:116:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2672:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2686:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2676:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2701:62:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2735:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2746:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2731:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2731:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2755:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "2711:19:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2711:52:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2701:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2488:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2499:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2511:6:11",
														"type": ""
													}
												],
												"src": "2453:327:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2828:48:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2838:32:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2863:5:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2856:6:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2856:13:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2849:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2849:21:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2838:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2810:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2820:7:11",
														"type": ""
													}
												],
												"src": "2786:90:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2941:50:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2958:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2978:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2963:14:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2963:21:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2951:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2951:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2951:34:11"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2929:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2936:3:11",
														"type": ""
													}
												],
												"src": "2882:109:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3089:118:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3099:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3111:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3122:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3107:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3107:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3099:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3173:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3186:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3197:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3182:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3182:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3135:37:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3135:65:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3135:65:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3061:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3073:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3084:4:11",
														"type": ""
													}
												],
												"src": "2997:210:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3272:40:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3283:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3299:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3293:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3293:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3283:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3255:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3265:6:11",
														"type": ""
													}
												],
												"src": "3213:99:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3414:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3431:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3436:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3424:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3424:19:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3424:19:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3452:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3471:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3476:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3467:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3467:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3452:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3386:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3391:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3402:11:11",
														"type": ""
													}
												],
												"src": "3318:169:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3555:184:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3565:10:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3574:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3569:1:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3634:63:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "3659:3:11"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3664:1:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3655:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3655:11:11"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "3678:3:11"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3683:1:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3674:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3674:11:11"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3668:5:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3668:18:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3648:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3648:39:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3648:39:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3595:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3598:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3592:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3592:13:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3606:19:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3608:15:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3617:1:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3620:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3613:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3613:10:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3608:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3588:3:11",
																"statements": []
															},
															"src": "3584:113:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3717:3:11"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3722:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3713:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3713:16:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3731:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3706:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3706:27:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3706:27:11"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3537:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "3542:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3547:6:11",
														"type": ""
													}
												],
												"src": "3493:246:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3793:54:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3803:38:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3821:5:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3828:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3817:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3817:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3837:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3833:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3833:7:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3813:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3813:28:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3803:6:11"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3776:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "3786:6:11",
														"type": ""
													}
												],
												"src": "3745:102:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3945:285:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3955:53:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4002:5:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3969:32:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3969:39:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3959:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4017:78:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4083:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4088:6:11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4024:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4024:71:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4017:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4143:5:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4150:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4139:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4139:16:11"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4157:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4162:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "4104:34:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4104:65:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4104:65:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4178:46:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4189:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4216:6:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "4194:21:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4194:29:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4185:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4185:39:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4178:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3926:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3933:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3941:3:11",
														"type": ""
													}
												],
												"src": "3853:377:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4354:195:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4364:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4376:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4387:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4372:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4372:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4364:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4411:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4422:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4407:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4407:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4430:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4436:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4426:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4426:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4400:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4400:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4400:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4456:86:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4528:6:11"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4537:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4464:63:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4464:78:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4456:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4326:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4338:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4349:4:11",
														"type": ""
													}
												],
												"src": "4236:313:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4644:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4661:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4664:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4654:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4654:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4654:12:11"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "4555:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4706:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4723:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4726:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4716:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4716:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4716:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4820:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4823:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4813:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4813:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4813:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4844:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4847:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4837:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4837:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4837:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "4678:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4907:238:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4917:58:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4939:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "4969:4:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "4947:21:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4947:27:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4935:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4935:40:11"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "4921:10:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5086:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5088:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5088:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5088:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "5029:10:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5041:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5026:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5026:34:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "5065:10:11"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5077:6:11"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5062:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5062:22:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5023:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5023:62:11"
															},
															"nodeType": "YulIf",
															"src": "5020:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5124:2:11",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "5128:10:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5117:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5117:22:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5117:22:11"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4893:6:11",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "4901:4:11",
														"type": ""
													}
												],
												"src": "4864:281:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5192:88:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5202:30:11",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "5212:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5212:20:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "5202:6:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5261:6:11"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "5269:4:11"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "5241:19:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5241:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5241:33:11"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5176:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5185:6:11",
														"type": ""
													}
												],
												"src": "5151:129:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5368:229:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5473:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5475:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5475:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5475:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5445:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5453:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5442:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5442:30:11"
															},
															"nodeType": "YulIf",
															"src": "5439:56:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5505:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5517:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5525:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5513:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5513:17:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "5505:4:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5567:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "5579:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5585:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5575:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5575:15:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "5567:4:11"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5352:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5363:4:11",
														"type": ""
													}
												],
												"src": "5286:311:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5692:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5709:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5712:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5702:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5702:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5702:12:11"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "5603:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5845:608:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5855:90:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5937:6:11"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5880:56:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5880:64:11"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "5864:15:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5864:81:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "5855:5:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5954:16:11",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "5965:5:11"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "5958:3:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "5987:5:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5994:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5980:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5980:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5980:21:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6010:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "6021:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6028:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6017:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6017:16:11"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "6010:3:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6043:44:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6061:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6073:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6081:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6069:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6069:17:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6057:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6057:30:11"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "6047:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6115:103:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "6129:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6129:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6129:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6102:6:11"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "6110:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6099:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6099:15:11"
															},
															"nodeType": "YulIf",
															"src": "6096:122:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6303:144:11",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6318:21:11",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "6336:3:11"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "6322:10:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "6360:3:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "6386:10:11"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "6398:3:11"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nodeType": "YulIdentifier",
																						"src": "6365:20:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6365:37:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6353:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6353:50:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6353:50:11"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6416:21:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "6427:3:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6432:4:11",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6423:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6423:14:11"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "6416:3:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "6256:3:11"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6261:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6253:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6253:15:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6269:25:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6271:21:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "6282:3:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6287:4:11",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6278:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6278:14:11"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "6271:3:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6231:21:11",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6233:17:11",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "6244:6:11"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "6237:3:11",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "6227:220:11"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5815:6:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5823:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5831:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "5839:5:11",
														"type": ""
													}
												],
												"src": "5743:710:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6553:293:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6602:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "6604:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6604:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6604:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6581:6:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6589:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6577:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6577:17:11"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "6596:3:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "6573:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6573:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6566:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6566:35:11"
															},
															"nodeType": "YulIf",
															"src": "6563:122:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6694:34:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6721:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6708:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6708:20:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6698:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6737:103:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6813:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6821:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6809:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6809:17:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6828:6:11"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "6836:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6746:62:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6746:94:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "6737:5:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6531:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6539:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6547:5:11",
														"type": ""
													}
												],
												"src": "6476:370:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6941:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6958:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6961:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6951:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6951:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6951:12:11"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "6852:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7041:241:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7146:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7148:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7148:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7148:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7118:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7126:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7115:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7115:30:11"
															},
															"nodeType": "YulIf",
															"src": "7112:56:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7178:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7208:6:11"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "7186:21:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7186:29:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7178:4:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7252:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7264:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7270:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7260:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7260:15:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7252:4:11"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7025:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7036:4:11",
														"type": ""
													}
												],
												"src": "6975:307:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7352:82:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "7375:3:11"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7380:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7385:6:11"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "7362:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7362:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7362:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "7412:3:11"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7417:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7408:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7408:16:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7426:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7401:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7401:27:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7401:27:11"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7334:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "7339:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7344:6:11",
														"type": ""
													}
												],
												"src": "7288:146:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7523:340:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7533:74:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7599:6:11"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "7558:40:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7558:48:11"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "7542:15:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7542:65:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "7533:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "7623:5:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7630:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7616:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7616:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7616:21:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7646:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "7661:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7668:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7657:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7657:16:11"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "7650:3:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7711:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "7713:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7713:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7713:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "7692:3:11"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7697:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7688:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7688:16:11"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "7706:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7685:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7685:25:11"
															},
															"nodeType": "YulIf",
															"src": "7682:112:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7840:3:11"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "7845:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7850:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "7803:36:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7803:54:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7803:54:11"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7496:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7501:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7509:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "7517:5:11",
														"type": ""
													}
												],
												"src": "7440:423:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7943:277:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7992:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "7994:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7994:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7994:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7971:6:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7979:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7967:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7967:17:11"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "7986:3:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "7963:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7963:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7956:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7956:35:11"
															},
															"nodeType": "YulIf",
															"src": "7953:122:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8084:34:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8111:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8098:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8098:20:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8088:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8127:87:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8187:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8195:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8183:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8183:17:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8202:6:11"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8210:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8136:46:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8136:78:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8127:5:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7921:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7929:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "7937:5:11",
														"type": ""
													}
												],
												"src": "7882:338:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8419:1316:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8466:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8468:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8468:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8468:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8440:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8449:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8436:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8436:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8461:3:11",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8432:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8432:33:11"
															},
															"nodeType": "YulIf",
															"src": "8429:120:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "8559:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8574:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8588:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8578:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8603:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8638:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8649:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8634:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8634:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8658:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8613:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8613:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8603:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8686:118:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8701:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8715:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8705:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8731:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8766:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8777:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8762:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8762:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8786:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8741:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8741:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "8731:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8814:303:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8829:46:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8860:9:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8871:2:11",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8856:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8856:18:11"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "8843:12:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8843:32:11"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8833:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8922:83:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "8924:77:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8924:79:11"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8924:79:11"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8894:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8902:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8891:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8891:30:11"
																	},
																	"nodeType": "YulIf",
																	"src": "8888:117:11"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9019:88:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9079:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9090:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9075:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9075:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9099:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9029:45:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9029:78:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "9019:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9127:303:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9142:46:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9173:9:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9184:2:11",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9169:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9169:18:11"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9156:12:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9156:32:11"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9146:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9235:83:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9237:77:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9237:79:11"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9237:79:11"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9207:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9215:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9204:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9204:30:11"
																	},
																	"nodeType": "YulIf",
																	"src": "9201:117:11"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9332:88:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9392:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9403:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9388:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9388:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9412:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9342:45:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9342:78:11"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "9332:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9440:288:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9455:47:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9486:9:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9497:3:11",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9482:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9482:19:11"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9469:12:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9469:33:11"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9459:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9549:83:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9551:77:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9551:79:11"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9551:79:11"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9521:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9529:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9518:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9518:30:11"
																	},
																	"nodeType": "YulIf",
																	"src": "9515:117:11"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9646:72:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9690:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9701:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9686:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9686:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9710:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9656:29:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9656:62:11"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "9646:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8357:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8368:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8380:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8388:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8396:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8404:6:11",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "8412:6:11",
														"type": ""
													}
												],
												"src": "8226:1509:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9823:229:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9928:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "9930:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9930:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9930:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9900:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9908:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9897:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9897:30:11"
															},
															"nodeType": "YulIf",
															"src": "9894:56:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9960:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9972:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9980:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "9968:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9968:17:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "9960:4:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10022:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "10034:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10040:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10030:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10030:15:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "10022:4:11"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9807:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "9818:4:11",
														"type": ""
													}
												],
												"src": "9741:311:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10177:608:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10187:90:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10269:6:11"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "10212:56:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10212:64:11"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "10196:15:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10196:81:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "10187:5:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10286:16:11",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "10297:5:11"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "10290:3:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "10319:5:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10326:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10312:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10312:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10312:21:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10342:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "10353:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10360:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10349:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10349:16:11"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "10342:3:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10375:44:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10393:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10405:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10413:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "10401:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10401:17:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10389:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10389:30:11"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "10379:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10447:103:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "10461:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10461:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10461:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "10434:6:11"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "10442:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10431:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10431:15:11"
															},
															"nodeType": "YulIf",
															"src": "10428:122:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10635:144:11",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "10650:21:11",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "10668:3:11"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "10654:10:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "10692:3:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "10718:10:11"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "10730:3:11"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nodeType": "YulIdentifier",
																						"src": "10697:20:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10697:37:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10685:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10685:50:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10685:50:11"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "10748:21:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "10759:3:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10764:4:11",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10755:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10755:14:11"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "10748:3:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "10588:3:11"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "10593:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10585:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10585:15:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10601:25:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10603:21:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "10614:3:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10619:4:11",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10610:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10610:14:11"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "10603:3:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10563:21:11",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "10565:17:11",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "10576:6:11"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "10569:3:11",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "10559:220:11"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "10147:6:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10155:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10163:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "10171:5:11",
														"type": ""
													}
												],
												"src": "10075:710:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10885:293:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10934:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "10936:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10936:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10936:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10913:6:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10921:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10909:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10909:17:11"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "10928:3:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "10905:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10905:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10898:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10898:35:11"
															},
															"nodeType": "YulIf",
															"src": "10895:122:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11026:34:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "11053:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "11040:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11040:20:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11030:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11069:103:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "11145:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11153:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11141:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11141:17:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11160:6:11"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "11168:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "11078:62:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11078:94:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "11069:5:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "10863:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10871:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "10879:5:11",
														"type": ""
													}
												],
												"src": "10808:370:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11317:761:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11363:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "11365:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11365:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11365:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11338:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11347:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11334:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11334:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11359:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11330:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11330:32:11"
															},
															"nodeType": "YulIf",
															"src": "11327:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "11456:302:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11471:45:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11502:9:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11513:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11498:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11498:17:11"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "11485:12:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11485:31:11"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11475:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "11563:83:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "11565:77:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11565:79:11"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "11565:79:11"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "11535:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11543:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "11532:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11532:30:11"
																	},
																	"nodeType": "YulIf",
																	"src": "11529:117:11"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11660:88:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11720:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11731:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11716:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11716:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11740:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "11670:45:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11670:78:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "11660:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "11768:303:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11783:46:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11814:9:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11825:2:11",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11810:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11810:18:11"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "11797:12:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11797:32:11"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11787:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "11876:83:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "11878:77:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11878:79:11"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "11878:79:11"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "11848:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11856:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "11845:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11845:30:11"
																	},
																	"nodeType": "YulIf",
																	"src": "11842:117:11"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11973:88:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12033:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12044:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12029:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12029:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12053:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "11983:45:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11983:78:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "11973:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11279:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11290:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11302:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11310:6:11",
														"type": ""
													}
												],
												"src": "11184:894:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12158:40:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12169:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12185:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12179:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12179:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "12169:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12141:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12151:6:11",
														"type": ""
													}
												],
												"src": "12084:114:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12315:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12332:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12337:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12325:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12325:19:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12325:19:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12353:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12372:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12377:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12368:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12368:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "12353:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12287:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12292:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "12303:11:11",
														"type": ""
													}
												],
												"src": "12204:184:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12466:60:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12476:11:11",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "12484:3:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "12476:4:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12497:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "12509:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12514:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12505:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12505:14:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "12497:4:11"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "12453:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "12461:4:11",
														"type": ""
													}
												],
												"src": "12394:132:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12587:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12604:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12627:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "12609:17:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12609:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12597:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12597:37:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12597:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12575:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12582:3:11",
														"type": ""
													}
												],
												"src": "12532:108:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12726:99:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12770:6:11"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12778:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12736:33:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12736:46:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12736:46:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12791:28:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12809:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12814:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12805:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12805:14:11"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "12791:10:11"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12699:6:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12707:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "12715:10:11",
														"type": ""
													}
												],
												"src": "12646:179:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12906:38:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12916:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "12928:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12933:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12924:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12924:14:11"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "12916:4:11"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "12893:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "12901:4:11",
														"type": ""
													}
												],
												"src": "12831:113:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13104:608:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13114:68:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13176:5:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "13128:47:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13128:54:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "13118:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13191:93:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13272:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13277:6:11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13198:73:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13198:86:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13191:3:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13293:71:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13358:5:11"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "13308:49:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13308:56:11"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "13297:7:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13373:21:11",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "13387:7:11"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "13377:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13463:224:11",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "13477:34:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "13504:6:11"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "13498:5:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13498:13:11"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "13481:13:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "13524:70:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "13575:13:11"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "13590:3:11"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "13531:43:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13531:63:11"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "13524:3:11"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "13607:70:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "13670:6:11"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "13617:52:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13617:60:11"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13607:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "13425:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13428:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "13422:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13422:13:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "13436:18:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "13438:14:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "13447:1:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13450:1:11",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "13443:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13443:9:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "13438:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "13407:14:11",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "13409:10:11",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "13418:1:11",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "13413:1:11",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "13403:284:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13696:10:11",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "13703:3:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13696:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13083:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13090:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13099:3:11",
														"type": ""
													}
												],
												"src": "12980:732:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13866:225:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13876:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13888:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13899:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13884:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13884:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13876:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13923:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13934:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13919:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13919:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13942:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13948:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13938:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13938:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13912:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13912:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13912:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13968:116:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14070:6:11"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14079:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13976:93:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13976:108:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13968:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13838:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13850:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13861:4:11",
														"type": ""
													}
												],
												"src": "13718:373:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14137:76:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14191:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14200:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14203:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14193:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14193:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14193:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14160:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14182:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "14167:14:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14167:21:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14157:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14157:32:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14150:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14150:40:11"
															},
															"nodeType": "YulIf",
															"src": "14147:60:11"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14130:5:11",
														"type": ""
													}
												],
												"src": "14097:116:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14268:84:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14278:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "14300:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "14287:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14287:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "14278:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14340:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "14316:23:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14316:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14316:30:11"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "14246:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14254:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14262:5:11",
														"type": ""
													}
												],
												"src": "14219:133:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14438:388:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14484:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "14486:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14486:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14486:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14459:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14468:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14455:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14455:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14480:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "14451:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14451:32:11"
															},
															"nodeType": "YulIf",
															"src": "14448:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "14577:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "14592:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14606:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "14596:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "14621:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "14656:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "14667:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14652:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14652:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14676:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "14631:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14631:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "14621:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "14704:115:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "14719:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14733:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "14723:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "14749:60:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "14781:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "14792:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14777:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14777:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14801:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "14759:17:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14759:50:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "14749:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14400:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "14411:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14423:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14431:6:11",
														"type": ""
													}
												],
												"src": "14358:468:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14898:263:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14944:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "14946:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14946:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14946:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14919:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14928:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14915:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14915:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14940:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "14911:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14911:32:11"
															},
															"nodeType": "YulIf",
															"src": "14908:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "15037:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15052:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15066:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15056:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "15081:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "15116:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15127:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15112:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15112:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15136:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "15091:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15091:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "15081:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14868:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "14879:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14891:6:11",
														"type": ""
													}
												],
												"src": "14832:329:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15232:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15249:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15272:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "15254:17:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15254:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15242:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15242:37:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15242:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15220:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15227:3:11",
														"type": ""
													}
												],
												"src": "15167:118:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15389:124:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15399:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15411:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15422:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15407:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15407:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15399:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15479:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15492:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15503:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15488:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15488:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15435:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15435:71:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15435:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15361:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15373:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15384:4:11",
														"type": ""
													}
												],
												"src": "15291:222:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15602:391:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15648:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "15650:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15650:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15650:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15623:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15632:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15619:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15619:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15644:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "15615:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15615:32:11"
															},
															"nodeType": "YulIf",
															"src": "15612:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "15741:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15756:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15770:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15760:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "15785:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "15820:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15831:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15816:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15816:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15840:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "15795:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15795:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "15785:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "15868:118:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15883:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15897:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15887:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "15913:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "15948:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15959:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15944:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15944:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15968:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "15923:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15923:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "15913:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15564:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "15575:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15587:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15595:6:11",
														"type": ""
													}
												],
												"src": "15519:474:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16142:946:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16189:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "16191:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16191:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16191:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16163:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16172:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16159:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16159:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16184:3:11",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "16155:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16155:33:11"
															},
															"nodeType": "YulIf",
															"src": "16152:120:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "16282:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16297:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16311:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16301:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16326:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16361:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16372:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16357:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16357:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16381:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "16336:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16336:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "16326:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "16409:118:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16424:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16438:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16428:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16454:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16489:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16500:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16485:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16485:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16509:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "16464:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16464:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "16454:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "16537:118:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16552:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16566:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16556:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16582:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16617:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16628:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16613:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16613:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16637:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "16592:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16592:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "16582:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "16665:118:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16680:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16694:2:11",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16684:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16710:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16745:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16756:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16741:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16741:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16765:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "16720:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16720:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "16710:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "16793:288:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16808:47:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16839:9:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16850:3:11",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16835:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16835:19:11"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "16822:12:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16822:33:11"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16812:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "16902:83:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "16904:77:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16904:79:11"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "16904:79:11"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "16874:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16882:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "16871:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16871:30:11"
																	},
																	"nodeType": "YulIf",
																	"src": "16868:117:11"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16999:72:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "17043:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "17054:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17039:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17039:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "17063:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "17009:29:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17009:62:11"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "16999:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16080:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "16091:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16103:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16111:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "16119:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "16127:6:11",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "16135:6:11",
														"type": ""
													}
												],
												"src": "15999:1089:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17200:133:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17222:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17230:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17218:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17218:14:11"
																	},
																	{
																		"hexValue": "455243313135354d657461646174613a2062616c616e63652071756572792066",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17234:34:11",
																		"type": "",
																		"value": "ERC1155Metadata: balance query f"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17211:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17211:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17211:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17290:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17298:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17286:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17286:15:11"
																	},
																	{
																		"hexValue": "6f72206e6f6e6578697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17303:22:11",
																		"type": "",
																		"value": "or nonexistent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17279:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17279:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17279:47:11"
														}
													]
												},
												"name": "store_literal_in_memory_814321ce53d18305d90f5349bfa54202656fbfd2d04057161762f5aea6b210d2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17192:6:11",
														"type": ""
													}
												],
												"src": "17094:239:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17485:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17495:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17561:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17566:2:11",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17502:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17502:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17495:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17667:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_814321ce53d18305d90f5349bfa54202656fbfd2d04057161762f5aea6b210d2",
																	"nodeType": "YulIdentifier",
																	"src": "17578:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17578:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17578:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17680:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17691:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17696:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17687:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17687:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17680:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_814321ce53d18305d90f5349bfa54202656fbfd2d04057161762f5aea6b210d2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17473:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17481:3:11",
														"type": ""
													}
												],
												"src": "17339:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17882:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17892:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17904:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17915:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17900:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17900:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17892:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17939:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17950:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17935:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17935:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17958:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17964:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17954:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17954:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17928:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17928:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17928:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17984:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18118:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_814321ce53d18305d90f5349bfa54202656fbfd2d04057161762f5aea6b210d2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17992:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17992:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17984:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_814321ce53d18305d90f5349bfa54202656fbfd2d04057161762f5aea6b210d2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17862:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17877:4:11",
														"type": ""
													}
												],
												"src": "17711:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18242:124:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18264:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18272:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18260:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18260:14:11"
																	},
																	{
																		"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18276:34:11",
																		"type": "",
																		"value": "ERC1155: balance query for the z"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18253:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18253:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18253:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18332:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18340:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18328:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18328:15:11"
																	},
																	{
																		"hexValue": "65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18345:13:11",
																		"type": "",
																		"value": "ero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18321:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18321:38:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18321:38:11"
														}
													]
												},
												"name": "store_literal_in_memory_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18234:6:11",
														"type": ""
													}
												],
												"src": "18136:230:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18518:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18528:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18594:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18599:2:11",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18535:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18535:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18528:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18700:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																	"nodeType": "YulIdentifier",
																	"src": "18611:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18611:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18611:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18713:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18724:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18729:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18720:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18720:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18713:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18506:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18514:3:11",
														"type": ""
													}
												],
												"src": "18372:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18915:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18925:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18937:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18948:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18933:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18933:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18925:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18972:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18983:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18968:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18968:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18991:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18997:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18987:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18987:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18961:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18961:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18961:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19017:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19151:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19025:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19025:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19017:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18895:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18910:4:11",
														"type": ""
													}
												],
												"src": "18744:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19197:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19214:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19217:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19207:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19207:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19207:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19311:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19314:4:11",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19304:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19304:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19304:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19335:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19338:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "19328:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19328:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19328:15:11"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "19169:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19406:269:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19416:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "19430:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19436:1:11",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "19426:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19426:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "19416:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19447:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "19477:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19483:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "19473:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19473:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "19451:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19524:51:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "19538:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "19552:6:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19560:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "19548:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19548:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "19538:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "19504:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19497:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19497:26:11"
															},
															"nodeType": "YulIf",
															"src": "19494:81:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19627:42:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "19641:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19641:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19641:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "19591:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "19614:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19622:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "19611:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19611:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "19588:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19588:38:11"
															},
															"nodeType": "YulIf",
															"src": "19585:84:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "19390:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "19399:6:11",
														"type": ""
													}
												],
												"src": "19355:320:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19787:121:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19809:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19817:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19805:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19805:14:11"
																	},
																	{
																		"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e67746820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19821:34:11",
																		"type": "",
																		"value": "ERC1155: ids and amounts length "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19798:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19798:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19798:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19877:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19885:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19873:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19873:15:11"
																	},
																	{
																		"hexValue": "6d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19890:10:11",
																		"type": "",
																		"value": "mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19866:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19866:35:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19866:35:11"
														}
													]
												},
												"name": "store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19779:6:11",
														"type": ""
													}
												],
												"src": "19681:227:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20060:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20070:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20136:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20141:2:11",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20077:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20077:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "20070:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20242:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																	"nodeType": "YulIdentifier",
																	"src": "20153:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20153:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20153:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20255:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20266:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20271:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20262:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20262:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "20255:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20048:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20056:3:11",
														"type": ""
													}
												],
												"src": "19914:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20457:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20467:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20479:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20490:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20475:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20475:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20467:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20514:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20525:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20510:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20510:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20533:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20539:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20529:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20529:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20503:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20503:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20503:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20559:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20693:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20567:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20567:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20559:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20437:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20452:4:11",
														"type": ""
													}
												],
												"src": "20286:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20817:118:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20839:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20847:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20835:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20835:14:11"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20851:34:11",
																		"type": "",
																		"value": "ERC1155: transfer to the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20828:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20828:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20828:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20907:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20915:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20903:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20903:15:11"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20920:7:11",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20896:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20896:32:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20896:32:11"
														}
													]
												},
												"name": "store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20809:6:11",
														"type": ""
													}
												],
												"src": "20711:224:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21087:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21097:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21163:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21168:2:11",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21104:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21104:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21097:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21269:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																	"nodeType": "YulIdentifier",
																	"src": "21180:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21180:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21180:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21282:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21293:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21298:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21289:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21289:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21282:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21075:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21083:3:11",
														"type": ""
													}
												],
												"src": "20941:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21484:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21494:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21506:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21517:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21502:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21502:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21494:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21541:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21552:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21537:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21537:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21560:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21566:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21556:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21556:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21530:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21530:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21530:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21586:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21720:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21594:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21594:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21586:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21464:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21479:4:11",
														"type": ""
													}
												],
												"src": "21313:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21844:131:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21866:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21874:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21862:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21862:14:11"
																	},
																	{
																		"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21878:34:11",
																		"type": "",
																		"value": "ERC1155: transfer caller is not "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21855:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21855:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21855:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21934:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21942:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21930:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21930:15:11"
																	},
																	{
																		"hexValue": "6f776e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21947:20:11",
																		"type": "",
																		"value": "owner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21923:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21923:45:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21923:45:11"
														}
													]
												},
												"name": "store_literal_in_memory_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21836:6:11",
														"type": ""
													}
												],
												"src": "21738:237:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22127:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22137:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22203:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22208:2:11",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22144:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "22144:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22137:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22309:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																	"nodeType": "YulIdentifier",
																	"src": "22220:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "22220:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22220:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22322:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22333:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22338:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22329:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "22329:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22322:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22115:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22123:3:11",
														"type": ""
													}
												],
												"src": "21981:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22524:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22534:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22546:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22557:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22542:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "22542:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22534:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22581:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22592:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22577:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22577:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22600:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22606:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22596:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22596:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22570:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "22570:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22570:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22626:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22760:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22634:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "22634:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22626:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22504:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22519:4:11",
														"type": ""
													}
												],
												"src": "22353:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22806:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22823:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22826:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22816:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "22816:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22816:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22920:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22923:4:11",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22913:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "22913:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22913:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22944:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22947:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "22937:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "22937:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22937:15:11"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "22778:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22992:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23009:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23012:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23002:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "23002:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23002:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23106:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23109:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23099:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "23099:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23099:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23130:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23133:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "23123:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "23123:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23123:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "22964:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23193:190:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23203:33:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23230:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "23212:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "23212:24:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "23203:5:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "23326:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "23328:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23328:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23328:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23251:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23258:66:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "23248:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "23248:77:11"
															},
															"nodeType": "YulIf",
															"src": "23245:103:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23357:20:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23368:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23375:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23364:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "23364:13:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "23357:3:11"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23179:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "23189:3:11",
														"type": ""
													}
												],
												"src": "23150:233:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23615:408:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23625:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23637:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23648:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23633:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "23633:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23625:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23672:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23683:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23668:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23668:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23691:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23697:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23687:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23687:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23661:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "23661:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23661:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23717:116:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "23819:6:11"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23828:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23725:93:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "23725:108:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23717:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23854:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23865:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23850:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23850:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23874:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23880:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23870:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23870:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23843:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "23843:48:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23843:48:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23900:116:11",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "24002:6:11"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "24011:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23908:93:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "23908:108:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23900:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23579:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "23591:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "23599:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23610:4:11",
														"type": ""
													}
												],
												"src": "23389:634:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24135:122:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24157:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24165:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24153:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24153:14:11"
																	},
																	{
																		"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24169:34:11",
																		"type": "",
																		"value": "ERC1155: accounts and ids length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24146:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "24146:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24146:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24225:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24233:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24221:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24221:15:11"
																	},
																	{
																		"hexValue": "206d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24238:11:11",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24214:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "24214:36:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24214:36:11"
														}
													]
												},
												"name": "store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24127:6:11",
														"type": ""
													}
												],
												"src": "24029:228:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24409:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24419:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24485:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24490:2:11",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24426:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "24426:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "24419:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24591:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																	"nodeType": "YulIdentifier",
																	"src": "24502:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "24502:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24502:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24604:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24615:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24620:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24611:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "24611:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "24604:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24397:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "24405:3:11",
														"type": ""
													}
												],
												"src": "24263:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24806:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24816:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24828:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24839:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24824:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "24824:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24816:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24863:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24874:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24859:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24859:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "24882:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24888:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24878:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24878:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24852:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "24852:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24852:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24908:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "25042:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24916:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "24916:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24908:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24786:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24801:4:11",
														"type": ""
													}
												],
												"src": "24635:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25166:130:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "25188:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25196:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25184:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25184:14:11"
																	},
																	{
																		"hexValue": "455243313135353a2062617463682062616c616e636520717565727920666f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "25200:34:11",
																		"type": "",
																		"value": "ERC1155: batch balance query for"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25177:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "25177:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25177:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "25256:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25264:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25252:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25252:15:11"
																	},
																	{
																		"hexValue": "20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "25269:19:11",
																		"type": "",
																		"value": " the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25245:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "25245:44:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25245:44:11"
														}
													]
												},
												"name": "store_literal_in_memory_1fbbb69d10332726591dc7ee4a23a94661eda2bec5ce6bf93a68249147dc8d9c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "25158:6:11",
														"type": ""
													}
												],
												"src": "25060:236:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25448:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25458:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25524:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25529:2:11",
																		"type": "",
																		"value": "49"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25465:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "25465:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "25458:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25630:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1fbbb69d10332726591dc7ee4a23a94661eda2bec5ce6bf93a68249147dc8d9c",
																	"nodeType": "YulIdentifier",
																	"src": "25541:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "25541:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25541:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25643:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25654:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25659:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25650:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "25650:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "25643:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1fbbb69d10332726591dc7ee4a23a94661eda2bec5ce6bf93a68249147dc8d9c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25436:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "25444:3:11",
														"type": ""
													}
												],
												"src": "25302:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25845:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25855:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25867:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25878:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25863:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "25863:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25855:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25902:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25913:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25898:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25898:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "25921:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25927:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25917:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25917:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25891:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "25891:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25891:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25947:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "26081:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1fbbb69d10332726591dc7ee4a23a94661eda2bec5ce6bf93a68249147dc8d9c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25955:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "25955:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25947:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1fbbb69d10332726591dc7ee4a23a94661eda2bec5ce6bf93a68249147dc8d9c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25825:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "25840:4:11",
														"type": ""
													}
												],
												"src": "25674:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26205:122:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "26227:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26235:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26223:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26223:14:11"
																	},
																	{
																		"hexValue": "455243313135353a2073657474696e6720617070726f76616c20737461747573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "26239:34:11",
																		"type": "",
																		"value": "ERC1155: setting approval status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26216:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "26216:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26216:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "26295:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26303:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26291:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26291:15:11"
																	},
																	{
																		"hexValue": "20666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "26308:11:11",
																		"type": "",
																		"value": " for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26284:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "26284:36:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26284:36:11"
														}
													]
												},
												"name": "store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "26197:6:11",
														"type": ""
													}
												],
												"src": "26099:228:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26479:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26489:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26555:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26560:2:11",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26496:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "26496:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "26489:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26661:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																	"nodeType": "YulIdentifier",
																	"src": "26572:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "26572:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26572:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26674:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26685:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26690:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26681:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "26681:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "26674:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26467:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "26475:3:11",
														"type": ""
													}
												],
												"src": "26333:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26876:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26886:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "26898:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26909:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26894:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "26894:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26886:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26933:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26944:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26929:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26929:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "26952:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26958:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "26948:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26948:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26922:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "26922:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26922:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26978:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "27112:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26986:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "26986:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26978:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "26856:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "26871:4:11",
														"type": ""
													}
												],
												"src": "26705:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27236:129:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "27258:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27266:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27254:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27254:14:11"
																	},
																	{
																		"hexValue": "455243313135354d657461646174613a2055524920717565727920666f72206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "27270:34:11",
																		"type": "",
																		"value": "ERC1155Metadata: URI query for n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27247:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "27247:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27247:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "27326:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27334:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27322:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27322:15:11"
																	},
																	{
																		"hexValue": "6f6e6578697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "27339:18:11",
																		"type": "",
																		"value": "onexistent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27315:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "27315:43:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27315:43:11"
														}
													]
												},
												"name": "store_literal_in_memory_a2c9550e091ebcfc2e7b62d57acd1844a32d2d24186a26ce3ff82a283ed9e8ea",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "27228:6:11",
														"type": ""
													}
												],
												"src": "27130:235:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27517:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27527:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27593:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27598:2:11",
																		"type": "",
																		"value": "48"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27534:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "27534:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "27527:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27699:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a2c9550e091ebcfc2e7b62d57acd1844a32d2d24186a26ce3ff82a283ed9e8ea",
																	"nodeType": "YulIdentifier",
																	"src": "27610:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "27610:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27610:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27712:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27723:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27728:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27719:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "27719:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "27712:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a2c9550e091ebcfc2e7b62d57acd1844a32d2d24186a26ce3ff82a283ed9e8ea_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "27505:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "27513:3:11",
														"type": ""
													}
												],
												"src": "27371:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27914:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27924:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "27936:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27947:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27932:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "27932:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27924:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27971:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27982:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27967:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27967:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "27990:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27996:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "27986:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27986:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27960:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "27960:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27960:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28016:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "28150:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a2c9550e091ebcfc2e7b62d57acd1844a32d2d24186a26ce3ff82a283ed9e8ea_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28024:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "28024:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28016:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a2c9550e091ebcfc2e7b62d57acd1844a32d2d24186a26ce3ff82a283ed9e8ea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "27894:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "27909:4:11",
														"type": ""
													}
												],
												"src": "27743:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28282:34:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28292:18:11",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "28307:3:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "28292:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "28254:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "28259:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "28270:11:11",
														"type": ""
													}
												],
												"src": "28168:148:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28432:280:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "28442:53:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "28489:5:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "28456:32:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "28456:39:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "28446:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "28504:96:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28588:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "28593:6:11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28511:76:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "28511:89:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "28504:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "28648:5:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28655:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28644:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28644:16:11"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28662:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "28667:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "28609:34:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "28609:65:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28609:65:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28683:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28694:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "28699:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28690:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "28690:16:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "28683:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "28413:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "28420:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "28428:3:11",
														"type": ""
													}
												],
												"src": "28322:390:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28902:251:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28913:102:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "29002:6:11"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "29011:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28920:81:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "28920:95:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "28913:3:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "29025:102:11",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "29114:6:11"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "29123:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29032:81:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "29032:95:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "29025:3:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "29137:10:11",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "29144:3:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "29137:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "28873:3:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "28879:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "28887:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "28898:3:11",
														"type": ""
													}
												],
												"src": "28718:435:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29265:122:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29287:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29295:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29283:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29283:14:11"
																	},
																	{
																		"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29299:34:11",
																		"type": "",
																		"value": "ERC1155: caller is not owner nor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29276:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "29276:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29276:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29355:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29363:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29351:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29351:15:11"
																	},
																	{
																		"hexValue": "20617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29368:11:11",
																		"type": "",
																		"value": " approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29344:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "29344:36:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29344:36:11"
														}
													]
												},
												"name": "store_literal_in_memory_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "29257:6:11",
														"type": ""
													}
												],
												"src": "29159:228:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29539:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29549:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "29615:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29620:2:11",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29556:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "29556:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "29549:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "29721:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																	"nodeType": "YulIdentifier",
																	"src": "29632:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "29632:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29632:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "29734:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "29745:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29750:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29741:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "29741:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "29734:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "29527:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "29535:3:11",
														"type": ""
													}
												],
												"src": "29393:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29936:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29946:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "29958:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29969:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29954:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "29954:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "29946:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29993:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30004:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29989:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29989:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "30012:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30018:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "30008:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30008:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29982:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "29982:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29982:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "30038:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "30172:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "30046:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "30046:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "30038:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "29916:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "29931:4:11",
														"type": ""
													}
												],
												"src": "29765:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30316:206:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30326:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "30338:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30349:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30334:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "30334:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "30326:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "30406:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30419:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30430:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30415:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30415:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "30362:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "30362:71:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30362:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "30487:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30500:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30511:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30496:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30496:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "30443:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "30443:72:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30443:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "30280:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "30292:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "30300:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "30311:4:11",
														"type": ""
													}
												],
												"src": "30190:332:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30573:149:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30583:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "30606:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "30588:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "30588:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "30583:1:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "30617:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "30640:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "30622:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "30622:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "30617:1:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "30651:17:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "30663:1:11"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "30666:1:11"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "30659:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "30659:9:11"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "30651:4:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "30693:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "30695:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "30695:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "30695:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "30684:4:11"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "30690:1:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "30681:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "30681:11:11"
															},
															"nodeType": "YulIf",
															"src": "30678:37:11"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "30559:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "30562:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "30568:4:11",
														"type": ""
													}
												],
												"src": "30528:194:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30772:147:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30782:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "30805:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "30787:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "30787:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "30782:1:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "30816:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "30839:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "30821:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "30821:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "30816:1:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "30850:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "30861:1:11"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "30864:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30857:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "30857:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "30850:3:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "30890:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "30892:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "30892:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "30892:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "30882:1:11"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "30885:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "30879:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "30879:10:11"
															},
															"nodeType": "YulIf",
															"src": "30876:36:11"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "30759:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "30762:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "30768:3:11",
														"type": ""
													}
												],
												"src": "30728:191:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31031:71:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "31053:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31061:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31049:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31049:14:11"
																	},
																	{
																		"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "31065:29:11",
																		"type": "",
																		"value": "SafeMath: addition overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31042:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "31042:53:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31042:53:11"
														}
													]
												},
												"name": "store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "31023:6:11",
														"type": ""
													}
												],
												"src": "30925:177:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31254:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "31264:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "31330:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31335:2:11",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "31271:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "31271:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "31264:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "31436:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																	"nodeType": "YulIdentifier",
																	"src": "31347:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "31347:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31347:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "31449:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "31460:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31465:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "31456:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "31456:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "31449:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "31242:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "31250:3:11",
														"type": ""
													}
												],
												"src": "31108:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31651:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "31661:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "31673:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31684:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "31669:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "31669:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "31661:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "31708:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31719:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31704:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31704:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "31727:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "31733:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "31723:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31723:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31697:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "31697:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31697:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "31753:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "31887:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "31761:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "31761:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "31753:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "31631:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "31646:4:11",
														"type": ""
													}
												],
												"src": "31480:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31963:40:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "31974:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "31990:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "31984:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "31984:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "31974:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "31946:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "31956:6:11",
														"type": ""
													}
												],
												"src": "31905:98:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32104:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "32121:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "32126:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "32114:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "32114:19:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32114:19:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "32142:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "32161:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32166:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "32157:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "32157:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "32142:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "32076:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "32081:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "32092:11:11",
														"type": ""
													}
												],
												"src": "32009:168:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32273:283:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "32283:52:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "32329:5:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "32297:31:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "32297:38:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "32287:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "32344:77:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "32409:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "32414:6:11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "32351:57:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "32351:70:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "32344:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "32469:5:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32476:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32465:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32465:16:11"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "32483:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "32488:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "32430:34:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "32430:65:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32430:65:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "32504:46:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "32515:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "32542:6:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "32520:21:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32520:29:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "32511:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "32511:39:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "32504:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "32254:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "32261:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "32269:3:11",
														"type": ""
													}
												],
												"src": "32183:373:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32890:725:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "32900:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "32912:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32923:3:11",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "32908:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "32908:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "32900:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "32981:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "32994:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33005:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32990:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32990:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "32937:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "32937:71:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32937:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "33062:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "33075:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33086:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "33071:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33071:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "33018:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "33018:72:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33018:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "33111:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33122:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "33107:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33107:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "33131:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "33137:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "33127:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33127:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "33100:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "33100:48:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33100:48:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "33157:116:11",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "33259:6:11"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "33268:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "33165:93:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "33165:108:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "33157:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "33294:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33305:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "33290:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33290:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "33314:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "33320:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "33310:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33310:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "33283:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "33283:48:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33283:48:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "33340:116:11",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "33442:6:11"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "33451:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "33348:93:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "33348:108:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "33340:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "33477:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33488:3:11",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "33473:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33473:19:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "33498:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "33504:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "33494:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33494:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "33466:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "33466:49:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33466:49:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "33524:84:11",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "33594:6:11"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "33603:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "33532:61:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "33532:76:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "33524:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "32830:9:11",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "32842:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "32850:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "32858:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "32866:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "32874:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "32885:4:11",
														"type": ""
													}
												],
												"src": "32562:1053:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "33683:79:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "33693:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "33708:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "33702:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "33702:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "33693:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "33750:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "33724:25:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "33724:32:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33724:32:11"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "33661:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "33669:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "33677:5:11",
														"type": ""
													}
												],
												"src": "33621:141:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "33844:273:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "33890:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "33892:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "33892:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "33892:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "33865:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "33874:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "33861:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33861:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "33886:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "33857:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "33857:32:11"
															},
															"nodeType": "YulIf",
															"src": "33854:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "33983:127:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "33998:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "34012:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "34002:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "34027:73:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "34072:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "34083:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "34068:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "34068:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "34092:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "34037:30:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "34037:63:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "34027:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "33814:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "33825:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "33837:6:11",
														"type": ""
													}
												],
												"src": "33768:349:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "34176:53:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "34186:36:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "34211:3:11",
																		"type": "",
																		"value": "224"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "34216:5:11"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "34207:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "34207:15:11"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "34186:8:11"
																}
															]
														}
													]
												},
												"name": "shift_right_224_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34157:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "34167:8:11",
														"type": ""
													}
												],
												"src": "34123:106:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "34274:144:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "34311:101:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "34340:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "34343:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "34346:1:11",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "34325:14:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "34325:23:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "34325:23:11"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "34361:41:11",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "34399:1:11",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "34393:5:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "34393:8:11"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_224_unsigned",
																				"nodeType": "YulIdentifier",
																				"src": "34368:24:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "34368:34:11"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "34361:3:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "34290:14:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "34290:16:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "34308:1:11",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "34287:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "34287:23:11"
															},
															"nodeType": "YulIf",
															"src": "34284:128:11"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "34270:3:11",
														"type": ""
													}
												],
												"src": "34235:183:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "34467:668:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "34507:9:11",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "34509:5:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "34483:14:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "34483:16:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "34501:4:11",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "34480:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "34480:26:11"
															},
															"nodeType": "YulIf",
															"src": "34477:39:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "34526:32:11",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "34538:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "34538:20:11"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "34530:4:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "34582:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "34588:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "34595:14:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "34595:16:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "34613:1:11",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "34591:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "34591:24:11"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "34567:14:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "34567:49:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "34567:49:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "34626:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "34646:4:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "34640:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "34640:11:11"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "34630:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "34777:29:11",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "34791:5:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "34682:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "34690:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "34679:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "34679:30:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "34730:6:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "34738:4:11",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "34726:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "34726:17:11"
																			},
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "34745:14:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "34745:16:11"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "34723:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "34723:39:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "34663:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "34663:113:11"
															},
															"nodeType": "YulIf",
															"src": "34660:146:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "34816:28:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "34831:4:11"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "34837:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "34827:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "34827:17:11"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "34820:3:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "34853:24:11",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "34873:3:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "34867:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "34867:10:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "34857:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "34920:9:11",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "34922:5:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "34892:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "34900:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "34889:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "34889:30:11"
															},
															"nodeType": "YulIf",
															"src": "34886:43:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "34939:38:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "msg",
																				"nodeType": "YulIdentifier",
																				"src": "34958:3:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "34963:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "34954:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "34954:14:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "34970:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "34950:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "34950:27:11"
															},
															"variables": [
																{
																	"name": "end",
																	"nodeType": "YulTypedName",
																	"src": "34943:3:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "35034:9:11",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "35036:5:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "34992:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "35001:4:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "35011:14:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "35011:16:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "35029:1:11",
																						"type": "",
																						"value": "4"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "35007:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "35007:24:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "34997:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "34997:35:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "34989:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "34989:44:11"
															},
															"nodeType": "YulIf",
															"src": "34986:57:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "35073:4:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "35083:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "35095:4:11",
																						"type": "",
																						"value": "0x20"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "35101:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "35091:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "35091:17:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "35079:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "35079:30:11"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "35053:19:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "35053:57:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "35053:57:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "35119:10:11",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "35126:3:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "35119:3:11"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "34463:3:11",
														"type": ""
													}
												],
												"src": "34424:711:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "35247:133:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "35269:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "35277:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "35265:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "35265:14:11"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "35281:34:11",
																		"type": "",
																		"value": "ERC1155: transfer to non ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "35258:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "35258:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "35258:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "35337:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "35345:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "35333:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "35333:15:11"
																	},
																	{
																		"hexValue": "526563656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "35350:22:11",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "35326:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "35326:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "35326:47:11"
														}
													]
												},
												"name": "store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "35239:6:11",
														"type": ""
													}
												],
												"src": "35141:239:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "35532:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "35542:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "35608:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "35613:2:11",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "35549:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "35549:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "35542:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "35714:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																	"nodeType": "YulIdentifier",
																	"src": "35625:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "35625:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "35625:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "35727:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "35738:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "35743:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "35734:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "35734:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "35727:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "35520:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "35528:3:11",
														"type": ""
													}
												],
												"src": "35386:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "35929:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "35939:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "35951:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "35962:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "35947:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "35947:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "35939:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "35986:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "35997:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "35982:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "35982:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "36005:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "36011:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "36001:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "36001:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "35975:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "35975:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "35975:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "36031:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "36165:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "36039:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "36039:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "36031:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "35909:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "35924:4:11",
														"type": ""
													}
												],
												"src": "35758:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "36289:121:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "36311:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "36319:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "36307:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "36307:14:11"
																	},
																	{
																		"hexValue": "455243313135353a204552433131353552656365697665722072656a65637465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "36323:34:11",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "36300:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "36300:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "36300:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "36379:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "36387:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "36375:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "36375:15:11"
																	},
																	{
																		"hexValue": "6420746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "36392:10:11",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "36368:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "36368:35:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "36368:35:11"
														}
													]
												},
												"name": "store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "36281:6:11",
														"type": ""
													}
												],
												"src": "36183:227:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "36562:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "36572:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "36638:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "36643:2:11",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "36579:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "36579:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "36572:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "36744:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																	"nodeType": "YulIdentifier",
																	"src": "36655:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "36655:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "36655:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "36757:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "36768:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "36773:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "36764:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "36764:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "36757:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "36550:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "36558:3:11",
														"type": ""
													}
												],
												"src": "36416:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "36959:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "36969:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "36981:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "36992:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "36977:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "36977:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "36969:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "37016:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "37027:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "37012:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "37012:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "37035:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "37041:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "37031:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "37031:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "37005:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "37005:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "37005:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "37061:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "37195:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "37069:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "37069:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "37061:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "36939:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "36954:4:11",
														"type": ""
													}
												],
												"src": "36788:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "37241:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "37258:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "37261:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "37251:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "37251:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "37251:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "37355:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "37358:4:11",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "37348:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "37348:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "37348:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "37379:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "37382:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "37372:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "37372:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "37372:15:11"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "37213:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "37441:143:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "37451:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "37474:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "37456:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "37456:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "37451:1:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "37485:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "37508:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "37490:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "37490:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "37485:1:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "37532:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "37534:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "37534:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "37534:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "37529:1:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "37522:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "37522:9:11"
															},
															"nodeType": "YulIf",
															"src": "37519:35:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "37564:14:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "37573:1:11"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "37576:1:11"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "37569:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "37569:9:11"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "37564:1:11"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "37430:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "37433:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "37439:1:11",
														"type": ""
													}
												],
												"src": "37399:185:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "37624:142:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "37634:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "37657:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "37639:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "37639:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "37634:1:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "37668:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "37691:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "37673:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "37673:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "37668:1:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "37715:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "37717:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "37717:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "37717:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "37712:1:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "37705:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "37705:9:11"
															},
															"nodeType": "YulIf",
															"src": "37702:35:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "37746:14:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "37755:1:11"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "37758:1:11"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "37751:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "37751:9:11"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "37746:1:11"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "37613:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "37616:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "37622:1:11",
														"type": ""
													}
												],
												"src": "37590:176:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "38000:523:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "38010:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "38022:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "38033:3:11",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "38018:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "38018:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "38010:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "38091:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "38104:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "38115:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "38100:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "38100:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "38047:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "38047:71:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "38047:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "38172:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "38185:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "38196:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "38181:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "38181:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "38128:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "38128:72:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "38128:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "38254:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "38267:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "38278:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "38263:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "38263:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "38210:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "38210:72:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "38210:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "38336:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "38349:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "38360:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "38345:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "38345:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "38292:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "38292:72:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "38292:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "38385:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "38396:3:11",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "38381:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "38381:19:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "38406:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "38412:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "38402:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "38402:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "38374:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "38374:49:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "38374:49:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "38432:84:11",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "38502:6:11"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "38511:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "38440:61:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "38440:76:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "38432:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "37940:9:11",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "37952:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "37960:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "37968:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "37976:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "37984:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "37995:4:11",
														"type": ""
													}
												],
												"src": "37772:751:11"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_814321ce53d18305d90f5349bfa54202656fbfd2d04057161762f5aea6b210d2(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155Metadata: balance query f\")\n\n        mstore(add(memPtr, 32), \"or nonexistent token\")\n\n    }\n\n    function abi_encode_t_stringliteral_814321ce53d18305d90f5349bfa54202656fbfd2d04057161762f5aea6b210d2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 52)\n        store_literal_in_memory_814321ce53d18305d90f5349bfa54202656fbfd2d04057161762f5aea6b210d2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_814321ce53d18305d90f5349bfa54202656fbfd2d04057161762f5aea6b210d2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_814321ce53d18305d90f5349bfa54202656fbfd2d04057161762f5aea6b210d2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: balance query for the z\")\n\n        mstore(add(memPtr, 32), \"ero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: ids and amounts length \")\n\n        mstore(add(memPtr, 32), \"mismatch\")\n\n    }\n\n    function abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: transfer to the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: transfer caller is not \")\n\n        mstore(add(memPtr, 32), \"owner nor approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: accounts and ids length\")\n\n        mstore(add(memPtr, 32), \" mismatch\")\n\n    }\n\n    function abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1fbbb69d10332726591dc7ee4a23a94661eda2bec5ce6bf93a68249147dc8d9c(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: batch balance query for\")\n\n        mstore(add(memPtr, 32), \" the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_1fbbb69d10332726591dc7ee4a23a94661eda2bec5ce6bf93a68249147dc8d9c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 49)\n        store_literal_in_memory_1fbbb69d10332726591dc7ee4a23a94661eda2bec5ce6bf93a68249147dc8d9c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1fbbb69d10332726591dc7ee4a23a94661eda2bec5ce6bf93a68249147dc8d9c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1fbbb69d10332726591dc7ee4a23a94661eda2bec5ce6bf93a68249147dc8d9c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: setting approval status\")\n\n        mstore(add(memPtr, 32), \" for self\")\n\n    }\n\n    function abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a2c9550e091ebcfc2e7b62d57acd1844a32d2d24186a26ce3ff82a283ed9e8ea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155Metadata: URI query for n\")\n\n        mstore(add(memPtr, 32), \"onexistent token\")\n\n    }\n\n    function abi_encode_t_stringliteral_a2c9550e091ebcfc2e7b62d57acd1844a32d2d24186a26ce3ff82a283ed9e8ea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 48)\n        store_literal_in_memory_a2c9550e091ebcfc2e7b62d57acd1844a32d2d24186a26ce3ff82a283ed9e8ea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a2c9550e091ebcfc2e7b62d57acd1844a32d2d24186a26ce3ff82a283ed9e8ea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a2c9550e091ebcfc2e7b62d57acd1844a32d2d24186a26ce3ff82a283ed9e8ea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: caller is not owner nor\")\n\n        mstore(add(memPtr, 32), \" approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeMath: addition overflow\")\n\n    }\n\n    function abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function shift_right_224_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(224, value)\n\n    }\n\n    function return_data_selector() -> sig {\n        if gt(returndatasize(), 3) {\n            returndatacopy(0, 0, 4)\n            sig := shift_right_224_unsigned(mload(0))\n        }\n    }\n\n    function try_decode_error_message() -> ret {\n        if lt(returndatasize(), 0x44) { leave }\n\n        let data := allocate_unbounded()\n        returndatacopy(data, 4, sub(returndatasize(), 4))\n\n        let offset := mload(data)\n        if or(\n            gt(offset, 0xffffffffffffffff),\n            gt(add(offset, 0x24), returndatasize())\n            ) {\n            leave\n        }\n\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, 0xffffffffffffffff) { leave }\n\n        let end := add(add(msg, 0x20), length)\n        if gt(end, add(data, sub(returndatasize(), 4))) { leave }\n\n        finalize_allocation(data, add(offset, add(0x20, length)))\n        ret := msg\n    }\n\n    function store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: transfer to non ERC1155\")\n\n        mstore(add(memPtr, 32), \"Receiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 52)\n        store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: ERC1155Receiver rejecte\")\n\n        mstore(add(memPtr, 32), \"d tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA22CB465 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0xD48E638A EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x2EE JUMPI PUSH2 0xE9 JUMP JUMPDEST DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0xC0AC9983 EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0xC57DC235 EQ PUSH2 0x22E JUMPI PUSH2 0xE9 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1D6 JUMPI PUSH2 0xE9 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x14E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x108 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x103 SWAP2 SWAP1 PUSH2 0x1B4D JUMP JUMPDEST PUSH2 0x30A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x115 SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x138 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x133 SWAP2 SWAP1 PUSH2 0x1C0F JUMP JUMPDEST PUSH2 0x41C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x145 SWAP2 SWAP1 PUSH2 0x1C57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x156 PUSH2 0x483 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x1D02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x174 PUSH2 0x515 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x1F21 JUMP JUMPDEST PUSH2 0x526 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x20B3 JUMP JUMPDEST PUSH2 0x8FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x21E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DE PUSH2 0xAE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x1D02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x2237 JUMP JUMPDEST PUSH2 0xB75 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x218 PUSH2 0xCF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x225 SWAP2 SWAP1 PUSH2 0x1D02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x248 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x243 SWAP2 SWAP1 PUSH2 0x2277 JUMP JUMPDEST PUSH2 0xD83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x278 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x273 SWAP2 SWAP1 PUSH2 0x2277 JUMP JUMPDEST PUSH2 0xDA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x285 SWAP2 SWAP1 PUSH2 0x1D02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x2277 JUMP JUMPDEST PUSH2 0xF95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0x22B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D3 SWAP2 SWAP1 PUSH2 0x22CE JUMP JUMPDEST PUSH2 0xFD2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0x1C57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x308 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x303 SWAP2 SWAP1 PUSH2 0x230E JUMP JUMPDEST PUSH2 0x1066 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0x315 DUP3 PUSH2 0x13A8 JUMP JUMPDEST PUSH2 0x354 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34B SWAP1 PUSH2 0x2417 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3BA SWAP1 PUSH2 0x24A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x9 DUP1 SLOAD PUSH2 0x492 SWAP1 PUSH2 0x24F8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4BE SWAP1 PUSH2 0x24F8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x50B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4E0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x50B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4EE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x521 PUSH1 0x7 PUSH2 0x13C5 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x56A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x561 SWAP1 PUSH2 0x259B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D0 SWAP1 PUSH2 0x262D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E1 PUSH2 0x13DA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x627 JUMPI POP PUSH2 0x626 DUP6 PUSH2 0x621 PUSH2 0x13DA JUMP JUMPDEST PUSH2 0xFD2 JUMP JUMPDEST JUMPDEST PUSH2 0x666 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65D SWAP1 PUSH2 0x26BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x670 PUSH2 0x13DA JUMP JUMPDEST SWAP1 POP PUSH2 0x680 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x13E2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x865 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6A1 JUMPI PUSH2 0x6A0 PUSH2 0x26DF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x6C0 JUMPI PUSH2 0x6BF PUSH2 0x26DF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x747 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2FC1 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x3 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x13EA SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x7FE DUP2 PUSH1 0x3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x144E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP DUP1 PUSH2 0x85E SWAP1 PUSH2 0x273D JUMP JUMPDEST SWAP1 POP PUSH2 0x683 JUMP JUMPDEST POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x8DC SWAP3 SWAP2 SWAP1 PUSH2 0x2785 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x8F2 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x14AC JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x940 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x937 SWAP1 PUSH2 0x282E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x95D JUMPI PUSH2 0x95C PUSH2 0x1D29 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x98B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xAD8 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x9C5 JUMPI PUSH2 0x9C4 PUSH2 0x26DF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA23 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA1A SWAP1 PUSH2 0x28C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xA3A JUMPI PUSH2 0xA39 PUSH2 0x26DF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xA65 JUMPI PUSH2 0xA64 PUSH2 0x26DF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xABB JUMPI PUSH2 0xABA PUSH2 0x26DF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0xAD1 SWAP1 PUSH2 0x273D JUMP JUMPDEST SWAP1 POP PUSH2 0x991 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA DUP1 SLOAD PUSH2 0xAF2 SWAP1 PUSH2 0x24F8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB1E SWAP1 PUSH2 0x24F8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB6B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB40 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB6B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB4E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB94 PUSH2 0x13DA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBEA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE1 SWAP1 PUSH2 0x2952 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0xBF7 PUSH2 0x13DA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCA4 PUSH2 0x13DA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xCE9 SWAP2 SWAP1 PUSH2 0x1C57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH2 0xD02 SWAP1 PUSH2 0x24F8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD2E SWAP1 PUSH2 0x24F8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD7B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD50 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD7B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD5E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xDAB DUP3 PUSH2 0x13A8 JUMP JUMPDEST PUSH2 0xDEA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDE1 SWAP1 PUSH2 0x29E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0xE0A SWAP1 PUSH2 0x24F8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE36 SWAP1 PUSH2 0x24F8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE83 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE58 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE83 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE66 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x5 DUP1 SLOAD PUSH2 0xE99 SWAP1 PUSH2 0x24F8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xEC5 SWAP1 PUSH2 0x24F8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF12 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xEE7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF12 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xEF5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0xF2C JUMPI DUP2 SWAP3 POP POP POP PUSH2 0xF90 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0xF61 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF49 SWAP3 SWAP2 SWAP1 PUSH2 0x2A40 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0xF90 JUMP JUMPDEST DUP1 PUSH2 0xF6B DUP6 PUSH2 0x1683 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF7C SWAP3 SWAP2 SWAP1 PUSH2 0x2A40 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10CC SWAP1 PUSH2 0x262D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10DD PUSH2 0x13DA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1123 JUMPI POP PUSH2 0x1122 DUP6 PUSH2 0x111D PUSH2 0x13DA JUMP JUMPDEST PUSH2 0xFD2 JUMP JUMPDEST JUMPDEST PUSH2 0x1162 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1159 SWAP1 PUSH2 0x2AD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x116C PUSH2 0x13DA JUMP JUMPDEST SWAP1 POP PUSH2 0x118C DUP2 DUP8 DUP8 PUSH2 0x117D DUP9 PUSH2 0x17E3 JUMP JUMPDEST PUSH2 0x1186 DUP9 PUSH2 0x17E3 JUMP JUMPDEST DUP8 PUSH2 0x13E2 JUMP JUMPDEST PUSH2 0x1209 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2FC1 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x3 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x13EA SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x12C0 DUP4 PUSH1 0x3 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x144E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x138A SWAP3 SWAP2 SWAP1 PUSH2 0x2AF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x13A0 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x185D JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13BE DUP3 PUSH1 0x7 PUSH2 0x1A34 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13D3 DUP3 PUSH1 0x0 ADD PUSH2 0x1A4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x1432 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1429 SWAP2 SWAP1 PUSH2 0x1D02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 PUSH2 0x1441 SWAP2 SWAP1 PUSH2 0x2B1F JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0x145D SWAP2 SWAP1 PUSH2 0x2B53 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x14A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1499 SWAP1 PUSH2 0x2BD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14CB DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A5F JUMP JUMPDEST ISZERO PUSH2 0x167B JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1511 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C48 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x154D JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x154A SWAP2 SWAP1 PUSH2 0x2CC5 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x15F2 JUMPI PUSH2 0x1559 PUSH2 0x2CFF JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x15B5 JUMPI POP PUSH2 0x156D PUSH2 0x2D21 JUMP JUMPDEST DUP1 PUSH2 0x1578 JUMPI POP PUSH2 0x15B7 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15AC SWAP2 SWAP1 PUSH2 0x1D02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15E9 SWAP1 PUSH2 0x2E23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1679 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1670 SWAP1 PUSH2 0x2EB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SUB PUSH2 0x16CA JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x17DE JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x16FC JUMPI DUP1 DUP1 PUSH2 0x16E5 SWAP1 PUSH2 0x273D JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x16F5 SWAP2 SWAP1 PUSH2 0x2F04 JUMP JUMPDEST SWAP2 POP PUSH2 0x16D2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1718 JUMPI PUSH2 0x1717 PUSH2 0x1D29 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x174A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x17D7 JUMPI PUSH1 0x1 DUP3 PUSH2 0x1763 SWAP2 SWAP1 PUSH2 0x2B1F JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x1772 SWAP2 SWAP1 PUSH2 0x2F35 JUMP JUMPDEST PUSH1 0x30 PUSH2 0x177E SWAP2 SWAP1 PUSH2 0x2B53 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1794 JUMPI PUSH2 0x1793 PUSH2 0x26DF JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x17D0 SWAP2 SWAP1 PUSH2 0x2F04 JUMP JUMPDEST SWAP5 POP PUSH2 0x174E JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1802 JUMPI PUSH2 0x1801 PUSH2 0x1D29 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1830 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1848 JUMPI PUSH2 0x1847 PUSH2 0x26DF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x187C DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A5F JUMP JUMPDEST ISZERO PUSH2 0x1A2C JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18C2 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2F66 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x18FE JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18FB SWAP2 SWAP1 PUSH2 0x2CC5 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x19A3 JUMPI PUSH2 0x190A PUSH2 0x2CFF JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x1966 JUMPI POP PUSH2 0x191E PUSH2 0x2D21 JUMP JUMPDEST DUP1 PUSH2 0x1929 JUMPI POP PUSH2 0x1968 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x195D SWAP2 SWAP1 PUSH2 0x1D02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x199A SWAP1 PUSH2 0x2E23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1A2A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A21 SWAP1 PUSH2 0x2EB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A46 DUP4 PUSH1 0x0 ADD DUP4 PUSH1 0x0 SHL PUSH2 0x1A82 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AE4 DUP3 PUSH2 0x1AB9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AF4 DUP2 PUSH2 0x1AD9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B11 DUP2 PUSH2 0x1AEB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B2A DUP2 PUSH2 0x1B17 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B47 DUP2 PUSH2 0x1B21 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B64 JUMPI PUSH2 0x1B63 PUSH2 0x1AAF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B72 DUP6 DUP3 DUP7 ADD PUSH2 0x1B02 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B83 DUP6 DUP3 DUP7 ADD PUSH2 0x1B38 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B96 DUP2 PUSH2 0x1B17 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BB1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B8D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BEC DUP2 PUSH2 0x1BB7 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C09 DUP2 PUSH2 0x1BE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C25 JUMPI PUSH2 0x1C24 PUSH2 0x1AAF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C33 DUP5 DUP3 DUP6 ADD PUSH2 0x1BFA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C51 DUP2 PUSH2 0x1C3C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C6C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1CAC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1C91 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CD4 DUP3 PUSH2 0x1C72 JUMP JUMPDEST PUSH2 0x1CDE DUP2 DUP6 PUSH2 0x1C7D JUMP JUMPDEST SWAP4 POP PUSH2 0x1CEE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C8E JUMP JUMPDEST PUSH2 0x1CF7 DUP2 PUSH2 0x1CB8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D1C DUP2 DUP5 PUSH2 0x1CC9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1D61 DUP3 PUSH2 0x1CB8 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1D80 JUMPI PUSH2 0x1D7F PUSH2 0x1D29 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D93 PUSH2 0x1AA5 JUMP JUMPDEST SWAP1 POP PUSH2 0x1D9F DUP3 DUP3 PUSH2 0x1D58 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1DBF JUMPI PUSH2 0x1DBE PUSH2 0x1D29 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1DE8 PUSH2 0x1DE3 DUP5 PUSH2 0x1DA4 JUMP JUMPDEST PUSH2 0x1D89 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1E0B JUMPI PUSH2 0x1E0A PUSH2 0x1DD0 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1E34 JUMPI DUP1 PUSH2 0x1E20 DUP9 DUP3 PUSH2 0x1B38 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1E0D JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E53 JUMPI PUSH2 0x1E52 PUSH2 0x1D24 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1E63 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1DD5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1E8C JUMPI PUSH2 0x1E8B PUSH2 0x1D29 JUMP JUMPDEST JUMPDEST PUSH2 0x1E95 DUP3 PUSH2 0x1CB8 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EC4 PUSH2 0x1EBF DUP5 PUSH2 0x1E71 JUMP JUMPDEST PUSH2 0x1D89 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1EE0 JUMPI PUSH2 0x1EDF PUSH2 0x1E6C JUMP JUMPDEST JUMPDEST PUSH2 0x1EEB DUP5 DUP3 DUP6 PUSH2 0x1EA2 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1F08 JUMPI PUSH2 0x1F07 PUSH2 0x1D24 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1F18 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1EB1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1F3D JUMPI PUSH2 0x1F3C PUSH2 0x1AAF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F4B DUP9 DUP3 DUP10 ADD PUSH2 0x1B02 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1F5C DUP9 DUP3 DUP10 ADD PUSH2 0x1B02 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F7D JUMPI PUSH2 0x1F7C PUSH2 0x1AB4 JUMP JUMPDEST JUMPDEST PUSH2 0x1F89 DUP9 DUP3 DUP10 ADD PUSH2 0x1E3E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FAA JUMPI PUSH2 0x1FA9 PUSH2 0x1AB4 JUMP JUMPDEST JUMPDEST PUSH2 0x1FB6 DUP9 DUP3 DUP10 ADD PUSH2 0x1E3E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FD7 JUMPI PUSH2 0x1FD6 PUSH2 0x1AB4 JUMP JUMPDEST JUMPDEST PUSH2 0x1FE3 DUP9 DUP3 DUP10 ADD PUSH2 0x1EF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x200B JUMPI PUSH2 0x200A PUSH2 0x1D29 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x202F PUSH2 0x202A DUP5 PUSH2 0x1FF0 JUMP JUMPDEST PUSH2 0x1D89 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2052 JUMPI PUSH2 0x2051 PUSH2 0x1DD0 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x207B JUMPI DUP1 PUSH2 0x2067 DUP9 DUP3 PUSH2 0x1B02 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2054 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x209A JUMPI PUSH2 0x2099 PUSH2 0x1D24 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x20AA DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x201C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20CA JUMPI PUSH2 0x20C9 PUSH2 0x1AAF JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20E8 JUMPI PUSH2 0x20E7 PUSH2 0x1AB4 JUMP JUMPDEST JUMPDEST PUSH2 0x20F4 DUP6 DUP3 DUP7 ADD PUSH2 0x2085 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2115 JUMPI PUSH2 0x2114 PUSH2 0x1AB4 JUMP JUMPDEST JUMPDEST PUSH2 0x2121 DUP6 DUP3 DUP7 ADD PUSH2 0x1E3E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2160 DUP2 PUSH2 0x1B17 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2172 DUP4 DUP4 PUSH2 0x2157 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2196 DUP3 PUSH2 0x212B JUMP JUMPDEST PUSH2 0x21A0 DUP2 DUP6 PUSH2 0x2136 JUMP JUMPDEST SWAP4 POP PUSH2 0x21AB DUP4 PUSH2 0x2147 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x21DC JUMPI DUP2 MLOAD PUSH2 0x21C3 DUP9 DUP3 PUSH2 0x2166 JUMP JUMPDEST SWAP8 POP PUSH2 0x21CE DUP4 PUSH2 0x217E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x21AF JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2203 DUP2 DUP5 PUSH2 0x218B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2214 DUP2 PUSH2 0x1C3C JUMP JUMPDEST DUP2 EQ PUSH2 0x221F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2231 DUP2 PUSH2 0x220B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x224E JUMPI PUSH2 0x224D PUSH2 0x1AAF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x225C DUP6 DUP3 DUP7 ADD PUSH2 0x1B02 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x226D DUP6 DUP3 DUP7 ADD PUSH2 0x2222 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x228D JUMPI PUSH2 0x228C PUSH2 0x1AAF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x229B DUP5 DUP3 DUP6 ADD PUSH2 0x1B38 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22AD DUP2 PUSH2 0x1AD9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22C8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x22A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22E5 JUMPI PUSH2 0x22E4 PUSH2 0x1AAF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22F3 DUP6 DUP3 DUP7 ADD PUSH2 0x1B02 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2304 DUP6 DUP3 DUP7 ADD PUSH2 0x1B02 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x232A JUMPI PUSH2 0x2329 PUSH2 0x1AAF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2338 DUP9 DUP3 DUP10 ADD PUSH2 0x1B02 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2349 DUP9 DUP3 DUP10 ADD PUSH2 0x1B02 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x235A DUP9 DUP3 DUP10 ADD PUSH2 0x1B38 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x236B DUP9 DUP3 DUP10 ADD PUSH2 0x1B38 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x238C JUMPI PUSH2 0x238B PUSH2 0x1AB4 JUMP JUMPDEST JUMPDEST PUSH2 0x2398 DUP9 DUP3 DUP10 ADD PUSH2 0x1EF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x455243313135354D657461646174613A2062616C616E63652071756572792066 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F72206E6F6E6578697374656E7420746F6B656E000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2401 PUSH1 0x34 DUP4 PUSH2 0x1C7D JUMP JUMPDEST SWAP2 POP PUSH2 0x240C DUP3 PUSH2 0x23A5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2430 DUP2 PUSH2 0x23F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65726F2061646472657373000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2493 PUSH1 0x2B DUP4 PUSH2 0x1C7D JUMP JUMPDEST SWAP2 POP PUSH2 0x249E DUP3 PUSH2 0x2437 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24C2 DUP2 PUSH2 0x2486 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2510 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2523 JUMPI PUSH2 0x2522 PUSH2 0x24C9 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D69736D61746368000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2585 PUSH1 0x28 DUP4 PUSH2 0x1C7D JUMP JUMPDEST SWAP2 POP PUSH2 0x2590 DUP3 PUSH2 0x2529 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25B4 DUP2 PUSH2 0x2578 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2617 PUSH1 0x25 DUP4 PUSH2 0x1C7D JUMP JUMPDEST SWAP2 POP PUSH2 0x2622 DUP3 PUSH2 0x25BB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2646 DUP2 PUSH2 0x260A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572206E6F7220617070726F7665640000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26A9 PUSH1 0x32 DUP4 PUSH2 0x1C7D JUMP JUMPDEST SWAP2 POP PUSH2 0x26B4 DUP3 PUSH2 0x264D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26D8 DUP2 PUSH2 0x269C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2748 DUP3 PUSH2 0x1B17 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x277A JUMPI PUSH2 0x2779 PUSH2 0x270E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x279F DUP2 DUP6 PUSH2 0x218B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x27B3 DUP2 DUP5 PUSH2 0x218B JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2818 PUSH1 0x29 DUP4 PUSH2 0x1C7D JUMP JUMPDEST SWAP2 POP PUSH2 0x2823 DUP3 PUSH2 0x27BC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2847 DUP2 PUSH2 0x280B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A2062617463682062616C616E636520717565727920666F72 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20746865207A65726F2061646472657373000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28AA PUSH1 0x31 DUP4 PUSH2 0x1C7D JUMP JUMPDEST SWAP2 POP PUSH2 0x28B5 DUP3 PUSH2 0x284E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28D9 DUP2 PUSH2 0x289D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20666F722073656C660000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x293C PUSH1 0x29 DUP4 PUSH2 0x1C7D JUMP JUMPDEST SWAP2 POP PUSH2 0x2947 DUP3 PUSH2 0x28E0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x296B DUP2 PUSH2 0x292F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135354D657461646174613A2055524920717565727920666F72206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F6E6578697374656E7420746F6B656E00000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29CE PUSH1 0x30 DUP4 PUSH2 0x1C7D JUMP JUMPDEST SWAP2 POP PUSH2 0x29D9 DUP3 PUSH2 0x2972 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x29FD DUP2 PUSH2 0x29C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A1A DUP3 PUSH2 0x1C72 JUMP JUMPDEST PUSH2 0x2A24 DUP2 DUP6 PUSH2 0x2A04 JUMP JUMPDEST SWAP4 POP PUSH2 0x2A34 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C8E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A4C DUP3 DUP6 PUSH2 0x2A0F JUMP JUMPDEST SWAP2 POP PUSH2 0x2A58 DUP3 DUP5 PUSH2 0x2A0F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20617070726F7665640000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AC0 PUSH1 0x29 DUP4 PUSH2 0x1C7D JUMP JUMPDEST SWAP2 POP PUSH2 0x2ACB DUP3 PUSH2 0x2A64 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2AEF DUP2 PUSH2 0x2AB3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2B0B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0x2B18 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B8D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B2A DUP3 PUSH2 0x1B17 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B35 DUP4 PUSH2 0x1B17 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2B4D JUMPI PUSH2 0x2B4C PUSH2 0x270E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B5E DUP3 PUSH2 0x1B17 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B69 DUP4 PUSH2 0x1B17 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2B81 JUMPI PUSH2 0x2B80 PUSH2 0x270E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BBD PUSH1 0x1B DUP4 PUSH2 0x1C7D JUMP JUMPDEST SWAP2 POP PUSH2 0x2BC8 DUP3 PUSH2 0x2B87 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2BEC DUP2 PUSH2 0x2BB0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C1A DUP3 PUSH2 0x2BF3 JUMP JUMPDEST PUSH2 0x2C24 DUP2 DUP6 PUSH2 0x2BFE JUMP JUMPDEST SWAP4 POP PUSH2 0x2C34 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C8E JUMP JUMPDEST PUSH2 0x2C3D DUP2 PUSH2 0x1CB8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2C5D PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x22A4 JUMP JUMPDEST PUSH2 0x2C6A PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x22A4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2C7C DUP2 DUP7 PUSH2 0x218B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2C90 DUP2 DUP6 PUSH2 0x218B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2CA4 DUP2 DUP5 PUSH2 0x2C0F JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2CBF DUP2 PUSH2 0x1BE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CDB JUMPI PUSH2 0x2CDA PUSH2 0x1AAF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2CE9 DUP5 DUP3 DUP6 ADD PUSH2 0x2CB0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xE0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x2D1E JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH2 0x2D1B PUSH1 0x0 MLOAD PUSH2 0x2CF2 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT PUSH2 0x2DAE JUMPI PUSH2 0x2D33 PUSH2 0x1AA5 JUMP JUMPDEST PUSH1 0x4 RETURNDATASIZE SUB PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2D5B JUMPI POP POP PUSH2 0x2DAE JUMP JUMPDEST DUP1 DUP3 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D79 JUMPI POP POP POP POP PUSH2 0x2DAE JUMP JUMPDEST DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x4 RETURNDATASIZE SUB DUP6 ADD DUP2 GT ISZERO PUSH2 0x2D96 JUMPI POP POP POP POP POP PUSH2 0x2DAE JUMP JUMPDEST PUSH2 0x2DA5 DUP3 PUSH1 0x20 ADD DUP6 ADD DUP7 PUSH2 0x1D58 JUMP JUMPDEST DUP3 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E0D PUSH1 0x34 DUP4 PUSH2 0x1C7D JUMP JUMPDEST SWAP2 POP PUSH2 0x2E18 DUP3 PUSH2 0x2DB1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E3C DUP2 PUSH2 0x2E00 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E9F PUSH1 0x28 DUP4 PUSH2 0x1C7D JUMP JUMPDEST SWAP2 POP PUSH2 0x2EAA DUP3 PUSH2 0x2E43 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2ECE DUP2 PUSH2 0x2E92 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2F0F DUP3 PUSH2 0x1B17 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F1A DUP4 PUSH2 0x1B17 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2F2A JUMPI PUSH2 0x2F29 PUSH2 0x2ED5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F40 DUP3 PUSH2 0x1B17 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F4B DUP4 PUSH2 0x1B17 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2F5B JUMPI PUSH2 0x2F5A PUSH2 0x2ED5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2F7B PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x22A4 JUMP JUMPDEST PUSH2 0x2F88 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x22A4 JUMP JUMPDEST PUSH2 0x2F95 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0x2FA2 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1B8D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2FB4 DUP2 DUP5 PUSH2 0x2C0F JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH10 0x6E73756666696369656E PUSH21 0x2062616C616E636520666F72207472616E73666572 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL ADDRESS 0xD8 ISZERO PUSH16 0x8F5062A1139EBC7E396D5BA32D3E4E7D SWAP3 PUSH6 0x3E250D50C2AD 0xDC GAS 0xB9 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "448:17625:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4641:325;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;393:152:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1670:100:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4122:113;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10810:1280;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5276:634;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1778:104;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6272:311;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1023:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2436:121;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3425:556;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2730:126;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6872:160;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8195:964;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4641:325;4724:7;4752:16;4760:7;4752;:16::i;:::-;4744:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;4863:1;4844:21;;:7;:21;;;4836:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;4931:9;:18;4941:7;4931:18;;;;;;;;;;;:27;4950:7;4931:27;;;;;;;;;;;;;;;;4924:34;;4641:325;;;;:::o;393:152:3:-;480:4;504:20;:33;525:11;504:33;;;;;;;;;;;;;;;;;;;;;;;;;;;497:40;;393:152;;;:::o;1670:100:0:-;1724:13;1757:5;1750:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1670:100;:::o;4122:113::-;4176:7;4203:21;:12;:19;:21::i;:::-;4196:28;;4122:113;:::o;10810:1280::-;11085:7;:14;11066:8;:15;:33;11058:86;;;;;;;;;;;;:::i;:::-;;;;;;;;;11177:1;11163:16;;:2;:16;;;11155:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;11262:12;:10;:12::i;:::-;11254:20;;:4;:20;;;:60;;;;11278:36;11295:4;11301:12;:10;:12::i;:::-;11278:16;:36::i;:::-;11254:60;11232:160;;;;;;;;;;;;:::i;:::-;;;;;;;;;11405:16;11424:12;:10;:12::i;:::-;11405:31;;11449:65;11470:8;11480:4;11486:2;11490:8;11500:7;11509:4;11449:20;:65::i;:::-;11532:9;11527:393;11551:8;:15;11547:1;:19;11527:393;;;11588:15;11606:8;11615:1;11606:11;;;;;;;;:::i;:::-;;;;;;;;11588:29;;11632:14;11649:7;11657:1;11649:10;;;;;;;;:::i;:::-;;;;;;;;11632:27;;11703:131;11750:6;11703:131;;;;;;;;;;;;;;;;;:9;:18;11713:7;11703:18;;;;;;;;;;;:24;11722:4;11703:24;;;;;;;;;;;;;;;;:28;;:131;;;;;:::i;:::-;11676:9;:18;11686:7;11676:18;;;;;;;;;;;:24;11695:4;11676:24;;;;;;;;;;;;;;;:158;;;;11874:34;11901:6;11874:9;:18;11884:7;11874:18;;;;;;;;;;;:22;11893:2;11874:22;;;;;;;;;;;;;;;;:26;;:34;;;;:::i;:::-;11849:9;:18;11859:7;11849:18;;;;;;;;;;;:22;11868:2;11849:22;;;;;;;;;;;;;;;:59;;;;11573:347;;11568:3;;;;:::i;:::-;;;11527:393;;;;11967:2;11937:52;;11961:4;11937:52;;11951:8;11937:52;;;11971:8;11981:7;11937:52;;;;;;;:::i;:::-;;;;;;;;12002:80;12038:8;12048:4;12054:2;12058:8;12068:7;12077:4;12002:35;:80::i;:::-;11047:1043;10810:1280;;;;;:::o;5276:634::-;5440:16;5501:3;:10;5482:8;:15;:29;5474:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;5570:30;5617:8;:15;5603:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5570:63;;5651:9;5646:224;5670:8;:15;5666:1;:19;5646:224;;;5738:1;5715:25;;:8;5724:1;5715:11;;;;;;;;:::i;:::-;;;;;;;;:25;;;5707:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;5828:9;:17;5838:3;5842:1;5838:6;;;;;;;;:::i;:::-;;;;;;;;5828:17;;;;;;;;;;;:30;5846:8;5855:1;5846:11;;;;;;;;:::i;:::-;;;;;;;;5828:30;;;;;;;;;;;;;;;;5809:13;5823:1;5809:16;;;;;;;;:::i;:::-;;;;;;;:49;;;;;5687:3;;;;:::i;:::-;;;5646:224;;;;5889:13;5882:20;;;5276:634;;;;:::o;1778:104::-;1834:13;1867:7;1860:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1778:104;:::o;6272:311::-;6391:8;6375:24;;:12;:10;:12::i;:::-;:24;;;6367:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;6503:8;6458:18;:32;6477:12;:10;:12::i;:::-;6458:32;;;;;;;;;;;;;;;:42;6491:8;6458:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;6556:8;6527:48;;6542:12;:10;:12::i;:::-;6527:48;;;6566:8;6527:48;;;;;;:::i;:::-;;;;;;;;6272:311;;:::o;1023:33::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2436:121::-;2502:7;2529:11;:20;2541:7;2529:20;;;;;;;;;;;;2522:27;;2436:121;;;:::o;3425:556::-;3498:13;3532:16;3540:7;3532;:16::i;:::-;3524:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;3612:23;3638:10;:19;3649:7;3638:19;;;;;;;;;;;3612:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3668:18;3689:14;3668:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3742:1;3726:4;3720:18;:23;3716:72;;3767:9;3760:16;;;;;;3716:72;3828:1;3808:9;3802:23;:27;3798:108;;;3877:4;3883:9;3860:33;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3846:48;;;;;;3798:108;3947:4;3953:18;:7;:16;:18::i;:::-;3930:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3916:57;;;;3425:556;;;;:::o;2730:126::-;2804:7;2831:8;:17;2840:7;2831:17;;;;;;;;;;;;;;;;;;;;;2824:24;;2730:126;;;:::o;6872:160::-;6963:4;6987:18;:27;7006:7;6987:27;;;;;;;;;;;;;;;:37;7015:8;6987:37;;;;;;;;;;;;;;;;;;;;;;;;;6980:44;;6872:160;;;;:::o;8195:964::-;8440:1;8426:16;;:2;:16;;;8418:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;8525:12;:10;:12::i;:::-;8517:20;;:4;:20;;;:60;;;;8541:36;8558:4;8564:12;:10;:12::i;:::-;8541:16;:36::i;:::-;8517:60;8495:151;;;;;;;;;;;;:::i;:::-;;;;;;;;;8659:16;8678:12;:10;:12::i;:::-;8659:31;;8703:101;8724:8;8734:4;8740:2;8744:26;8762:7;8744:17;:26::i;:::-;8772:25;8790:6;8772:17;:25::i;:::-;8799:4;8703:20;:101::i;:::-;8844:82;8873:6;8844:82;;;;;;;;;;;;;;;;;:9;:18;8854:7;8844:18;;;;;;;;;;;:24;8863:4;8844:24;;;;;;;;;;;;;;;;:28;;:82;;;;;:::i;:::-;8817:9;:18;8827:7;8817:18;;;;;;;;;;;:24;8836:4;8817:24;;;;;;;;;;;;;;;:109;;;;8962:34;8989:6;8962:9;:18;8972:7;8962:18;;;;;;;;;;;:22;8981:2;8962:22;;;;;;;;;;;;;;;;:26;;:34;;;;:::i;:::-;8937:9;:18;8947:7;8937:18;;;;;;;;;;;:22;8956:2;8937:22;;;;;;;;;;;;;;;:59;;;;9045:2;9014:51;;9039:4;9014:51;;9029:8;9014:51;;;9049:7;9058:6;9014:51;;;;;;;:::i;:::-;;;;;;;;9078:73;9109:8;9119:4;9125:2;9129:7;9138:6;9146:4;9078:30;:73::i;:::-;8407:752;8195:964;;;;;:::o;3989:127::-;4054:4;4078:30;4100:7;4078:12;:21;;:30;;;;:::i;:::-;4071:37;;3989:127;;;:::o;2919:123:4:-;2988:7;3015:19;3023:3;:10;;3015:7;:19::i;:::-;3008:26;;2919:123;;;:::o;145:115:2:-;198:15;241:10;226:26;;145:115;:::o;16026:241:0:-;;;;;;;:::o;754:192:9:-;840:7;873:1;868;:6;;876:12;860:29;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;900:9;916:1;912;:5;;;;:::i;:::-;900:17;;937:1;930:8;;;754:192;;;;;:::o;302:181::-;360:7;380:9;396:1;392;:5;;;;:::i;:::-;380:17;;421:1;416;:6;;408:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;474:1;467:8;;;302:181;;;;:::o;17055:809:0:-;17314:15;:2;:13;;;:15::i;:::-;17310:547;;;17367:2;17350:43;;;17394:8;17404:4;17410:8;17420:7;17429:4;17350:84;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;17346:500;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;17719:6;17712:14;;;;;;;;;;;:::i;:::-;;;;;;;;17346:500;;;17768:62;;;;;;;;;;:::i;:::-;;;;;;;;17346:500;17496:52;;;17484:64;;;:8;:64;;;;17480:163;;17573:50;;;;;;;;;;:::i;:::-;;;;;;;;17480:163;17435:223;17310:547;17055:809;;;;;;:::o;388:723:10:-;444:13;674:1;665:5;:10;661:53;;692:10;;;;;;;;;;;;;;;;;;;;;661:53;724:12;739:5;724:20;;755:14;780:78;795:1;787:4;:9;780:78;;813:8;;;;;:::i;:::-;;;;844:2;836:10;;;;;:::i;:::-;;;780:78;;;868:19;900:6;890:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;868:39;;918:154;934:1;925:5;:10;918:154;;962:1;952:11;;;;;:::i;:::-;;;1029:2;1021:5;:10;;;;:::i;:::-;1008:2;:24;;;;:::i;:::-;995:39;;978:6;985;978:14;;;;;;;;:::i;:::-;;;;;:56;;;;;;;;;;;1058:2;1049:11;;;;;:::i;:::-;;;918:154;;;1096:6;1082:21;;;;;388:723;;;;:::o;17872:198:0:-;17938:16;17967:22;18006:1;17992:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17967:41;;18030:7;18019:5;18025:1;18019:8;;;;;;;;:::i;:::-;;;;;;;:18;;;;;18057:5;18050:12;;;17872:198;;;:::o;16275:772::-;16509:15;:2;:13;;;:15::i;:::-;16505:535;;;16562:2;16545:38;;;16584:8;16594:4;16600:7;16609:6;16617:4;16545:77;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;16541:488;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;16902:6;16895:14;;;;;;;;;;;:::i;:::-;;;;;;;;16541:488;;;16951:62;;;;;;;;;;:::i;:::-;;;;;;;;16541:488;16684:47;;;16672:59;;;:8;:59;;;;16668:158;;16756:50;;;;;;;;;;:::i;:::-;;;;;;;;16668:158;16623:218;16505:535;16275:772;;;;;;:::o;2760:151:4:-;2844:4;2868:35;2878:3;:10;;2898:3;2890:12;;2868:9;:35::i;:::-;2861:42;;2760:151;;;;:::o;1624:110::-;1680:7;1707:3;:12;;:19;;;;1700:26;;1624:110;;;:::o;1191:326:1:-;1251:4;1508:1;1486:7;:19;;;:23;1479:30;;1191:326;;;:::o;1491:125:4:-;1562:4;1607:1;1586:3;:12;;:17;1599:3;1586:17;;;;;;;;;;;;:22;;1579:29;;1491:125;;;;:::o;7:75:11:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:222::-;1894:4;1932:2;1921:9;1917:18;1909:26;;1945:71;2013:1;2002:9;1998:17;1989:6;1945:71;:::i;:::-;1801:222;;;;:::o;2029:149::-;2065:7;2105:66;2098:5;2094:78;2083:89;;2029:149;;;:::o;2184:120::-;2256:23;2273:5;2256:23;:::i;:::-;2249:5;2246:34;2236:62;;2294:1;2291;2284:12;2236:62;2184:120;:::o;2310:137::-;2355:5;2393:6;2380:20;2371:29;;2409:32;2435:5;2409:32;:::i;:::-;2310:137;;;;:::o;2453:327::-;2511:6;2560:2;2548:9;2539:7;2535:23;2531:32;2528:119;;;2566:79;;:::i;:::-;2528:119;2686:1;2711:52;2755:7;2746:6;2735:9;2731:22;2711:52;:::i;:::-;2701:62;;2657:116;2453:327;;;;:::o;2786:90::-;2820:7;2863:5;2856:13;2849:21;2838:32;;2786:90;;;:::o;2882:109::-;2963:21;2978:5;2963:21;:::i;:::-;2958:3;2951:34;2882:109;;:::o;2997:210::-;3084:4;3122:2;3111:9;3107:18;3099:26;;3135:65;3197:1;3186:9;3182:17;3173:6;3135:65;:::i;:::-;2997:210;;;;:::o;3213:99::-;3265:6;3299:5;3293:12;3283:22;;3213:99;;;:::o;3318:169::-;3402:11;3436:6;3431:3;3424:19;3476:4;3471:3;3467:14;3452:29;;3318:169;;;;:::o;3493:246::-;3574:1;3584:113;3598:6;3595:1;3592:13;3584:113;;;3683:1;3678:3;3674:11;3668:18;3664:1;3659:3;3655:11;3648:39;3620:2;3617:1;3613:10;3608:15;;3584:113;;;3731:1;3722:6;3717:3;3713:16;3706:27;3555:184;3493:246;;;:::o;3745:102::-;3786:6;3837:2;3833:7;3828:2;3821:5;3817:14;3813:28;3803:38;;3745:102;;;:::o;3853:377::-;3941:3;3969:39;4002:5;3969:39;:::i;:::-;4024:71;4088:6;4083:3;4024:71;:::i;:::-;4017:78;;4104:65;4162:6;4157:3;4150:4;4143:5;4139:16;4104:65;:::i;:::-;4194:29;4216:6;4194:29;:::i;:::-;4189:3;4185:39;4178:46;;3945:285;3853:377;;;;:::o;4236:313::-;4349:4;4387:2;4376:9;4372:18;4364:26;;4436:9;4430:4;4426:20;4422:1;4411:9;4407:17;4400:47;4464:78;4537:4;4528:6;4464:78;:::i;:::-;4456:86;;4236:313;;;;:::o;4555:117::-;4664:1;4661;4654:12;4678:180;4726:77;4723:1;4716:88;4823:4;4820:1;4813:15;4847:4;4844:1;4837:15;4864:281;4947:27;4969:4;4947:27;:::i;:::-;4939:6;4935:40;5077:6;5065:10;5062:22;5041:18;5029:10;5026:34;5023:62;5020:88;;;5088:18;;:::i;:::-;5020:88;5128:10;5124:2;5117:22;4907:238;4864:281;;:::o;5151:129::-;5185:6;5212:20;;:::i;:::-;5202:30;;5241:33;5269:4;5261:6;5241:33;:::i;:::-;5151:129;;;:::o;5286:311::-;5363:4;5453:18;5445:6;5442:30;5439:56;;;5475:18;;:::i;:::-;5439:56;5525:4;5517:6;5513:17;5505:25;;5585:4;5579;5575:15;5567:23;;5286:311;;;:::o;5603:117::-;5712:1;5709;5702:12;5743:710;5839:5;5864:81;5880:64;5937:6;5880:64;:::i;:::-;5864:81;:::i;:::-;5855:90;;5965:5;5994:6;5987:5;5980:21;6028:4;6021:5;6017:16;6010:23;;6081:4;6073:6;6069:17;6061:6;6057:30;6110:3;6102:6;6099:15;6096:122;;;6129:79;;:::i;:::-;6096:122;6244:6;6227:220;6261:6;6256:3;6253:15;6227:220;;;6336:3;6365:37;6398:3;6386:10;6365:37;:::i;:::-;6360:3;6353:50;6432:4;6427:3;6423:14;6416:21;;6303:144;6287:4;6282:3;6278:14;6271:21;;6227:220;;;6231:21;5845:608;;5743:710;;;;;:::o;6476:370::-;6547:5;6596:3;6589:4;6581:6;6577:17;6573:27;6563:122;;6604:79;;:::i;:::-;6563:122;6721:6;6708:20;6746:94;6836:3;6828:6;6821:4;6813:6;6809:17;6746:94;:::i;:::-;6737:103;;6553:293;6476:370;;;;:::o;6852:117::-;6961:1;6958;6951:12;6975:307;7036:4;7126:18;7118:6;7115:30;7112:56;;;7148:18;;:::i;:::-;7112:56;7186:29;7208:6;7186:29;:::i;:::-;7178:37;;7270:4;7264;7260:15;7252:23;;6975:307;;;:::o;7288:146::-;7385:6;7380:3;7375;7362:30;7426:1;7417:6;7412:3;7408:16;7401:27;7288:146;;;:::o;7440:423::-;7517:5;7542:65;7558:48;7599:6;7558:48;:::i;:::-;7542:65;:::i;:::-;7533:74;;7630:6;7623:5;7616:21;7668:4;7661:5;7657:16;7706:3;7697:6;7692:3;7688:16;7685:25;7682:112;;;7713:79;;:::i;:::-;7682:112;7803:54;7850:6;7845:3;7840;7803:54;:::i;:::-;7523:340;7440:423;;;;;:::o;7882:338::-;7937:5;7986:3;7979:4;7971:6;7967:17;7963:27;7953:122;;7994:79;;:::i;:::-;7953:122;8111:6;8098:20;8136:78;8210:3;8202:6;8195:4;8187:6;8183:17;8136:78;:::i;:::-;8127:87;;7943:277;7882:338;;;;:::o;8226:1509::-;8380:6;8388;8396;8404;8412;8461:3;8449:9;8440:7;8436:23;8432:33;8429:120;;;8468:79;;:::i;:::-;8429:120;8588:1;8613:53;8658:7;8649:6;8638:9;8634:22;8613:53;:::i;:::-;8603:63;;8559:117;8715:2;8741:53;8786:7;8777:6;8766:9;8762:22;8741:53;:::i;:::-;8731:63;;8686:118;8871:2;8860:9;8856:18;8843:32;8902:18;8894:6;8891:30;8888:117;;;8924:79;;:::i;:::-;8888:117;9029:78;9099:7;9090:6;9079:9;9075:22;9029:78;:::i;:::-;9019:88;;8814:303;9184:2;9173:9;9169:18;9156:32;9215:18;9207:6;9204:30;9201:117;;;9237:79;;:::i;:::-;9201:117;9342:78;9412:7;9403:6;9392:9;9388:22;9342:78;:::i;:::-;9332:88;;9127:303;9497:3;9486:9;9482:19;9469:33;9529:18;9521:6;9518:30;9515:117;;;9551:79;;:::i;:::-;9515:117;9656:62;9710:7;9701:6;9690:9;9686:22;9656:62;:::i;:::-;9646:72;;9440:288;8226:1509;;;;;;;;:::o;9741:311::-;9818:4;9908:18;9900:6;9897:30;9894:56;;;9930:18;;:::i;:::-;9894:56;9980:4;9972:6;9968:17;9960:25;;10040:4;10034;10030:15;10022:23;;9741:311;;;:::o;10075:710::-;10171:5;10196:81;10212:64;10269:6;10212:64;:::i;:::-;10196:81;:::i;:::-;10187:90;;10297:5;10326:6;10319:5;10312:21;10360:4;10353:5;10349:16;10342:23;;10413:4;10405:6;10401:17;10393:6;10389:30;10442:3;10434:6;10431:15;10428:122;;;10461:79;;:::i;:::-;10428:122;10576:6;10559:220;10593:6;10588:3;10585:15;10559:220;;;10668:3;10697:37;10730:3;10718:10;10697:37;:::i;:::-;10692:3;10685:50;10764:4;10759:3;10755:14;10748:21;;10635:144;10619:4;10614:3;10610:14;10603:21;;10559:220;;;10563:21;10177:608;;10075:710;;;;;:::o;10808:370::-;10879:5;10928:3;10921:4;10913:6;10909:17;10905:27;10895:122;;10936:79;;:::i;:::-;10895:122;11053:6;11040:20;11078:94;11168:3;11160:6;11153:4;11145:6;11141:17;11078:94;:::i;:::-;11069:103;;10885:293;10808:370;;;;:::o;11184:894::-;11302:6;11310;11359:2;11347:9;11338:7;11334:23;11330:32;11327:119;;;11365:79;;:::i;:::-;11327:119;11513:1;11502:9;11498:17;11485:31;11543:18;11535:6;11532:30;11529:117;;;11565:79;;:::i;:::-;11529:117;11670:78;11740:7;11731:6;11720:9;11716:22;11670:78;:::i;:::-;11660:88;;11456:302;11825:2;11814:9;11810:18;11797:32;11856:18;11848:6;11845:30;11842:117;;;11878:79;;:::i;:::-;11842:117;11983:78;12053:7;12044:6;12033:9;12029:22;11983:78;:::i;:::-;11973:88;;11768:303;11184:894;;;;;:::o;12084:114::-;12151:6;12185:5;12179:12;12169:22;;12084:114;;;:::o;12204:184::-;12303:11;12337:6;12332:3;12325:19;12377:4;12372:3;12368:14;12353:29;;12204:184;;;;:::o;12394:132::-;12461:4;12484:3;12476:11;;12514:4;12509:3;12505:14;12497:22;;12394:132;;;:::o;12532:108::-;12609:24;12627:5;12609:24;:::i;:::-;12604:3;12597:37;12532:108;;:::o;12646:179::-;12715:10;12736:46;12778:3;12770:6;12736:46;:::i;:::-;12814:4;12809:3;12805:14;12791:28;;12646:179;;;;:::o;12831:113::-;12901:4;12933;12928:3;12924:14;12916:22;;12831:113;;;:::o;12980:732::-;13099:3;13128:54;13176:5;13128:54;:::i;:::-;13198:86;13277:6;13272:3;13198:86;:::i;:::-;13191:93;;13308:56;13358:5;13308:56;:::i;:::-;13387:7;13418:1;13403:284;13428:6;13425:1;13422:13;13403:284;;;13504:6;13498:13;13531:63;13590:3;13575:13;13531:63;:::i;:::-;13524:70;;13617:60;13670:6;13617:60;:::i;:::-;13607:70;;13463:224;13450:1;13447;13443:9;13438:14;;13403:284;;;13407:14;13703:3;13696:10;;13104:608;;;12980:732;;;;:::o;13718:373::-;13861:4;13899:2;13888:9;13884:18;13876:26;;13948:9;13942:4;13938:20;13934:1;13923:9;13919:17;13912:47;13976:108;14079:4;14070:6;13976:108;:::i;:::-;13968:116;;13718:373;;;;:::o;14097:116::-;14167:21;14182:5;14167:21;:::i;:::-;14160:5;14157:32;14147:60;;14203:1;14200;14193:12;14147:60;14097:116;:::o;14219:133::-;14262:5;14300:6;14287:20;14278:29;;14316:30;14340:5;14316:30;:::i;:::-;14219:133;;;;:::o;14358:468::-;14423:6;14431;14480:2;14468:9;14459:7;14455:23;14451:32;14448:119;;;14486:79;;:::i;:::-;14448:119;14606:1;14631:53;14676:7;14667:6;14656:9;14652:22;14631:53;:::i;:::-;14621:63;;14577:117;14733:2;14759:50;14801:7;14792:6;14781:9;14777:22;14759:50;:::i;:::-;14749:60;;14704:115;14358:468;;;;;:::o;14832:329::-;14891:6;14940:2;14928:9;14919:7;14915:23;14911:32;14908:119;;;14946:79;;:::i;:::-;14908:119;15066:1;15091:53;15136:7;15127:6;15116:9;15112:22;15091:53;:::i;:::-;15081:63;;15037:117;14832:329;;;;:::o;15167:118::-;15254:24;15272:5;15254:24;:::i;:::-;15249:3;15242:37;15167:118;;:::o;15291:222::-;15384:4;15422:2;15411:9;15407:18;15399:26;;15435:71;15503:1;15492:9;15488:17;15479:6;15435:71;:::i;:::-;15291:222;;;;:::o;15519:474::-;15587:6;15595;15644:2;15632:9;15623:7;15619:23;15615:32;15612:119;;;15650:79;;:::i;:::-;15612:119;15770:1;15795:53;15840:7;15831:6;15820:9;15816:22;15795:53;:::i;:::-;15785:63;;15741:117;15897:2;15923:53;15968:7;15959:6;15948:9;15944:22;15923:53;:::i;:::-;15913:63;;15868:118;15519:474;;;;;:::o;15999:1089::-;16103:6;16111;16119;16127;16135;16184:3;16172:9;16163:7;16159:23;16155:33;16152:120;;;16191:79;;:::i;:::-;16152:120;16311:1;16336:53;16381:7;16372:6;16361:9;16357:22;16336:53;:::i;:::-;16326:63;;16282:117;16438:2;16464:53;16509:7;16500:6;16489:9;16485:22;16464:53;:::i;:::-;16454:63;;16409:118;16566:2;16592:53;16637:7;16628:6;16617:9;16613:22;16592:53;:::i;:::-;16582:63;;16537:118;16694:2;16720:53;16765:7;16756:6;16745:9;16741:22;16720:53;:::i;:::-;16710:63;;16665:118;16850:3;16839:9;16835:19;16822:33;16882:18;16874:6;16871:30;16868:117;;;16904:79;;:::i;:::-;16868:117;17009:62;17063:7;17054:6;17043:9;17039:22;17009:62;:::i;:::-;16999:72;;16793:288;15999:1089;;;;;;;;:::o;17094:239::-;17234:34;17230:1;17222:6;17218:14;17211:58;17303:22;17298:2;17290:6;17286:15;17279:47;17094:239;:::o;17339:366::-;17481:3;17502:67;17566:2;17561:3;17502:67;:::i;:::-;17495:74;;17578:93;17667:3;17578:93;:::i;:::-;17696:2;17691:3;17687:12;17680:19;;17339:366;;;:::o;17711:419::-;17877:4;17915:2;17904:9;17900:18;17892:26;;17964:9;17958:4;17954:20;17950:1;17939:9;17935:17;17928:47;17992:131;18118:4;17992:131;:::i;:::-;17984:139;;17711:419;;;:::o;18136:230::-;18276:34;18272:1;18264:6;18260:14;18253:58;18345:13;18340:2;18332:6;18328:15;18321:38;18136:230;:::o;18372:366::-;18514:3;18535:67;18599:2;18594:3;18535:67;:::i;:::-;18528:74;;18611:93;18700:3;18611:93;:::i;:::-;18729:2;18724:3;18720:12;18713:19;;18372:366;;;:::o;18744:419::-;18910:4;18948:2;18937:9;18933:18;18925:26;;18997:9;18991:4;18987:20;18983:1;18972:9;18968:17;18961:47;19025:131;19151:4;19025:131;:::i;:::-;19017:139;;18744:419;;;:::o;19169:180::-;19217:77;19214:1;19207:88;19314:4;19311:1;19304:15;19338:4;19335:1;19328:15;19355:320;19399:6;19436:1;19430:4;19426:12;19416:22;;19483:1;19477:4;19473:12;19504:18;19494:81;;19560:4;19552:6;19548:17;19538:27;;19494:81;19622:2;19614:6;19611:14;19591:18;19588:38;19585:84;;19641:18;;:::i;:::-;19585:84;19406:269;19355:320;;;:::o;19681:227::-;19821:34;19817:1;19809:6;19805:14;19798:58;19890:10;19885:2;19877:6;19873:15;19866:35;19681:227;:::o;19914:366::-;20056:3;20077:67;20141:2;20136:3;20077:67;:::i;:::-;20070:74;;20153:93;20242:3;20153:93;:::i;:::-;20271:2;20266:3;20262:12;20255:19;;19914:366;;;:::o;20286:419::-;20452:4;20490:2;20479:9;20475:18;20467:26;;20539:9;20533:4;20529:20;20525:1;20514:9;20510:17;20503:47;20567:131;20693:4;20567:131;:::i;:::-;20559:139;;20286:419;;;:::o;20711:224::-;20851:34;20847:1;20839:6;20835:14;20828:58;20920:7;20915:2;20907:6;20903:15;20896:32;20711:224;:::o;20941:366::-;21083:3;21104:67;21168:2;21163:3;21104:67;:::i;:::-;21097:74;;21180:93;21269:3;21180:93;:::i;:::-;21298:2;21293:3;21289:12;21282:19;;20941:366;;;:::o;21313:419::-;21479:4;21517:2;21506:9;21502:18;21494:26;;21566:9;21560:4;21556:20;21552:1;21541:9;21537:17;21530:47;21594:131;21720:4;21594:131;:::i;:::-;21586:139;;21313:419;;;:::o;21738:237::-;21878:34;21874:1;21866:6;21862:14;21855:58;21947:20;21942:2;21934:6;21930:15;21923:45;21738:237;:::o;21981:366::-;22123:3;22144:67;22208:2;22203:3;22144:67;:::i;:::-;22137:74;;22220:93;22309:3;22220:93;:::i;:::-;22338:2;22333:3;22329:12;22322:19;;21981:366;;;:::o;22353:419::-;22519:4;22557:2;22546:9;22542:18;22534:26;;22606:9;22600:4;22596:20;22592:1;22581:9;22577:17;22570:47;22634:131;22760:4;22634:131;:::i;:::-;22626:139;;22353:419;;;:::o;22778:180::-;22826:77;22823:1;22816:88;22923:4;22920:1;22913:15;22947:4;22944:1;22937:15;22964:180;23012:77;23009:1;23002:88;23109:4;23106:1;23099:15;23133:4;23130:1;23123:15;23150:233;23189:3;23212:24;23230:5;23212:24;:::i;:::-;23203:33;;23258:66;23251:5;23248:77;23245:103;;23328:18;;:::i;:::-;23245:103;23375:1;23368:5;23364:13;23357:20;;23150:233;;;:::o;23389:634::-;23610:4;23648:2;23637:9;23633:18;23625:26;;23697:9;23691:4;23687:20;23683:1;23672:9;23668:17;23661:47;23725:108;23828:4;23819:6;23725:108;:::i;:::-;23717:116;;23880:9;23874:4;23870:20;23865:2;23854:9;23850:18;23843:48;23908:108;24011:4;24002:6;23908:108;:::i;:::-;23900:116;;23389:634;;;;;:::o;24029:228::-;24169:34;24165:1;24157:6;24153:14;24146:58;24238:11;24233:2;24225:6;24221:15;24214:36;24029:228;:::o;24263:366::-;24405:3;24426:67;24490:2;24485:3;24426:67;:::i;:::-;24419:74;;24502:93;24591:3;24502:93;:::i;:::-;24620:2;24615:3;24611:12;24604:19;;24263:366;;;:::o;24635:419::-;24801:4;24839:2;24828:9;24824:18;24816:26;;24888:9;24882:4;24878:20;24874:1;24863:9;24859:17;24852:47;24916:131;25042:4;24916:131;:::i;:::-;24908:139;;24635:419;;;:::o;25060:236::-;25200:34;25196:1;25188:6;25184:14;25177:58;25269:19;25264:2;25256:6;25252:15;25245:44;25060:236;:::o;25302:366::-;25444:3;25465:67;25529:2;25524:3;25465:67;:::i;:::-;25458:74;;25541:93;25630:3;25541:93;:::i;:::-;25659:2;25654:3;25650:12;25643:19;;25302:366;;;:::o;25674:419::-;25840:4;25878:2;25867:9;25863:18;25855:26;;25927:9;25921:4;25917:20;25913:1;25902:9;25898:17;25891:47;25955:131;26081:4;25955:131;:::i;:::-;25947:139;;25674:419;;;:::o;26099:228::-;26239:34;26235:1;26227:6;26223:14;26216:58;26308:11;26303:2;26295:6;26291:15;26284:36;26099:228;:::o;26333:366::-;26475:3;26496:67;26560:2;26555:3;26496:67;:::i;:::-;26489:74;;26572:93;26661:3;26572:93;:::i;:::-;26690:2;26685:3;26681:12;26674:19;;26333:366;;;:::o;26705:419::-;26871:4;26909:2;26898:9;26894:18;26886:26;;26958:9;26952:4;26948:20;26944:1;26933:9;26929:17;26922:47;26986:131;27112:4;26986:131;:::i;:::-;26978:139;;26705:419;;;:::o;27130:235::-;27270:34;27266:1;27258:6;27254:14;27247:58;27339:18;27334:2;27326:6;27322:15;27315:43;27130:235;:::o;27371:366::-;27513:3;27534:67;27598:2;27593:3;27534:67;:::i;:::-;27527:74;;27610:93;27699:3;27610:93;:::i;:::-;27728:2;27723:3;27719:12;27712:19;;27371:366;;;:::o;27743:419::-;27909:4;27947:2;27936:9;27932:18;27924:26;;27996:9;27990:4;27986:20;27982:1;27971:9;27967:17;27960:47;28024:131;28150:4;28024:131;:::i;:::-;28016:139;;27743:419;;;:::o;28168:148::-;28270:11;28307:3;28292:18;;28168:148;;;;:::o;28322:390::-;28428:3;28456:39;28489:5;28456:39;:::i;:::-;28511:89;28593:6;28588:3;28511:89;:::i;:::-;28504:96;;28609:65;28667:6;28662:3;28655:4;28648:5;28644:16;28609:65;:::i;:::-;28699:6;28694:3;28690:16;28683:23;;28432:280;28322:390;;;;:::o;28718:435::-;28898:3;28920:95;29011:3;29002:6;28920:95;:::i;:::-;28913:102;;29032:95;29123:3;29114:6;29032:95;:::i;:::-;29025:102;;29144:3;29137:10;;28718:435;;;;;:::o;29159:228::-;29299:34;29295:1;29287:6;29283:14;29276:58;29368:11;29363:2;29355:6;29351:15;29344:36;29159:228;:::o;29393:366::-;29535:3;29556:67;29620:2;29615:3;29556:67;:::i;:::-;29549:74;;29632:93;29721:3;29632:93;:::i;:::-;29750:2;29745:3;29741:12;29734:19;;29393:366;;;:::o;29765:419::-;29931:4;29969:2;29958:9;29954:18;29946:26;;30018:9;30012:4;30008:20;30004:1;29993:9;29989:17;29982:47;30046:131;30172:4;30046:131;:::i;:::-;30038:139;;29765:419;;;:::o;30190:332::-;30311:4;30349:2;30338:9;30334:18;30326:26;;30362:71;30430:1;30419:9;30415:17;30406:6;30362:71;:::i;:::-;30443:72;30511:2;30500:9;30496:18;30487:6;30443:72;:::i;:::-;30190:332;;;;;:::o;30528:194::-;30568:4;30588:20;30606:1;30588:20;:::i;:::-;30583:25;;30622:20;30640:1;30622:20;:::i;:::-;30617:25;;30666:1;30663;30659:9;30651:17;;30690:1;30684:4;30681:11;30678:37;;;30695:18;;:::i;:::-;30678:37;30528:194;;;;:::o;30728:191::-;30768:3;30787:20;30805:1;30787:20;:::i;:::-;30782:25;;30821:20;30839:1;30821:20;:::i;:::-;30816:25;;30864:1;30861;30857:9;30850:16;;30885:3;30882:1;30879:10;30876:36;;;30892:18;;:::i;:::-;30876:36;30728:191;;;;:::o;30925:177::-;31065:29;31061:1;31053:6;31049:14;31042:53;30925:177;:::o;31108:366::-;31250:3;31271:67;31335:2;31330:3;31271:67;:::i;:::-;31264:74;;31347:93;31436:3;31347:93;:::i;:::-;31465:2;31460:3;31456:12;31449:19;;31108:366;;;:::o;31480:419::-;31646:4;31684:2;31673:9;31669:18;31661:26;;31733:9;31727:4;31723:20;31719:1;31708:9;31704:17;31697:47;31761:131;31887:4;31761:131;:::i;:::-;31753:139;;31480:419;;;:::o;31905:98::-;31956:6;31990:5;31984:12;31974:22;;31905:98;;;:::o;32009:168::-;32092:11;32126:6;32121:3;32114:19;32166:4;32161:3;32157:14;32142:29;;32009:168;;;;:::o;32183:373::-;32269:3;32297:38;32329:5;32297:38;:::i;:::-;32351:70;32414:6;32409:3;32351:70;:::i;:::-;32344:77;;32430:65;32488:6;32483:3;32476:4;32469:5;32465:16;32430:65;:::i;:::-;32520:29;32542:6;32520:29;:::i;:::-;32515:3;32511:39;32504:46;;32273:283;32183:373;;;;:::o;32562:1053::-;32885:4;32923:3;32912:9;32908:19;32900:27;;32937:71;33005:1;32994:9;32990:17;32981:6;32937:71;:::i;:::-;33018:72;33086:2;33075:9;33071:18;33062:6;33018:72;:::i;:::-;33137:9;33131:4;33127:20;33122:2;33111:9;33107:18;33100:48;33165:108;33268:4;33259:6;33165:108;:::i;:::-;33157:116;;33320:9;33314:4;33310:20;33305:2;33294:9;33290:18;33283:48;33348:108;33451:4;33442:6;33348:108;:::i;:::-;33340:116;;33504:9;33498:4;33494:20;33488:3;33477:9;33473:19;33466:49;33532:76;33603:4;33594:6;33532:76;:::i;:::-;33524:84;;32562:1053;;;;;;;;:::o;33621:141::-;33677:5;33708:6;33702:13;33693:22;;33724:32;33750:5;33724:32;:::i;:::-;33621:141;;;;:::o;33768:349::-;33837:6;33886:2;33874:9;33865:7;33861:23;33857:32;33854:119;;;33892:79;;:::i;:::-;33854:119;34012:1;34037:63;34092:7;34083:6;34072:9;34068:22;34037:63;:::i;:::-;34027:73;;33983:127;33768:349;;;;:::o;34123:106::-;34167:8;34216:5;34211:3;34207:15;34186:36;;34123:106;;;:::o;34235:183::-;34270:3;34308:1;34290:16;34287:23;34284:128;;;34346:1;34343;34340;34325:23;34368:34;34399:1;34393:8;34368:34;:::i;:::-;34361:41;;34284:128;34235:183;:::o;34424:711::-;34463:3;34501:4;34483:16;34480:26;34509:5;34477:39;34538:20;;:::i;:::-;34613:1;34595:16;34591:24;34588:1;34582:4;34567:49;34646:4;34640:11;34745:16;34738:4;34730:6;34726:17;34723:39;34690:18;34682:6;34679:30;34663:113;34660:146;;;34791:5;;;;34660:146;34837:6;34831:4;34827:17;34873:3;34867:10;34900:18;34892:6;34889:30;34886:43;;;34922:5;;;;;;34886:43;34970:6;34963:4;34958:3;34954:14;34950:27;35029:1;35011:16;35007:24;35001:4;34997:35;34992:3;34989:44;34986:57;;;35036:5;;;;;;;34986:57;35053;35101:6;35095:4;35091:17;35083:6;35079:30;35073:4;35053:57;:::i;:::-;35126:3;35119:10;;34467:668;;;;;34424:711;;:::o;35141:239::-;35281:34;35277:1;35269:6;35265:14;35258:58;35350:22;35345:2;35337:6;35333:15;35326:47;35141:239;:::o;35386:366::-;35528:3;35549:67;35613:2;35608:3;35549:67;:::i;:::-;35542:74;;35625:93;35714:3;35625:93;:::i;:::-;35743:2;35738:3;35734:12;35727:19;;35386:366;;;:::o;35758:419::-;35924:4;35962:2;35951:9;35947:18;35939:26;;36011:9;36005:4;36001:20;35997:1;35986:9;35982:17;35975:47;36039:131;36165:4;36039:131;:::i;:::-;36031:139;;35758:419;;;:::o;36183:227::-;36323:34;36319:1;36311:6;36307:14;36300:58;36392:10;36387:2;36379:6;36375:15;36368:35;36183:227;:::o;36416:366::-;36558:3;36579:67;36643:2;36638:3;36579:67;:::i;:::-;36572:74;;36655:93;36744:3;36655:93;:::i;:::-;36773:2;36768:3;36764:12;36757:19;;36416:366;;;:::o;36788:419::-;36954:4;36992:2;36981:9;36977:18;36969:26;;37041:9;37035:4;37031:20;37027:1;37016:9;37012:17;37005:47;37069:131;37195:4;37069:131;:::i;:::-;37061:139;;36788:419;;;:::o;37213:180::-;37261:77;37258:1;37251:88;37358:4;37355:1;37348:15;37382:4;37379:1;37372:15;37399:185;37439:1;37456:20;37474:1;37456:20;:::i;:::-;37451:25;;37490:20;37508:1;37490:20;:::i;:::-;37485:25;;37529:1;37519:35;;37534:18;;:::i;:::-;37519:35;37576:1;37573;37569:9;37564:14;;37399:185;;;;:::o;37590:176::-;37622:1;37639:20;37657:1;37639:20;:::i;:::-;37634:25;;37673:20;37691:1;37673:20;:::i;:::-;37668:25;;37712:1;37702:35;;37717:18;;:::i;:::-;37702:35;37758:1;37755;37751:9;37746:14;;37590:176;;;;:::o;37772:751::-;37995:4;38033:3;38022:9;38018:19;38010:27;;38047:71;38115:1;38104:9;38100:17;38091:6;38047:71;:::i;:::-;38128:72;38196:2;38185:9;38181:18;38172:6;38128:72;:::i;:::-;38210;38278:2;38267:9;38263:18;38254:6;38210:72;:::i;:::-;38292;38360:2;38349:9;38345:18;38336:6;38292:72;:::i;:::-;38412:9;38406:4;38402:20;38396:3;38385:9;38381:19;38374:49;38440:76;38511:4;38502:6;38440:76;:::i;:::-;38432:84;;37772:751;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2464000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "infinite",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"getCreator(uint256)": "2909",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"royaltyFee(uint256)": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "2892",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"tokenURIPrefix()": "infinite",
								"totalSupply()": "2566"
							},
							"internal": {
								"_asSingletonArray(uint256)": "infinite",
								"_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "21",
								"_burn(address,uint256,uint256)": "infinite",
								"_burnBatch(address,uint256[] memory,uint256[] memory)": "infinite",
								"_doSafeBatchTransferAcceptanceCheck(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "infinite",
								"_mint(uint256,uint256,string memory,uint256)": "infinite",
								"_mintBatch(address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_setTokenURI(uint256,string memory)": "infinite",
								"_setTokenURIPrefix(string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 448,
									"end": 18073,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 448,
									"end": 18073,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 448,
									"end": 18073,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1023,
									"end": 1056,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1023,
									"end": 1056,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1023,
									"end": 1056,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1023,
									"end": 1056,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1023,
									"end": 1056,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1023,
									"end": 1056,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1023,
									"end": 1056,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1023,
									"end": 1056,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1023,
									"end": 1056,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1023,
									"end": 1056,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1023,
									"end": 1056,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1023,
									"end": 1056,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1023,
									"end": 1056,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1023,
									"end": 1056,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1023,
									"end": 1056,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1023,
									"end": 1056,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1023,
									"end": 1056,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1023,
									"end": 1056,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1023,
									"end": 1056,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1023,
									"end": 1056,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1023,
									"end": 1056,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1023,
									"end": 1056,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1023,
									"end": 1056,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1426,
									"end": 1662,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1426,
									"end": 1662,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1426,
									"end": 1662,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1426,
									"end": 1662,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1426,
									"end": 1662,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1426,
									"end": 1662,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1426,
									"end": 1662,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1426,
									"end": 1662,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1426,
									"end": 1662,
									"name": "tag",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1426,
									"end": 1662,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1426,
									"end": 1662,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1426,
									"end": 1662,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1426,
									"end": 1662,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1426,
									"end": 1662,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1426,
									"end": 1662,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1426,
									"end": 1662,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1426,
									"end": 1662,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1426,
									"end": 1662,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1426,
									"end": 1662,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1426,
									"end": 1662,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1426,
									"end": 1662,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1426,
									"end": 1662,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1426,
									"end": 1662,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1426,
									"end": 1662,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1426,
									"end": 1662,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1426,
									"end": 1662,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1426,
									"end": 1662,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1426,
									"end": 1662,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1426,
									"end": 1662,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1426,
									"end": 1662,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1426,
									"end": 1662,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1426,
									"end": 1662,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1426,
									"end": 1662,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1426,
									"end": 1662,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1426,
									"end": 1662,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 337,
									"end": 377,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 231,
									"end": 241,
									"name": "PUSH",
									"source": 3,
									"value": "1FFC9A7"
								},
								{
									"begin": 356,
									"end": 376,
									"name": "PUSH",
									"source": 3,
									"value": "E0"
								},
								{
									"begin": 356,
									"end": 376,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 337,
									"end": 355,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 337,
									"end": 355,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 337,
									"end": 355,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 337,
									"end": 377,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 337,
									"end": 377,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 337,
									"end": 377,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 337,
									"end": 377,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 337,
									"end": 377,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1502,
									"end": 1507,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1494,
									"end": 1499,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1494,
									"end": 1507,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1494,
									"end": 1507,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1494,
									"end": 1507,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1494,
									"end": 1507,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1494,
									"end": 1507,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1494,
									"end": 1507,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1494,
									"end": 1507,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1494,
									"end": 1507,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1494,
									"end": 1507,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1494,
									"end": 1507,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1528,
									"end": 1535,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1518,
									"end": 1525,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 1518,
									"end": 1535,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1518,
									"end": 1535,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1518,
									"end": 1535,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1518,
									"end": 1535,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1518,
									"end": 1535,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1518,
									"end": 1535,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1518,
									"end": 1535,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1518,
									"end": 1535,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1518,
									"end": 1535,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1518,
									"end": 1535,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1548,
									"end": 1589,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1327,
									"end": 1337,
									"name": "PUSH",
									"source": 0,
									"value": "D9B67A26"
								},
								{
									"begin": 1567,
									"end": 1588,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 1567,
									"end": 1588,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1548,
									"end": 1566,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1548,
									"end": 1566,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1548,
									"end": 1566,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1548,
									"end": 1589,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1548,
									"end": 1589,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1548,
									"end": 1589,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1548,
									"end": 1589,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1548,
									"end": 1589,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1600,
									"end": 1654,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1407,
									"end": 1417,
									"name": "PUSH",
									"source": 0,
									"value": "E89341C"
								},
								{
									"begin": 1619,
									"end": 1653,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 1619,
									"end": 1653,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1600,
									"end": 1618,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1600,
									"end": 1618,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1600,
									"end": 1618,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1600,
									"end": 1654,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1600,
									"end": 1654,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1600,
									"end": 1654,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1600,
									"end": 1654,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1600,
									"end": 1654,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1426,
									"end": 1662,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1426,
									"end": 1662,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 448,
									"end": 18073,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 448,
									"end": 18073,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 553,
									"end": 754,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 553,
									"end": 754,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 652,
									"end": 662,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFF"
								},
								{
									"begin": 637,
									"end": 662,
									"name": "PUSH",
									"source": 3,
									"value": "E0"
								},
								{
									"begin": 637,
									"end": 662,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 637,
									"end": 648,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 637,
									"end": 662,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 637,
									"end": 662,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 637,
									"end": 662,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 637,
									"end": 662,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 629,
									"end": 695,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 629,
									"end": 695,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 629,
									"end": 695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 629,
									"end": 695,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 629,
									"end": 695,
									"name": "PUSH",
									"source": 3,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 629,
									"end": 695,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 629,
									"end": 695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 629,
									"end": 695,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 629,
									"end": 695,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 629,
									"end": 695,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 629,
									"end": 695,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 629,
									"end": 695,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 629,
									"end": 695,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 629,
									"end": 695,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 629,
									"end": 695,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 629,
									"end": 695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 629,
									"end": 695,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 629,
									"end": 695,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 629,
									"end": 695,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 629,
									"end": 695,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 629,
									"end": 695,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 629,
									"end": 695,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 629,
									"end": 695,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 629,
									"end": 695,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 742,
									"end": 746,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 706,
									"end": 726,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 706,
									"end": 739,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 727,
									"end": 738,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 706,
									"end": 739,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 706,
									"end": 739,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 706,
									"end": 739,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 706,
									"end": 739,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 706,
									"end": 739,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 706,
									"end": 739,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 706,
									"end": 739,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 706,
									"end": 739,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 706,
									"end": 739,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 706,
									"end": 739,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 706,
									"end": 739,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 706,
									"end": 739,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 706,
									"end": 739,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 706,
									"end": 739,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 706,
									"end": 739,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 706,
									"end": 739,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 706,
									"end": 739,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 706,
									"end": 739,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 706,
									"end": 746,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 706,
									"end": 746,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 706,
									"end": 746,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 706,
									"end": 746,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 706,
									"end": 746,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 706,
									"end": 746,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 706,
									"end": 746,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 706,
									"end": 746,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 706,
									"end": 746,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 706,
									"end": 746,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 706,
									"end": 746,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 706,
									"end": 746,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 706,
									"end": 746,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 706,
									"end": 746,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 706,
									"end": 746,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 706,
									"end": 746,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 706,
									"end": 746,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 706,
									"end": 746,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 553,
									"end": 754,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 553,
									"end": 754,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "61"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 11,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 11,
									"value": "61"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "62"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "63"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 11,
									"value": "63"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 11,
									"value": "62"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 11
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "68"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 11,
									"value": "68"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "69"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 11,
									"value": "69"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "74"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "75"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 11,
									"value": "75"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 11,
									"value": "74"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "78"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 11,
									"value": "78"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "79"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 11,
									"value": "79"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 11,
									"value": "35"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "83"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 11,
									"value": "83"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 11,
									"value": "86"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "88"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "89"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "35"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 11,
									"value": "89"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "86"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 11,
									"value": "88"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "91"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "92"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 11,
									"value": "92"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "93"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 11,
									"value": "93"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "94"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 11,
									"value": "94"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "95"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "96"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 11,
									"value": "96"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 11,
									"value": "95"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 11,
									"value": "91"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 11,
									"value": "38"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 11,
									"value": "39"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "99"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "38"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 11,
									"value": "99"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "101"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "39"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 11,
									"value": "101"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "103"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 11,
									"value": "103"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "104"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "105"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 11,
									"value": "105"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 11,
									"value": "104"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "106"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 11,
									"value": "106"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "107"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 11,
									"value": "107"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "109"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "110"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 11,
									"value": "110"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "111"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 11,
									"value": "111"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "108"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 11,
									"value": "109"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "112"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 11,
									"value": "112"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 11,
									"value": "113"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "115"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "113"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 11,
									"value": "115"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "116"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "117"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "39"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 11,
									"value": "117"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 11,
									"value": "116"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 11,
									"value": "108"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5234,
									"end": 5309,
									"name": "tag",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 5234,
									"end": 5309,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5267,
									"end": 5273,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5300,
									"end": 5302,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 5294,
									"end": 5303,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 5284,
									"end": 5303,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5284,
									"end": 5303,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5234,
									"end": 5309,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5234,
									"end": 5309,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5315,
									"end": 5432,
									"name": "tag",
									"source": 11,
									"value": "42"
								},
								{
									"begin": 5315,
									"end": 5432,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5424,
									"end": 5425,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5421,
									"end": 5422,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 5414,
									"end": 5426,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 5438,
									"end": 5555,
									"name": "tag",
									"source": 11,
									"value": "43"
								},
								{
									"begin": 5438,
									"end": 5555,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5547,
									"end": 5548,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5544,
									"end": 5545,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 5537,
									"end": 5549,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 5561,
									"end": 5678,
									"name": "tag",
									"source": 11,
									"value": "44"
								},
								{
									"begin": 5561,
									"end": 5678,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5670,
									"end": 5671,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5667,
									"end": 5668,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 5660,
									"end": 5672,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 5684,
									"end": 5801,
									"name": "tag",
									"source": 11,
									"value": "45"
								},
								{
									"begin": 5684,
									"end": 5801,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5793,
									"end": 5794,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5790,
									"end": 5791,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 5783,
									"end": 5795,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 5807,
									"end": 5909,
									"name": "tag",
									"source": 11,
									"value": "46"
								},
								{
									"begin": 5807,
									"end": 5909,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5848,
									"end": 5854,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5899,
									"end": 5901,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 5895,
									"end": 5902,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 5890,
									"end": 5892,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 5883,
									"end": 5888,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 5879,
									"end": 5893,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5875,
									"end": 5903,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 5865,
									"end": 5903,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5865,
									"end": 5903,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5807,
									"end": 5909,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 5807,
									"end": 5909,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5807,
									"end": 5909,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5807,
									"end": 5909,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5915,
									"end": 6196,
									"name": "tag",
									"source": 11,
									"value": "47"
								},
								{
									"begin": 5915,
									"end": 6196,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5998,
									"end": 6025,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "125"
								},
								{
									"begin": 6020,
									"end": 6024,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5998,
									"end": 6025,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "46"
								},
								{
									"begin": 5998,
									"end": 6025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5998,
									"end": 6025,
									"name": "tag",
									"source": 11,
									"value": "125"
								},
								{
									"begin": 5998,
									"end": 6025,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5990,
									"end": 5996,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5986,
									"end": 6026,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 6128,
									"end": 6134,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 6116,
									"end": 6126,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 6113,
									"end": 6135,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 6092,
									"end": 6110,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6080,
									"end": 6090,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6077,
									"end": 6111,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 6074,
									"end": 6136,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 6071,
									"end": 6159,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 6071,
									"end": 6159,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "126"
								},
								{
									"begin": 6071,
									"end": 6159,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 6139,
									"end": 6157,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "127"
								},
								{
									"begin": 6139,
									"end": 6157,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 6139,
									"end": 6157,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6139,
									"end": 6157,
									"name": "tag",
									"source": 11,
									"value": "127"
								},
								{
									"begin": 6139,
									"end": 6157,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6071,
									"end": 6159,
									"name": "tag",
									"source": 11,
									"value": "126"
								},
								{
									"begin": 6071,
									"end": 6159,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6179,
									"end": 6189,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 6175,
									"end": 6177,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 6168,
									"end": 6190,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 5958,
									"end": 6196,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5915,
									"end": 6196,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5915,
									"end": 6196,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5915,
									"end": 6196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6202,
									"end": 6331,
									"name": "tag",
									"source": 11,
									"value": "48"
								},
								{
									"begin": 6202,
									"end": 6331,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6236,
									"end": 6242,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 6263,
									"end": 6283,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "129"
								},
								{
									"begin": 6263,
									"end": 6283,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 6263,
									"end": 6283,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6263,
									"end": 6283,
									"name": "tag",
									"source": 11,
									"value": "129"
								},
								{
									"begin": 6263,
									"end": 6283,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6253,
									"end": 6283,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 6253,
									"end": 6283,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6292,
									"end": 6325,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "130"
								},
								{
									"begin": 6320,
									"end": 6324,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6312,
									"end": 6318,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6292,
									"end": 6325,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "47"
								},
								{
									"begin": 6292,
									"end": 6325,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6292,
									"end": 6325,
									"name": "tag",
									"source": 11,
									"value": "130"
								},
								{
									"begin": 6292,
									"end": 6325,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6202,
									"end": 6331,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 6202,
									"end": 6331,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 6202,
									"end": 6331,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6202,
									"end": 6331,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6337,
									"end": 6645,
									"name": "tag",
									"source": 11,
									"value": "49"
								},
								{
									"begin": 6337,
									"end": 6645,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6399,
									"end": 6403,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 6489,
									"end": 6507,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6481,
									"end": 6487,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6478,
									"end": 6508,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 6475,
									"end": 6531,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 6475,
									"end": 6531,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "132"
								},
								{
									"begin": 6475,
									"end": 6531,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 6511,
									"end": 6529,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "133"
								},
								{
									"begin": 6511,
									"end": 6529,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 6511,
									"end": 6529,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6511,
									"end": 6529,
									"name": "tag",
									"source": 11,
									"value": "133"
								},
								{
									"begin": 6511,
									"end": 6529,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6475,
									"end": 6531,
									"name": "tag",
									"source": 11,
									"value": "132"
								},
								{
									"begin": 6475,
									"end": 6531,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6549,
									"end": 6578,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "134"
								},
								{
									"begin": 6571,
									"end": 6577,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6549,
									"end": 6578,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "46"
								},
								{
									"begin": 6549,
									"end": 6578,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6549,
									"end": 6578,
									"name": "tag",
									"source": 11,
									"value": "134"
								},
								{
									"begin": 6549,
									"end": 6578,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6541,
									"end": 6578,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 6541,
									"end": 6578,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6633,
									"end": 6637,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 6627,
									"end": 6631,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 6623,
									"end": 6638,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 6615,
									"end": 6638,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 6615,
									"end": 6638,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6337,
									"end": 6645,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 6337,
									"end": 6645,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 6337,
									"end": 6645,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6337,
									"end": 6645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6651,
									"end": 6897,
									"name": "tag",
									"source": 11,
									"value": "50"
								},
								{
									"begin": 6651,
									"end": 6897,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6732,
									"end": 6733,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 6742,
									"end": 6855,
									"name": "tag",
									"source": 11,
									"value": "136"
								},
								{
									"begin": 6742,
									"end": 6855,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6756,
									"end": 6762,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 6753,
									"end": 6754,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 6750,
									"end": 6763,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 6742,
									"end": 6855,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 6742,
									"end": 6855,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "138"
								},
								{
									"begin": 6742,
									"end": 6855,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 6841,
									"end": 6842,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 6836,
									"end": 6839,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6832,
									"end": 6843,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 6826,
									"end": 6844,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 6822,
									"end": 6823,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 6817,
									"end": 6820,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 6813,
									"end": 6824,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 6806,
									"end": 6845,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 6778,
									"end": 6780,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 6775,
									"end": 6776,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 6771,
									"end": 6781,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 6766,
									"end": 6781,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 6766,
									"end": 6781,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6742,
									"end": 6855,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "136"
								},
								{
									"begin": 6742,
									"end": 6855,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6742,
									"end": 6855,
									"name": "tag",
									"source": 11,
									"value": "138"
								},
								{
									"begin": 6742,
									"end": 6855,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6889,
									"end": 6890,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 6880,
									"end": 6886,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 6875,
									"end": 6878,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 6871,
									"end": 6887,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 6864,
									"end": 6891,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 6713,
									"end": 6897,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6651,
									"end": 6897,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6651,
									"end": 6897,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6651,
									"end": 6897,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6651,
									"end": 6897,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6903,
									"end": 7337,
									"name": "tag",
									"source": 11,
									"value": "51"
								},
								{
									"begin": 6903,
									"end": 7337,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6992,
									"end": 6997,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 7017,
									"end": 7083,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "140"
								},
								{
									"begin": 7033,
									"end": 7082,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "141"
								},
								{
									"begin": 7075,
									"end": 7081,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 7033,
									"end": 7082,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "49"
								},
								{
									"begin": 7033,
									"end": 7082,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7033,
									"end": 7082,
									"name": "tag",
									"source": 11,
									"value": "141"
								},
								{
									"begin": 7033,
									"end": 7082,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7017,
									"end": 7083,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "48"
								},
								{
									"begin": 7017,
									"end": 7083,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7017,
									"end": 7083,
									"name": "tag",
									"source": 11,
									"value": "140"
								},
								{
									"begin": 7017,
									"end": 7083,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7008,
									"end": 7083,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 7008,
									"end": 7083,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7106,
									"end": 7112,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7099,
									"end": 7104,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 7092,
									"end": 7113,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 7144,
									"end": 7148,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 7137,
									"end": 7142,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 7133,
									"end": 7149,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 7182,
									"end": 7185,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 7173,
									"end": 7179,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 7168,
									"end": 7171,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 7164,
									"end": 7180,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 7161,
									"end": 7186,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 7158,
									"end": 7270,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 7158,
									"end": 7270,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "142"
								},
								{
									"begin": 7158,
									"end": 7270,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 7189,
									"end": 7268,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "143"
								},
								{
									"begin": 7189,
									"end": 7268,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "45"
								},
								{
									"begin": 7189,
									"end": 7268,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7189,
									"end": 7268,
									"name": "tag",
									"source": 11,
									"value": "143"
								},
								{
									"begin": 7189,
									"end": 7268,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7158,
									"end": 7270,
									"name": "tag",
									"source": 11,
									"value": "142"
								},
								{
									"begin": 7158,
									"end": 7270,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7279,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "144"
								},
								{
									"begin": 7324,
									"end": 7330,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 7319,
									"end": 7322,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7314,
									"end": 7317,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 7279,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "50"
								},
								{
									"begin": 7279,
									"end": 7331,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7279,
									"end": 7331,
									"name": "tag",
									"source": 11,
									"value": "144"
								},
								{
									"begin": 7279,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6998,
									"end": 7337,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6903,
									"end": 7337,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 6903,
									"end": 7337,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 6903,
									"end": 7337,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6903,
									"end": 7337,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6903,
									"end": 7337,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6903,
									"end": 7337,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7357,
									"end": 7712,
									"name": "tag",
									"source": 11,
									"value": "52"
								},
								{
									"begin": 7357,
									"end": 7712,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7424,
									"end": 7429,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 7473,
									"end": 7476,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7466,
									"end": 7470,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 7458,
									"end": 7464,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 7454,
									"end": 7471,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 7450,
									"end": 7477,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 7440,
									"end": 7562,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "146"
								},
								{
									"begin": 7440,
									"end": 7562,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 7481,
									"end": 7560,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "147"
								},
								{
									"begin": 7481,
									"end": 7560,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "44"
								},
								{
									"begin": 7481,
									"end": 7560,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7481,
									"end": 7560,
									"name": "tag",
									"source": 11,
									"value": "147"
								},
								{
									"begin": 7481,
									"end": 7560,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7440,
									"end": 7562,
									"name": "tag",
									"source": 11,
									"value": "146"
								},
								{
									"begin": 7440,
									"end": 7562,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7591,
									"end": 7597,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 7585,
									"end": 7598,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 7616,
									"end": 7706,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "148"
								},
								{
									"begin": 7702,
									"end": 7705,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 7694,
									"end": 7700,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7687,
									"end": 7691,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 7679,
									"end": 7685,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 7675,
									"end": 7692,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 7616,
									"end": 7706,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "51"
								},
								{
									"begin": 7616,
									"end": 7706,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7616,
									"end": 7706,
									"name": "tag",
									"source": 11,
									"value": "148"
								},
								{
									"begin": 7616,
									"end": 7706,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7607,
									"end": 7706,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 7607,
									"end": 7706,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7430,
									"end": 7712,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7357,
									"end": 7712,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 7357,
									"end": 7712,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 7357,
									"end": 7712,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7357,
									"end": 7712,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7357,
									"end": 7712,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7718,
									"end": 8571,
									"name": "tag",
									"source": 11,
									"value": "5"
								},
								{
									"begin": 7718,
									"end": 8571,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7817,
									"end": 7823,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 7825,
									"end": 7831,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 7874,
									"end": 7876,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 7862,
									"end": 7871,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 7853,
									"end": 7860,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 7849,
									"end": 7872,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 7845,
									"end": 7877,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 7842,
									"end": 7961,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 7842,
									"end": 7961,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "150"
								},
								{
									"begin": 7842,
									"end": 7961,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 7880,
									"end": 7959,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "151"
								},
								{
									"begin": 7880,
									"end": 7959,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "42"
								},
								{
									"begin": 7880,
									"end": 7959,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7880,
									"end": 7959,
									"name": "tag",
									"source": 11,
									"value": "151"
								},
								{
									"begin": 7880,
									"end": 7959,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7842,
									"end": 7961,
									"name": "tag",
									"source": 11,
									"value": "150"
								},
								{
									"begin": 7842,
									"end": 7961,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8021,
									"end": 8022,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 8010,
									"end": 8019,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 8006,
									"end": 8023,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8000,
									"end": 8024,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 8051,
									"end": 8069,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8043,
									"end": 8049,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 8040,
									"end": 8070,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 8037,
									"end": 8154,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 8037,
									"end": 8154,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "152"
								},
								{
									"begin": 8037,
									"end": 8154,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 8073,
									"end": 8152,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "153"
								},
								{
									"begin": 8073,
									"end": 8152,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "43"
								},
								{
									"begin": 8073,
									"end": 8152,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8073,
									"end": 8152,
									"name": "tag",
									"source": 11,
									"value": "153"
								},
								{
									"begin": 8073,
									"end": 8152,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8037,
									"end": 8154,
									"name": "tag",
									"source": 11,
									"value": "152"
								},
								{
									"begin": 8037,
									"end": 8154,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8178,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "154"
								},
								{
									"begin": 8244,
									"end": 8251,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 8235,
									"end": 8241,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8224,
									"end": 8233,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 8220,
									"end": 8242,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8178,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "52"
								},
								{
									"begin": 8178,
									"end": 8252,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8178,
									"end": 8252,
									"name": "tag",
									"source": 11,
									"value": "154"
								},
								{
									"begin": 8178,
									"end": 8252,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8168,
									"end": 8252,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 8168,
									"end": 8252,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7971,
									"end": 8262,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8322,
									"end": 8324,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 8311,
									"end": 8320,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 8307,
									"end": 8325,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8301,
									"end": 8326,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 8353,
									"end": 8371,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8345,
									"end": 8351,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 8342,
									"end": 8372,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 8339,
									"end": 8456,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 8339,
									"end": 8456,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "155"
								},
								{
									"begin": 8339,
									"end": 8456,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 8375,
									"end": 8454,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "156"
								},
								{
									"begin": 8375,
									"end": 8454,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "43"
								},
								{
									"begin": 8375,
									"end": 8454,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8375,
									"end": 8454,
									"name": "tag",
									"source": 11,
									"value": "156"
								},
								{
									"begin": 8375,
									"end": 8454,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8339,
									"end": 8456,
									"name": "tag",
									"source": 11,
									"value": "155"
								},
								{
									"begin": 8339,
									"end": 8456,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8480,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "157"
								},
								{
									"begin": 8546,
									"end": 8553,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 8537,
									"end": 8543,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8526,
									"end": 8535,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 8522,
									"end": 8544,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8480,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "52"
								},
								{
									"begin": 8480,
									"end": 8554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8480,
									"end": 8554,
									"name": "tag",
									"source": 11,
									"value": "157"
								},
								{
									"begin": 8480,
									"end": 8554,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8470,
									"end": 8554,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 8470,
									"end": 8554,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8272,
									"end": 8564,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7718,
									"end": 8571,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 7718,
									"end": 8571,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7718,
									"end": 8571,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 7718,
									"end": 8571,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 7718,
									"end": 8571,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7718,
									"end": 8571,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8577,
									"end": 8746,
									"name": "tag",
									"source": 11,
									"value": "53"
								},
								{
									"begin": 8577,
									"end": 8746,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8661,
									"end": 8672,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 8695,
									"end": 8701,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8690,
									"end": 8693,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8683,
									"end": 8702,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 8735,
									"end": 8739,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 8730,
									"end": 8733,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8726,
									"end": 8740,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8711,
									"end": 8740,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 8711,
									"end": 8740,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8577,
									"end": 8746,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 8577,
									"end": 8746,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 8577,
									"end": 8746,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8577,
									"end": 8746,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8577,
									"end": 8746,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8752,
									"end": 8930,
									"name": "tag",
									"source": 11,
									"value": "54"
								},
								{
									"begin": 8752,
									"end": 8930,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8892,
									"end": 8922,
									"name": "PUSH",
									"source": 11,
									"value": "4552433136353A20696E76616C696420696E7465726661636520696400000000"
								},
								{
									"begin": 8888,
									"end": 8889,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 8880,
									"end": 8886,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8876,
									"end": 8890,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8869,
									"end": 8923,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 8752,
									"end": 8930,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8752,
									"end": 8930,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8936,
									"end": 9302,
									"name": "tag",
									"source": 11,
									"value": "55"
								},
								{
									"begin": 8936,
									"end": 9302,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 9078,
									"end": 9081,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 9099,
									"end": 9166,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "161"
								},
								{
									"begin": 9163,
									"end": 9165,
									"name": "PUSH",
									"source": 11,
									"value": "1C"
								},
								{
									"begin": 9158,
									"end": 9161,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 9099,
									"end": 9166,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "53"
								},
								{
									"begin": 9099,
									"end": 9166,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 9099,
									"end": 9166,
									"name": "tag",
									"source": 11,
									"value": "161"
								},
								{
									"begin": 9099,
									"end": 9166,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 9092,
									"end": 9166,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 9092,
									"end": 9166,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9175,
									"end": 9268,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "162"
								},
								{
									"begin": 9264,
									"end": 9267,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 9175,
									"end": 9268,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "54"
								},
								{
									"begin": 9175,
									"end": 9268,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 9175,
									"end": 9268,
									"name": "tag",
									"source": 11,
									"value": "162"
								},
								{
									"begin": 9175,
									"end": 9268,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 9293,
									"end": 9295,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 9288,
									"end": 9291,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 9284,
									"end": 9296,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 9277,
									"end": 9296,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 9277,
									"end": 9296,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8936,
									"end": 9302,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 8936,
									"end": 9302,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 8936,
									"end": 9302,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8936,
									"end": 9302,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 9308,
									"end": 9727,
									"name": "tag",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 9308,
									"end": 9727,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 9474,
									"end": 9478,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 9512,
									"end": 9514,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 9501,
									"end": 9510,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 9497,
									"end": 9515,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 9489,
									"end": 9515,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 9489,
									"end": 9515,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9561,
									"end": 9570,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 9555,
									"end": 9559,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 9551,
									"end": 9571,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 9547,
									"end": 9548,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 9536,
									"end": 9545,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 9532,
									"end": 9549,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 9525,
									"end": 9572,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 9589,
									"end": 9720,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "164"
								},
								{
									"begin": 9715,
									"end": 9719,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 9589,
									"end": 9720,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "55"
								},
								{
									"begin": 9589,
									"end": 9720,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 9589,
									"end": 9720,
									"name": "tag",
									"source": 11,
									"value": "164"
								},
								{
									"begin": 9589,
									"end": 9720,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 9581,
									"end": 9720,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 9581,
									"end": 9720,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9308,
									"end": 9727,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 9308,
									"end": 9727,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 9308,
									"end": 9727,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9308,
									"end": 9727,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 448,
									"end": 18073,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 448,
									"end": 18073,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 448,
									"end": 18073,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 448,
									"end": 18073,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 448,
									"end": 18073,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 448,
									"end": 18073,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 448,
									"end": 18073,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 448,
									"end": 18073,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 448,
									"end": 18073,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201b30d8156f8f5062a1139ebc7e396d5ba32d3e4e7d92653e250d50c2addc5ab964736f6c63430008110033",
									".code": [
										{
											"begin": 448,
											"end": 18073,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "PUSH",
											"source": 0,
											"value": "D48E638A"
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "PUSH",
											"source": 0,
											"value": "F242432A"
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "PUSH",
											"source": 0,
											"value": "C0AC9983"
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "PUSH",
											"source": 0,
											"value": "C57DC235"
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "PUSH",
											"source": 0,
											"value": "2EB2C2D6"
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "PUSH",
											"source": 0,
											"value": "4E1273F4"
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "PUSH",
											"source": 0,
											"value": "FDD58E"
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 18073,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4966,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4641,
											"end": 4966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4641,
											"end": 4966,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4641,
											"end": 4966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4966,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4966,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4641,
											"end": 4966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4641,
											"end": 4966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4966,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4641,
											"end": 4966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4641,
											"end": 4966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4966,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4641,
											"end": 4966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4641,
											"end": 4966,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4641,
											"end": 4966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 4641,
											"end": 4966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4966,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4641,
											"end": 4966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4641,
											"end": 4966,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4966,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4966,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 393,
											"end": 545,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 393,
											"end": 545,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 393,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 393,
											"end": 545,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 393,
											"end": 545,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 393,
											"end": 545,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 393,
											"end": 545,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 393,
											"end": 545,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 393,
											"end": 545,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 393,
											"end": 545,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 393,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 393,
											"end": 545,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 393,
											"end": 545,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 393,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 393,
											"end": 545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 393,
											"end": 545,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 393,
											"end": 545,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 393,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 393,
											"end": 545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 393,
											"end": 545,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 393,
											"end": 545,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 393,
											"end": 545,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 393,
											"end": 545,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 393,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 393,
											"end": 545,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 393,
											"end": 545,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 393,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 393,
											"end": 545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 393,
											"end": 545,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 393,
											"end": 545,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 393,
											"end": 545,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 393,
											"end": 545,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 393,
											"end": 545,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 393,
											"end": 545,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 393,
											"end": 545,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 393,
											"end": 545,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 393,
											"end": 545,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1670,
											"end": 1770,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1670,
											"end": 1770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1670,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1670,
											"end": 1770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1770,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1670,
											"end": 1770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1770,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1670,
											"end": 1770,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1670,
											"end": 1770,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1670,
											"end": 1770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1770,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1670,
											"end": 1770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1770,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1670,
											"end": 1770,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1770,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1770,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1770,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4235,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4122,
											"end": 4235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4122,
											"end": 4235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4122,
											"end": 4235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4235,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4122,
											"end": 4235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4235,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4122,
											"end": 4235,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 4122,
											"end": 4235,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 4122,
											"end": 4235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4235,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 4122,
											"end": 4235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4235,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4122,
											"end": 4235,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4235,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4235,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4235,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 12090,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 10810,
											"end": 12090,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 12090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 10810,
											"end": 12090,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10810,
											"end": 12090,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 12090,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 12090,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 12090,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 12090,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 12090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 12090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10810,
											"end": 12090,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 12090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 12090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 10810,
											"end": 12090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 12090,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10810,
											"end": 12090,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 12090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 10810,
											"end": 12090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 12090,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 10810,
											"end": 12090,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 12090,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5276,
											"end": 5910,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5276,
											"end": 5910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5276,
											"end": 5910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 5276,
											"end": 5910,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5276,
											"end": 5910,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5276,
											"end": 5910,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5276,
											"end": 5910,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5276,
											"end": 5910,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5276,
											"end": 5910,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5276,
											"end": 5910,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5276,
											"end": 5910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5276,
											"end": 5910,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5276,
											"end": 5910,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5276,
											"end": 5910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 5276,
											"end": 5910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5276,
											"end": 5910,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5276,
											"end": 5910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5276,
											"end": 5910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 5276,
											"end": 5910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5276,
											"end": 5910,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 5276,
											"end": 5910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5276,
											"end": 5910,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5276,
											"end": 5910,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5276,
											"end": 5910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 5276,
											"end": 5910,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5276,
											"end": 5910,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5276,
											"end": 5910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 5276,
											"end": 5910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5276,
											"end": 5910,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 5276,
											"end": 5910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5276,
											"end": 5910,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5276,
											"end": 5910,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5276,
											"end": 5910,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5276,
											"end": 5910,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5276,
											"end": 5910,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5276,
											"end": 5910,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5276,
											"end": 5910,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1778,
											"end": 1882,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1778,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1778,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1778,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1778,
											"end": 1882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1778,
											"end": 1882,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1778,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1778,
											"end": 1882,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1778,
											"end": 1882,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1778,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1778,
											"end": 1882,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1778,
											"end": 1882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1778,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1778,
											"end": 1882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1778,
											"end": 1882,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1778,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1778,
											"end": 1882,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1778,
											"end": 1882,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1778,
											"end": 1882,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1778,
											"end": 1882,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1778,
											"end": 1882,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1778,
											"end": 1882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1778,
											"end": 1882,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6583,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 6272,
											"end": 6583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 6272,
											"end": 6583,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6272,
											"end": 6583,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6583,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6583,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6583,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 6272,
											"end": 6583,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 6272,
											"end": 6583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6583,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 6272,
											"end": 6583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 6272,
											"end": 6583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6583,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 6272,
											"end": 6583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6583,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1023,
											"end": 1056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1023,
											"end": 1056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2436,
											"end": 2557,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2436,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2436,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2436,
											"end": 2557,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2436,
											"end": 2557,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2436,
											"end": 2557,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2436,
											"end": 2557,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2436,
											"end": 2557,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2436,
											"end": 2557,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2436,
											"end": 2557,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2436,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2436,
											"end": 2557,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2436,
											"end": 2557,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2436,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2436,
											"end": 2557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2436,
											"end": 2557,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2436,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2436,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2436,
											"end": 2557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2436,
											"end": 2557,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2436,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2436,
											"end": 2557,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2436,
											"end": 2557,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2436,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2436,
											"end": 2557,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2436,
											"end": 2557,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2436,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2436,
											"end": 2557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2436,
											"end": 2557,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2436,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2436,
											"end": 2557,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2436,
											"end": 2557,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2436,
											"end": 2557,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2436,
											"end": 2557,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2436,
											"end": 2557,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2436,
											"end": 2557,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2436,
											"end": 2557,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3425,
											"end": 3981,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3425,
											"end": 3981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3425,
											"end": 3981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3425,
											"end": 3981,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3425,
											"end": 3981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3425,
											"end": 3981,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3425,
											"end": 3981,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3425,
											"end": 3981,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3425,
											"end": 3981,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3425,
											"end": 3981,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3425,
											"end": 3981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 3425,
											"end": 3981,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3425,
											"end": 3981,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3425,
											"end": 3981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3425,
											"end": 3981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3425,
											"end": 3981,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 3425,
											"end": 3981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3425,
											"end": 3981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 3425,
											"end": 3981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3425,
											"end": 3981,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3425,
											"end": 3981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3425,
											"end": 3981,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3425,
											"end": 3981,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3425,
											"end": 3981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 3425,
											"end": 3981,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3425,
											"end": 3981,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3425,
											"end": 3981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3425,
											"end": 3981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3425,
											"end": 3981,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 3425,
											"end": 3981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3425,
											"end": 3981,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3425,
											"end": 3981,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3425,
											"end": 3981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3425,
											"end": 3981,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3425,
											"end": 3981,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3425,
											"end": 3981,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3425,
											"end": 3981,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2730,
											"end": 2856,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2730,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2730,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2730,
											"end": 2856,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2730,
											"end": 2856,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2730,
											"end": 2856,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2730,
											"end": 2856,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2730,
											"end": 2856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2730,
											"end": 2856,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2730,
											"end": 2856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2730,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2730,
											"end": 2856,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2730,
											"end": 2856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2730,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2730,
											"end": 2856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2730,
											"end": 2856,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2730,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2730,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2730,
											"end": 2856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2730,
											"end": 2856,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2730,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2730,
											"end": 2856,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2730,
											"end": 2856,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2730,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2730,
											"end": 2856,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2730,
											"end": 2856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2730,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2730,
											"end": 2856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2730,
											"end": 2856,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2730,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2730,
											"end": 2856,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2730,
											"end": 2856,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2730,
											"end": 2856,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2730,
											"end": 2856,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2730,
											"end": 2856,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2730,
											"end": 2856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2730,
											"end": 2856,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6872,
											"end": 7032,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6872,
											"end": 7032,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6872,
											"end": 7032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 6872,
											"end": 7032,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6872,
											"end": 7032,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6872,
											"end": 7032,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6872,
											"end": 7032,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6872,
											"end": 7032,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6872,
											"end": 7032,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6872,
											"end": 7032,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6872,
											"end": 7032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 6872,
											"end": 7032,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6872,
											"end": 7032,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6872,
											"end": 7032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 6872,
											"end": 7032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6872,
											"end": 7032,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 6872,
											"end": 7032,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6872,
											"end": 7032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 6872,
											"end": 7032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6872,
											"end": 7032,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 6872,
											"end": 7032,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6872,
											"end": 7032,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6872,
											"end": 7032,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6872,
											"end": 7032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 6872,
											"end": 7032,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6872,
											"end": 7032,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6872,
											"end": 7032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 6872,
											"end": 7032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6872,
											"end": 7032,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 6872,
											"end": 7032,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6872,
											"end": 7032,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6872,
											"end": 7032,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6872,
											"end": 7032,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6872,
											"end": 7032,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6872,
											"end": 7032,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6872,
											"end": 7032,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6872,
											"end": 7032,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8195,
											"end": 9159,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 8195,
											"end": 9159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8195,
											"end": 9159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 8195,
											"end": 9159,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8195,
											"end": 9159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8195,
											"end": 9159,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8195,
											"end": 9159,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8195,
											"end": 9159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8195,
											"end": 9159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8195,
											"end": 9159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8195,
											"end": 9159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 8195,
											"end": 9159,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8195,
											"end": 9159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8195,
											"end": 9159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8195,
											"end": 9159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8195,
											"end": 9159,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 8195,
											"end": 9159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8195,
											"end": 9159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 8195,
											"end": 9159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8195,
											"end": 9159,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 8195,
											"end": 9159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8195,
											"end": 9159,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4966,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4641,
											"end": 4966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 4731,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4752,
											"end": 4768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 4760,
											"end": 4767,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4752,
											"end": 4759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 4752,
											"end": 4768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4752,
											"end": 4768,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 4752,
											"end": 4768,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4744,
											"end": 4825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 4744,
											"end": 4825,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4744,
											"end": 4825,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4744,
											"end": 4825,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4744,
											"end": 4825,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4744,
											"end": 4825,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4744,
											"end": 4825,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4744,
											"end": 4825,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4744,
											"end": 4825,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4744,
											"end": 4825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 4744,
											"end": 4825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4744,
											"end": 4825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 4744,
											"end": 4825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4744,
											"end": 4825,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 4744,
											"end": 4825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4744,
											"end": 4825,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4744,
											"end": 4825,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4744,
											"end": 4825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4744,
											"end": 4825,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4744,
											"end": 4825,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4744,
											"end": 4825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4744,
											"end": 4825,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4744,
											"end": 4825,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 4744,
											"end": 4825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4863,
											"end": 4864,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4844,
											"end": 4865,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4844,
											"end": 4865,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4844,
											"end": 4851,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4844,
											"end": 4865,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4844,
											"end": 4865,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4844,
											"end": 4865,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4836,
											"end": 4913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 4836,
											"end": 4913,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4836,
											"end": 4913,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4836,
											"end": 4913,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4836,
											"end": 4913,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4836,
											"end": 4913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4836,
											"end": 4913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4836,
											"end": 4913,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4836,
											"end": 4913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4836,
											"end": 4913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 4836,
											"end": 4913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4836,
											"end": 4913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 4836,
											"end": 4913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4836,
											"end": 4913,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 4836,
											"end": 4913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4836,
											"end": 4913,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4836,
											"end": 4913,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4836,
											"end": 4913,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4836,
											"end": 4913,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4836,
											"end": 4913,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4836,
											"end": 4913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4836,
											"end": 4913,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4836,
											"end": 4913,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 4836,
											"end": 4913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4931,
											"end": 4940,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4931,
											"end": 4949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4931,
											"end": 4949,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4931,
											"end": 4949,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4931,
											"end": 4949,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4931,
											"end": 4949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4931,
											"end": 4949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4931,
											"end": 4949,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4931,
											"end": 4949,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4931,
											"end": 4949,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4931,
											"end": 4949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4931,
											"end": 4949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4931,
											"end": 4949,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4931,
											"end": 4958,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4950,
											"end": 4957,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4931,
											"end": 4958,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4931,
											"end": 4958,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4931,
											"end": 4958,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4931,
											"end": 4958,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4931,
											"end": 4958,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4931,
											"end": 4958,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4931,
											"end": 4958,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4931,
											"end": 4958,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4931,
											"end": 4958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4931,
											"end": 4958,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4931,
											"end": 4958,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4931,
											"end": 4958,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4931,
											"end": 4958,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4931,
											"end": 4958,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4931,
											"end": 4958,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4931,
											"end": 4958,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4924,
											"end": 4958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4924,
											"end": 4958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4966,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4966,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4966,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 393,
											"end": 545,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 393,
											"end": 545,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 480,
											"end": 484,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 504,
											"end": 524,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 504,
											"end": 537,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 536,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 504,
											"end": 537,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 504,
											"end": 537,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 504,
											"end": 537,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 504,
											"end": 537,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 504,
											"end": 537,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 504,
											"end": 537,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 504,
											"end": 537,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 504,
											"end": 537,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 504,
											"end": 537,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 504,
											"end": 537,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 504,
											"end": 537,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 504,
											"end": 537,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 504,
											"end": 537,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 504,
											"end": 537,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 504,
											"end": 537,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 504,
											"end": 537,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 504,
											"end": 537,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 504,
											"end": 537,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 504,
											"end": 537,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 504,
											"end": 537,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 504,
											"end": 537,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 504,
											"end": 537,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 504,
											"end": 537,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 504,
											"end": 537,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 504,
											"end": 537,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 504,
											"end": 537,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 504,
											"end": 537,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 497,
											"end": 537,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 497,
											"end": 537,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 393,
											"end": 545,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 393,
											"end": 545,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 393,
											"end": 545,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 393,
											"end": 545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1670,
											"end": 1770,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1670,
											"end": 1770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1724,
											"end": 1737,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1757,
											"end": 1762,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1750,
											"end": 1762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1750,
											"end": 1762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4235,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4122,
											"end": 4235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4176,
											"end": 4183,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4203,
											"end": 4224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4203,
											"end": 4215,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4203,
											"end": 4222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 4203,
											"end": 4224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4203,
											"end": 4224,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4203,
											"end": 4224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 4224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 4224,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 12090,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 10810,
											"end": 12090,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11085,
											"end": 11092,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11085,
											"end": 11099,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11066,
											"end": 11074,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11066,
											"end": 11081,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11066,
											"end": 11099,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 11058,
											"end": 11144,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11144,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11058,
											"end": 11144,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11144,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11058,
											"end": 11144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11144,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11144,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11058,
											"end": 11144,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 11058,
											"end": 11144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 11058,
											"end": 11144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11144,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 11058,
											"end": 11144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11144,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11058,
											"end": 11144,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11144,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11144,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11144,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11144,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11144,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 11058,
											"end": 11144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11177,
											"end": 11178,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11163,
											"end": 11179,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11163,
											"end": 11179,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11163,
											"end": 11165,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11163,
											"end": 11179,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11163,
											"end": 11179,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11163,
											"end": 11179,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11155,
											"end": 11221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 11155,
											"end": 11221,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11155,
											"end": 11221,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11155,
											"end": 11221,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11155,
											"end": 11221,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11155,
											"end": 11221,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11155,
											"end": 11221,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11155,
											"end": 11221,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11155,
											"end": 11221,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11155,
											"end": 11221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 11155,
											"end": 11221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11155,
											"end": 11221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 11155,
											"end": 11221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11155,
											"end": 11221,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 11155,
											"end": 11221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11155,
											"end": 11221,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11155,
											"end": 11221,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11155,
											"end": 11221,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11155,
											"end": 11221,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11155,
											"end": 11221,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11155,
											"end": 11221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11155,
											"end": 11221,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11155,
											"end": 11221,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 11155,
											"end": 11221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11262,
											"end": 11274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 11262,
											"end": 11272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 11262,
											"end": 11274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11262,
											"end": 11274,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 11262,
											"end": 11274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11254,
											"end": 11274,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11254,
											"end": 11274,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11254,
											"end": 11258,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11254,
											"end": 11274,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11254,
											"end": 11274,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11254,
											"end": 11274,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11254,
											"end": 11314,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11254,
											"end": 11314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 11254,
											"end": 11314,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11254,
											"end": 11314,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11278,
											"end": 11314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 11295,
											"end": 11299,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11301,
											"end": 11313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 11301,
											"end": 11311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 11301,
											"end": 11313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11301,
											"end": 11313,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 11301,
											"end": 11313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11278,
											"end": 11294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 11278,
											"end": 11314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11278,
											"end": 11314,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 11278,
											"end": 11314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11254,
											"end": 11314,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 11254,
											"end": 11314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11232,
											"end": 11392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 11232,
											"end": 11392,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11232,
											"end": 11392,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11232,
											"end": 11392,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11232,
											"end": 11392,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11232,
											"end": 11392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11232,
											"end": 11392,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11232,
											"end": 11392,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11232,
											"end": 11392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11232,
											"end": 11392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 11232,
											"end": 11392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11232,
											"end": 11392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 11232,
											"end": 11392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11232,
											"end": 11392,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 11232,
											"end": 11392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11232,
											"end": 11392,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11232,
											"end": 11392,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11232,
											"end": 11392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11232,
											"end": 11392,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11232,
											"end": 11392,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11232,
											"end": 11392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11232,
											"end": 11392,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11232,
											"end": 11392,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 11232,
											"end": 11392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11405,
											"end": 11421,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11424,
											"end": 11436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 11424,
											"end": 11434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 11424,
											"end": 11436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11424,
											"end": 11436,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 11424,
											"end": 11436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11405,
											"end": 11436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11405,
											"end": 11436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11449,
											"end": 11514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 11470,
											"end": 11478,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11480,
											"end": 11484,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11488,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 11490,
											"end": 11498,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 11500,
											"end": 11507,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 11509,
											"end": 11513,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 11449,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 11449,
											"end": 11514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11449,
											"end": 11514,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 11449,
											"end": 11514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11532,
											"end": 11541,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11527,
											"end": 11920,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 11527,
											"end": 11920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11551,
											"end": 11559,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11551,
											"end": 11566,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11547,
											"end": 11548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11547,
											"end": 11566,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11527,
											"end": 11920,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11527,
											"end": 11920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 11527,
											"end": 11920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11588,
											"end": 11603,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11606,
											"end": 11614,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11616,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11606,
											"end": 11617,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11606,
											"end": 11617,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11606,
											"end": 11617,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11606,
											"end": 11617,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11606,
											"end": 11617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 11606,
											"end": 11617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11606,
											"end": 11617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 11606,
											"end": 11617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 11606,
											"end": 11617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11606,
											"end": 11617,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 11606,
											"end": 11617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11606,
											"end": 11617,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 11606,
											"end": 11617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11606,
											"end": 11617,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11606,
											"end": 11617,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 11606,
											"end": 11617,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11606,
											"end": 11617,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11606,
											"end": 11617,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11606,
											"end": 11617,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11588,
											"end": 11617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11588,
											"end": 11617,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11632,
											"end": 11646,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11649,
											"end": 11656,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11657,
											"end": 11658,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11649,
											"end": 11659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11649,
											"end": 11659,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11649,
											"end": 11659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11649,
											"end": 11659,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11649,
											"end": 11659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 11649,
											"end": 11659,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11649,
											"end": 11659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 11649,
											"end": 11659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 11649,
											"end": 11659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11649,
											"end": 11659,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 11649,
											"end": 11659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11649,
											"end": 11659,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 11649,
											"end": 11659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11649,
											"end": 11659,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11649,
											"end": 11659,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 11649,
											"end": 11659,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11649,
											"end": 11659,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11649,
											"end": 11659,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11649,
											"end": 11659,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11632,
											"end": 11659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11632,
											"end": 11659,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11703,
											"end": 11834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 11750,
											"end": 11756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11703,
											"end": 11834,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11703,
											"end": 11834,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11703,
											"end": 11834,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11703,
											"end": 11834,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 11703,
											"end": 11834,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11703,
											"end": 11834,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11703,
											"end": 11834,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11703,
											"end": 11834,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11703,
											"end": 11834,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 11703,
											"end": 11834,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11703,
											"end": 11834,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11703,
											"end": 11834,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11703,
											"end": 11834,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11703,
											"end": 11834,
											"name": "PUSH data",
											"source": 0,
											"value": "8AC7E9556B567C1C94BB4DAAA3C3A65BE5AC686579615210CB910FB8CB8D65BF"
										},
										{
											"begin": 11703,
											"end": 11834,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 11703,
											"end": 11834,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11703,
											"end": 11834,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 11703,
											"end": 11712,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 11703,
											"end": 11721,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11713,
											"end": 11720,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11703,
											"end": 11721,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11703,
											"end": 11721,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11703,
											"end": 11721,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11703,
											"end": 11721,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11703,
											"end": 11721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11703,
											"end": 11721,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11703,
											"end": 11721,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11703,
											"end": 11721,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11703,
											"end": 11721,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11703,
											"end": 11721,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11703,
											"end": 11721,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11703,
											"end": 11727,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11722,
											"end": 11726,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 11703,
											"end": 11727,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11703,
											"end": 11727,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11703,
											"end": 11727,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11703,
											"end": 11727,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11703,
											"end": 11727,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11703,
											"end": 11727,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11703,
											"end": 11727,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11703,
											"end": 11727,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11703,
											"end": 11727,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11703,
											"end": 11727,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11703,
											"end": 11727,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11703,
											"end": 11727,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11703,
											"end": 11727,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11703,
											"end": 11727,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11703,
											"end": 11727,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11703,
											"end": 11727,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11703,
											"end": 11731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 11703,
											"end": 11731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11703,
											"end": 11834,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11703,
											"end": 11834,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11703,
											"end": 11834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11703,
											"end": 11834,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11703,
											"end": 11834,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11703,
											"end": 11834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11703,
											"end": 11834,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 11703,
											"end": 11834,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11676,
											"end": 11685,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 11676,
											"end": 11694,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11686,
											"end": 11693,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11676,
											"end": 11694,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11676,
											"end": 11694,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11676,
											"end": 11694,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11676,
											"end": 11694,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11676,
											"end": 11694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11676,
											"end": 11694,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11676,
											"end": 11694,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11676,
											"end": 11694,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11676,
											"end": 11694,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11676,
											"end": 11694,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11676,
											"end": 11694,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11676,
											"end": 11700,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11695,
											"end": 11699,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 11676,
											"end": 11700,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11676,
											"end": 11700,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11676,
											"end": 11700,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11676,
											"end": 11700,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11676,
											"end": 11700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11676,
											"end": 11700,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11676,
											"end": 11700,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11676,
											"end": 11700,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11676,
											"end": 11700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11676,
											"end": 11700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11676,
											"end": 11700,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11676,
											"end": 11700,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11676,
											"end": 11700,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11676,
											"end": 11700,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11676,
											"end": 11700,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11676,
											"end": 11834,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11676,
											"end": 11834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11676,
											"end": 11834,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11676,
											"end": 11834,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11874,
											"end": 11908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 11901,
											"end": 11907,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11874,
											"end": 11883,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 11874,
											"end": 11892,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11884,
											"end": 11891,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11874,
											"end": 11892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11874,
											"end": 11892,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11874,
											"end": 11892,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11874,
											"end": 11892,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11874,
											"end": 11892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11874,
											"end": 11892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11874,
											"end": 11892,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11874,
											"end": 11892,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11874,
											"end": 11892,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11874,
											"end": 11892,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11874,
											"end": 11892,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11874,
											"end": 11896,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11893,
											"end": 11895,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 11874,
											"end": 11896,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11874,
											"end": 11896,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11874,
											"end": 11896,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11874,
											"end": 11896,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11874,
											"end": 11896,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11874,
											"end": 11896,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11874,
											"end": 11896,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11874,
											"end": 11896,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11874,
											"end": 11896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11874,
											"end": 11896,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11874,
											"end": 11896,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11874,
											"end": 11896,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11874,
											"end": 11896,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11874,
											"end": 11896,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11874,
											"end": 11896,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11874,
											"end": 11896,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11874,
											"end": 11900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 11874,
											"end": 11900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11874,
											"end": 11908,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11874,
											"end": 11908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11874,
											"end": 11908,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11874,
											"end": 11908,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11874,
											"end": 11908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11874,
											"end": 11908,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 11874,
											"end": 11908,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11849,
											"end": 11858,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 11849,
											"end": 11867,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11859,
											"end": 11866,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11849,
											"end": 11867,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11849,
											"end": 11867,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11849,
											"end": 11867,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11849,
											"end": 11867,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11849,
											"end": 11867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11849,
											"end": 11867,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11849,
											"end": 11867,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11849,
											"end": 11867,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11849,
											"end": 11867,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11849,
											"end": 11867,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11849,
											"end": 11867,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11849,
											"end": 11871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11868,
											"end": 11870,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 11849,
											"end": 11871,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11849,
											"end": 11871,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11849,
											"end": 11871,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11849,
											"end": 11871,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11849,
											"end": 11871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11849,
											"end": 11871,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11849,
											"end": 11871,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11849,
											"end": 11871,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11849,
											"end": 11871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11849,
											"end": 11871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11849,
											"end": 11871,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11849,
											"end": 11871,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11849,
											"end": 11871,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11849,
											"end": 11871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11849,
											"end": 11871,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11849,
											"end": 11908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11849,
											"end": 11908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11849,
											"end": 11908,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11849,
											"end": 11908,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11573,
											"end": 11920,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11573,
											"end": 11920,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11568,
											"end": 11571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11568,
											"end": 11571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 11568,
											"end": 11571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11568,
											"end": 11571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 11568,
											"end": 11571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11568,
											"end": 11571,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 11568,
											"end": 11571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11568,
											"end": 11571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11568,
											"end": 11571,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11527,
											"end": 11920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 11527,
											"end": 11920,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11527,
											"end": 11920,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 11527,
											"end": 11920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11527,
											"end": 11920,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11967,
											"end": 11969,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11937,
											"end": 11989,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11937,
											"end": 11989,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11961,
											"end": 11965,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11937,
											"end": 11989,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11937,
											"end": 11989,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11951,
											"end": 11959,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11937,
											"end": 11989,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11937,
											"end": 11989,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11937,
											"end": 11989,
											"name": "PUSH",
											"source": 0,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 11971,
											"end": 11979,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 11981,
											"end": 11988,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 11937,
											"end": 11989,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11937,
											"end": 11989,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11937,
											"end": 11989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 11937,
											"end": 11989,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11937,
											"end": 11989,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11937,
											"end": 11989,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11937,
											"end": 11989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 11937,
											"end": 11989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11937,
											"end": 11989,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 11937,
											"end": 11989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11937,
											"end": 11989,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11937,
											"end": 11989,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11937,
											"end": 11989,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11937,
											"end": 11989,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11937,
											"end": 11989,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11937,
											"end": 11989,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11937,
											"end": 11989,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 12002,
											"end": 12082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 12038,
											"end": 12046,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12048,
											"end": 12052,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12054,
											"end": 12056,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12058,
											"end": 12066,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12068,
											"end": 12075,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12077,
											"end": 12081,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12002,
											"end": 12037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 12002,
											"end": 12082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12002,
											"end": 12082,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 12002,
											"end": 12082,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11047,
											"end": 12090,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 12090,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 12090,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 12090,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 12090,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 12090,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 12090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5276,
											"end": 5910,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 5276,
											"end": 5910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5440,
											"end": 5456,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5501,
											"end": 5504,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5501,
											"end": 5511,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5482,
											"end": 5490,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5482,
											"end": 5497,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5482,
											"end": 5511,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5474,
											"end": 5557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 5474,
											"end": 5557,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5474,
											"end": 5557,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5474,
											"end": 5557,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5474,
											"end": 5557,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5474,
											"end": 5557,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5474,
											"end": 5557,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5474,
											"end": 5557,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5474,
											"end": 5557,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5474,
											"end": 5557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 5474,
											"end": 5557,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5474,
											"end": 5557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 5474,
											"end": 5557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5474,
											"end": 5557,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 5474,
											"end": 5557,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5474,
											"end": 5557,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5474,
											"end": 5557,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5474,
											"end": 5557,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5474,
											"end": 5557,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5474,
											"end": 5557,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5474,
											"end": 5557,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5474,
											"end": 5557,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5474,
											"end": 5557,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 5474,
											"end": 5557,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5570,
											"end": 5600,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5617,
											"end": 5625,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5617,
											"end": 5632,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5603,
											"end": 5633,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5603,
											"end": 5633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5603,
											"end": 5633,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5603,
											"end": 5633,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5603,
											"end": 5633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 5603,
											"end": 5633,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5603,
											"end": 5633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 5603,
											"end": 5633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 5603,
											"end": 5633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5603,
											"end": 5633,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 5603,
											"end": 5633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5603,
											"end": 5633,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 5603,
											"end": 5633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5603,
											"end": 5633,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5603,
											"end": 5633,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5603,
											"end": 5633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5603,
											"end": 5633,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5603,
											"end": 5633,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5603,
											"end": 5633,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5603,
											"end": 5633,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5603,
											"end": 5633,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5603,
											"end": 5633,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5603,
											"end": 5633,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5603,
											"end": 5633,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5603,
											"end": 5633,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5603,
											"end": 5633,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5603,
											"end": 5633,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5603,
											"end": 5633,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5603,
											"end": 5633,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5603,
											"end": 5633,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5603,
											"end": 5633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 5603,
											"end": 5633,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5603,
											"end": 5633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5603,
											"end": 5633,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5603,
											"end": 5633,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5603,
											"end": 5633,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5603,
											"end": 5633,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5603,
											"end": 5633,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5603,
											"end": 5633,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5603,
											"end": 5633,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5603,
											"end": 5633,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5603,
											"end": 5633,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 5603,
											"end": 5633,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5603,
											"end": 5633,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5603,
											"end": 5633,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5603,
											"end": 5633,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5603,
											"end": 5633,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5603,
											"end": 5633,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5603,
											"end": 5633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5603,
											"end": 5633,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5603,
											"end": 5633,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 5603,
											"end": 5633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5603,
											"end": 5633,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5570,
											"end": 5633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5570,
											"end": 5633,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5651,
											"end": 5660,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5646,
											"end": 5870,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 5646,
											"end": 5870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5670,
											"end": 5678,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5670,
											"end": 5685,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5666,
											"end": 5667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5666,
											"end": 5685,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5646,
											"end": 5870,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5646,
											"end": 5870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 5646,
											"end": 5870,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5738,
											"end": 5739,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5715,
											"end": 5740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5715,
											"end": 5740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5715,
											"end": 5723,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5724,
											"end": 5725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5715,
											"end": 5726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5715,
											"end": 5726,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5715,
											"end": 5726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5715,
											"end": 5726,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5715,
											"end": 5726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 5715,
											"end": 5726,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5715,
											"end": 5726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 5715,
											"end": 5726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 5715,
											"end": 5726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5715,
											"end": 5726,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 5715,
											"end": 5726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5715,
											"end": 5726,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 5715,
											"end": 5726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5715,
											"end": 5726,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5715,
											"end": 5726,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5715,
											"end": 5726,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5715,
											"end": 5726,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5715,
											"end": 5726,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5715,
											"end": 5726,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5715,
											"end": 5740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5715,
											"end": 5740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5715,
											"end": 5740,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5707,
											"end": 5794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 5707,
											"end": 5794,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5707,
											"end": 5794,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5707,
											"end": 5794,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5707,
											"end": 5794,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5707,
											"end": 5794,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5707,
											"end": 5794,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5707,
											"end": 5794,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5707,
											"end": 5794,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5707,
											"end": 5794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 5707,
											"end": 5794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5707,
											"end": 5794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 5707,
											"end": 5794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5707,
											"end": 5794,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 5707,
											"end": 5794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5707,
											"end": 5794,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5707,
											"end": 5794,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5707,
											"end": 5794,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5707,
											"end": 5794,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5707,
											"end": 5794,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5707,
											"end": 5794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5707,
											"end": 5794,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5707,
											"end": 5794,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 5707,
											"end": 5794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5828,
											"end": 5837,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5828,
											"end": 5845,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5838,
											"end": 5841,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5842,
											"end": 5843,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5838,
											"end": 5844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5838,
											"end": 5844,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5838,
											"end": 5844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5838,
											"end": 5844,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5838,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 5838,
											"end": 5844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5838,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 5838,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 5838,
											"end": 5844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5838,
											"end": 5844,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 5838,
											"end": 5844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5838,
											"end": 5844,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 5838,
											"end": 5844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5838,
											"end": 5844,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5838,
											"end": 5844,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5838,
											"end": 5844,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5838,
											"end": 5844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5838,
											"end": 5844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5838,
											"end": 5844,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5828,
											"end": 5845,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5828,
											"end": 5845,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5828,
											"end": 5845,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5828,
											"end": 5845,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5828,
											"end": 5845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5828,
											"end": 5845,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5828,
											"end": 5845,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5828,
											"end": 5845,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5828,
											"end": 5845,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5828,
											"end": 5845,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5828,
											"end": 5845,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5828,
											"end": 5858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5846,
											"end": 5854,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5855,
											"end": 5856,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5846,
											"end": 5857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5846,
											"end": 5857,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5846,
											"end": 5857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5846,
											"end": 5857,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5846,
											"end": 5857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 5846,
											"end": 5857,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5846,
											"end": 5857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 5846,
											"end": 5857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 5846,
											"end": 5857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5846,
											"end": 5857,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 5846,
											"end": 5857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5846,
											"end": 5857,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 5846,
											"end": 5857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5846,
											"end": 5857,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5846,
											"end": 5857,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5846,
											"end": 5857,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5846,
											"end": 5857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5846,
											"end": 5857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5846,
											"end": 5857,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5828,
											"end": 5858,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5828,
											"end": 5858,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5828,
											"end": 5858,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5828,
											"end": 5858,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5828,
											"end": 5858,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5828,
											"end": 5858,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5828,
											"end": 5858,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5828,
											"end": 5858,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5828,
											"end": 5858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5828,
											"end": 5858,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5828,
											"end": 5858,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5828,
											"end": 5858,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5828,
											"end": 5858,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5828,
											"end": 5858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5828,
											"end": 5858,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5828,
											"end": 5858,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5809,
											"end": 5822,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5823,
											"end": 5824,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5809,
											"end": 5825,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5809,
											"end": 5825,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5809,
											"end": 5825,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5809,
											"end": 5825,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5809,
											"end": 5825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 5809,
											"end": 5825,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5809,
											"end": 5825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 5809,
											"end": 5825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 5809,
											"end": 5825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5809,
											"end": 5825,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 5809,
											"end": 5825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5809,
											"end": 5825,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 5809,
											"end": 5825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5809,
											"end": 5825,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5809,
											"end": 5825,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5809,
											"end": 5825,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5809,
											"end": 5825,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5809,
											"end": 5825,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5809,
											"end": 5858,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5809,
											"end": 5858,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5809,
											"end": 5858,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5809,
											"end": 5858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5809,
											"end": 5858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5687,
											"end": 5690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5687,
											"end": 5690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 5687,
											"end": 5690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5687,
											"end": 5690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 5687,
											"end": 5690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5687,
											"end": 5690,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 5687,
											"end": 5690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5687,
											"end": 5690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5687,
											"end": 5690,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5646,
											"end": 5870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 5646,
											"end": 5870,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5646,
											"end": 5870,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 5646,
											"end": 5870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5646,
											"end": 5870,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5889,
											"end": 5902,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5882,
											"end": 5902,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5882,
											"end": 5902,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5882,
											"end": 5902,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5276,
											"end": 5910,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5276,
											"end": 5910,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5276,
											"end": 5910,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5276,
											"end": 5910,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5276,
											"end": 5910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1778,
											"end": 1882,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1778,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1834,
											"end": 1847,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1867,
											"end": 1874,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1860,
											"end": 1874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1860,
											"end": 1874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1778,
											"end": 1882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1778,
											"end": 1882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6583,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 6272,
											"end": 6583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6391,
											"end": 6399,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6375,
											"end": 6399,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6375,
											"end": 6399,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6375,
											"end": 6387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 6375,
											"end": 6385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 6375,
											"end": 6387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6375,
											"end": 6387,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 6375,
											"end": 6387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6375,
											"end": 6399,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6375,
											"end": 6399,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6375,
											"end": 6399,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6367,
											"end": 6445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 6367,
											"end": 6445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6367,
											"end": 6445,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6445,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6367,
											"end": 6445,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6367,
											"end": 6445,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6367,
											"end": 6445,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6367,
											"end": 6445,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6367,
											"end": 6445,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6367,
											"end": 6445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 6367,
											"end": 6445,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6367,
											"end": 6445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 6367,
											"end": 6445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6367,
											"end": 6445,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 6367,
											"end": 6445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6367,
											"end": 6445,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6445,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6367,
											"end": 6445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6367,
											"end": 6445,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6367,
											"end": 6445,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6367,
											"end": 6445,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6367,
											"end": 6445,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6367,
											"end": 6445,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 6367,
											"end": 6445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6503,
											"end": 6511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6458,
											"end": 6476,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6458,
											"end": 6490,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6477,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 6477,
											"end": 6487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 6477,
											"end": 6489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6477,
											"end": 6489,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 6477,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6458,
											"end": 6490,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6458,
											"end": 6490,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6458,
											"end": 6490,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6458,
											"end": 6490,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6458,
											"end": 6490,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6458,
											"end": 6490,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6458,
											"end": 6490,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6458,
											"end": 6490,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6458,
											"end": 6490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6458,
											"end": 6490,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6458,
											"end": 6490,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6458,
											"end": 6490,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6458,
											"end": 6490,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6458,
											"end": 6490,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6458,
											"end": 6490,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6458,
											"end": 6500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6491,
											"end": 6499,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6458,
											"end": 6500,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6458,
											"end": 6500,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6458,
											"end": 6500,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6458,
											"end": 6500,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6458,
											"end": 6500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6458,
											"end": 6500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6458,
											"end": 6500,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6458,
											"end": 6500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6458,
											"end": 6500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6458,
											"end": 6500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6458,
											"end": 6500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6458,
											"end": 6500,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6458,
											"end": 6500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6458,
											"end": 6500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6458,
											"end": 6500,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6458,
											"end": 6500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6458,
											"end": 6511,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6458,
											"end": 6511,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6458,
											"end": 6511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6458,
											"end": 6511,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6458,
											"end": 6511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6458,
											"end": 6511,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6458,
											"end": 6511,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6458,
											"end": 6511,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6458,
											"end": 6511,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6458,
											"end": 6511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6458,
											"end": 6511,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6458,
											"end": 6511,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6458,
											"end": 6511,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6458,
											"end": 6511,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6458,
											"end": 6511,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6458,
											"end": 6511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6458,
											"end": 6511,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6458,
											"end": 6511,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6556,
											"end": 6564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6575,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6527,
											"end": 6575,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6542,
											"end": 6554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 6542,
											"end": 6552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 6542,
											"end": 6554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6542,
											"end": 6554,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 6542,
											"end": 6554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6575,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6527,
											"end": 6575,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6575,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6575,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6527,
											"end": 6575,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 6527,
											"end": 6575,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 6527,
											"end": 6575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6575,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 6527,
											"end": 6575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6575,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6527,
											"end": 6575,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6575,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6575,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6575,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6583,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6583,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1023,
											"end": 1056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1023,
											"end": 1056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2436,
											"end": 2557,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2436,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2502,
											"end": 2509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2529,
											"end": 2540,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2529,
											"end": 2549,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2548,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2549,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2549,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2549,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2529,
											"end": 2549,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2549,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2549,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2549,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2529,
											"end": 2549,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2549,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2529,
											"end": 2549,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2549,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2436,
											"end": 2557,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2436,
											"end": 2557,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2436,
											"end": 2557,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2436,
											"end": 2557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3425,
											"end": 3981,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 3425,
											"end": 3981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3498,
											"end": 3511,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3532,
											"end": 3548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 3540,
											"end": 3547,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3532,
											"end": 3539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3532,
											"end": 3548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3532,
											"end": 3548,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 3532,
											"end": 3548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 3524,
											"end": 3601,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3601,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3524,
											"end": 3601,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3601,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3524,
											"end": 3601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3601,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3601,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3524,
											"end": 3601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 3524,
											"end": 3601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 3524,
											"end": 3601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3601,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 3524,
											"end": 3601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3601,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3524,
											"end": 3601,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3601,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3601,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3601,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3601,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 3524,
											"end": 3601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3648,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3638,
											"end": 3657,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3649,
											"end": 3656,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3638,
											"end": 3657,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3638,
											"end": 3657,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3638,
											"end": 3657,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3657,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3638,
											"end": 3657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3638,
											"end": 3657,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3638,
											"end": 3657,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3638,
											"end": 3657,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3657,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3638,
											"end": 3657,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3657,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3612,
											"end": 3657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3612,
											"end": 3657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3686,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3689,
											"end": 3703,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3668,
											"end": 3703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3668,
											"end": 3703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3726,
											"end": 3730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3720,
											"end": 3738,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3720,
											"end": 3743,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 3716,
											"end": 3788,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3767,
											"end": 3776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3760,
											"end": 3776,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3760,
											"end": 3776,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3760,
											"end": 3776,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3760,
											"end": 3776,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3760,
											"end": 3776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 3760,
											"end": 3776,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 3788,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 3716,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3828,
											"end": 3829,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3808,
											"end": 3817,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3802,
											"end": 3825,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3802,
											"end": 3829,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3798,
											"end": 3906,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3798,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 3798,
											"end": 3906,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3883,
											"end": 3892,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3860,
											"end": 3893,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3860,
											"end": 3893,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3860,
											"end": 3893,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3860,
											"end": 3893,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3860,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 3860,
											"end": 3893,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3860,
											"end": 3893,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3860,
											"end": 3893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3860,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 3860,
											"end": 3893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3860,
											"end": 3893,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 3860,
											"end": 3893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3860,
											"end": 3893,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3860,
											"end": 3893,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3860,
											"end": 3893,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3860,
											"end": 3893,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3860,
											"end": 3893,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3860,
											"end": 3893,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3860,
											"end": 3893,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3860,
											"end": 3893,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3860,
											"end": 3893,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3860,
											"end": 3893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3860,
											"end": 3893,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3860,
											"end": 3893,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3846,
											"end": 3894,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3846,
											"end": 3894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3846,
											"end": 3894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3846,
											"end": 3894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3846,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 3846,
											"end": 3894,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3798,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 3798,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3947,
											"end": 3951,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3953,
											"end": 3971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 3953,
											"end": 3960,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3953,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 3953,
											"end": 3971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3953,
											"end": 3971,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 3953,
											"end": 3971,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 3972,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3930,
											"end": 3972,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 3972,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3930,
											"end": 3972,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 3972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 3930,
											"end": 3972,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 3972,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 3972,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 3972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 3930,
											"end": 3972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 3972,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 3930,
											"end": 3972,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 3972,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3930,
											"end": 3972,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 3972,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3930,
											"end": 3972,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 3972,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 3972,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 3972,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 3972,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 3972,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 3972,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 3972,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3930,
											"end": 3972,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3973,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3973,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3973,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3973,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3425,
											"end": 3981,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 3425,
											"end": 3981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3425,
											"end": 3981,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3425,
											"end": 3981,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3425,
											"end": 3981,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3425,
											"end": 3981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2730,
											"end": 2856,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2730,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2804,
											"end": 2811,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2831,
											"end": 2839,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2831,
											"end": 2848,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2840,
											"end": 2847,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2831,
											"end": 2848,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2831,
											"end": 2848,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2831,
											"end": 2848,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2831,
											"end": 2848,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2831,
											"end": 2848,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2831,
											"end": 2848,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2831,
											"end": 2848,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2831,
											"end": 2848,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2831,
											"end": 2848,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2831,
											"end": 2848,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2831,
											"end": 2848,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2831,
											"end": 2848,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2831,
											"end": 2848,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2831,
											"end": 2848,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2831,
											"end": 2848,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2831,
											"end": 2848,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2831,
											"end": 2848,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2831,
											"end": 2848,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2831,
											"end": 2848,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2831,
											"end": 2848,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2831,
											"end": 2848,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2824,
											"end": 2848,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2824,
											"end": 2848,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2730,
											"end": 2856,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2730,
											"end": 2856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2730,
											"end": 2856,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2730,
											"end": 2856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6872,
											"end": 7032,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 6872,
											"end": 7032,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6963,
											"end": 6967,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6987,
											"end": 7005,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6987,
											"end": 7014,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7006,
											"end": 7013,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6987,
											"end": 7014,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6987,
											"end": 7014,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6987,
											"end": 7014,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6987,
											"end": 7014,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6987,
											"end": 7014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6987,
											"end": 7014,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6987,
											"end": 7014,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6987,
											"end": 7014,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6987,
											"end": 7014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6987,
											"end": 7014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6987,
											"end": 7014,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6987,
											"end": 7014,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6987,
											"end": 7014,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6987,
											"end": 7014,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6987,
											"end": 7014,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6987,
											"end": 7024,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7015,
											"end": 7023,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6987,
											"end": 7024,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6987,
											"end": 7024,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6987,
											"end": 7024,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6987,
											"end": 7024,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6987,
											"end": 7024,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6987,
											"end": 7024,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6987,
											"end": 7024,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6987,
											"end": 7024,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6987,
											"end": 7024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6987,
											"end": 7024,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6987,
											"end": 7024,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6987,
											"end": 7024,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6987,
											"end": 7024,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6987,
											"end": 7024,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6987,
											"end": 7024,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6987,
											"end": 7024,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6987,
											"end": 7024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6987,
											"end": 7024,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6987,
											"end": 7024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6987,
											"end": 7024,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6987,
											"end": 7024,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6987,
											"end": 7024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6987,
											"end": 7024,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6987,
											"end": 7024,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6987,
											"end": 7024,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6980,
											"end": 7024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6980,
											"end": 7024,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6872,
											"end": 7032,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6872,
											"end": 7032,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6872,
											"end": 7032,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6872,
											"end": 7032,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6872,
											"end": 7032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8195,
											"end": 9159,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 8195,
											"end": 9159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8440,
											"end": 8441,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8426,
											"end": 8442,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8426,
											"end": 8442,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8426,
											"end": 8428,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8426,
											"end": 8442,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8426,
											"end": 8442,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8426,
											"end": 8442,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 8418,
											"end": 8484,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8418,
											"end": 8484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8484,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8418,
											"end": 8484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8484,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8418,
											"end": 8484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 8418,
											"end": 8484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 8418,
											"end": 8484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8484,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 8418,
											"end": 8484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8418,
											"end": 8484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8484,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8484,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8484,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8484,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 8418,
											"end": 8484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8525,
											"end": 8537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 8525,
											"end": 8535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 8525,
											"end": 8537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8525,
											"end": 8537,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 8525,
											"end": 8537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8517,
											"end": 8537,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8517,
											"end": 8537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8517,
											"end": 8521,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8517,
											"end": 8537,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8517,
											"end": 8537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8517,
											"end": 8537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8517,
											"end": 8577,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8517,
											"end": 8577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 8517,
											"end": 8577,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8517,
											"end": 8577,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8541,
											"end": 8577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 8558,
											"end": 8562,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8564,
											"end": 8576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 8564,
											"end": 8574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 8564,
											"end": 8576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8564,
											"end": 8576,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 8564,
											"end": 8576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8541,
											"end": 8557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 8541,
											"end": 8577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8541,
											"end": 8577,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 8541,
											"end": 8577,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8517,
											"end": 8577,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 8517,
											"end": 8577,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8495,
											"end": 8646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 8495,
											"end": 8646,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8495,
											"end": 8646,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8495,
											"end": 8646,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8495,
											"end": 8646,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8495,
											"end": 8646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8495,
											"end": 8646,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8495,
											"end": 8646,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8495,
											"end": 8646,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8495,
											"end": 8646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 8495,
											"end": 8646,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8495,
											"end": 8646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 8495,
											"end": 8646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8495,
											"end": 8646,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 8495,
											"end": 8646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8495,
											"end": 8646,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8495,
											"end": 8646,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8495,
											"end": 8646,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8495,
											"end": 8646,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8495,
											"end": 8646,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8495,
											"end": 8646,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8495,
											"end": 8646,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8495,
											"end": 8646,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 8495,
											"end": 8646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8659,
											"end": 8675,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8678,
											"end": 8690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 8678,
											"end": 8688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 8678,
											"end": 8690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8678,
											"end": 8690,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 8678,
											"end": 8690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8659,
											"end": 8690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8659,
											"end": 8690,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8703,
											"end": 8804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 8724,
											"end": 8732,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8734,
											"end": 8738,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8740,
											"end": 8742,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8744,
											"end": 8770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 8762,
											"end": 8769,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 8744,
											"end": 8761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 8744,
											"end": 8770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8744,
											"end": 8770,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 8744,
											"end": 8770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8772,
											"end": 8797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 8790,
											"end": 8796,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 8772,
											"end": 8789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 8772,
											"end": 8797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8772,
											"end": 8797,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 8772,
											"end": 8797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8799,
											"end": 8803,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8703,
											"end": 8723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 8703,
											"end": 8804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8703,
											"end": 8804,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 8703,
											"end": 8804,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8844,
											"end": 8926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 8873,
											"end": 8879,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8844,
											"end": 8926,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8844,
											"end": 8926,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8844,
											"end": 8926,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8844,
											"end": 8926,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8844,
											"end": 8926,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8844,
											"end": 8926,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8844,
											"end": 8926,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8844,
											"end": 8926,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8844,
											"end": 8926,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 8844,
											"end": 8926,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8844,
											"end": 8926,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8844,
											"end": 8926,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8844,
											"end": 8926,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8844,
											"end": 8926,
											"name": "PUSH data",
											"source": 0,
											"value": "8AC7E9556B567C1C94BB4DAAA3C3A65BE5AC686579615210CB910FB8CB8D65BF"
										},
										{
											"begin": 8844,
											"end": 8926,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 8844,
											"end": 8926,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8844,
											"end": 8926,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 8844,
											"end": 8853,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8844,
											"end": 8862,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8854,
											"end": 8861,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 8844,
											"end": 8862,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8844,
											"end": 8862,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8844,
											"end": 8862,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8844,
											"end": 8862,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8844,
											"end": 8862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8844,
											"end": 8862,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8844,
											"end": 8862,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8844,
											"end": 8862,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8844,
											"end": 8862,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8844,
											"end": 8862,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8844,
											"end": 8862,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8844,
											"end": 8868,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8863,
											"end": 8867,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 8844,
											"end": 8868,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8844,
											"end": 8868,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8844,
											"end": 8868,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8844,
											"end": 8868,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8844,
											"end": 8868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8844,
											"end": 8868,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8844,
											"end": 8868,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8844,
											"end": 8868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8844,
											"end": 8868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8844,
											"end": 8868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8844,
											"end": 8868,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8844,
											"end": 8868,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8844,
											"end": 8868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8844,
											"end": 8868,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8844,
											"end": 8868,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8844,
											"end": 8868,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8844,
											"end": 8872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 8844,
											"end": 8872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8844,
											"end": 8926,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8844,
											"end": 8926,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8844,
											"end": 8926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8844,
											"end": 8926,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8844,
											"end": 8926,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8844,
											"end": 8926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8844,
											"end": 8926,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 8844,
											"end": 8926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8817,
											"end": 8826,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8817,
											"end": 8835,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8827,
											"end": 8834,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8817,
											"end": 8835,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8817,
											"end": 8835,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8817,
											"end": 8835,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8817,
											"end": 8835,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8817,
											"end": 8835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8817,
											"end": 8835,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8817,
											"end": 8835,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8817,
											"end": 8835,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8817,
											"end": 8835,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8817,
											"end": 8835,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8817,
											"end": 8835,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8817,
											"end": 8841,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8836,
											"end": 8840,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 8817,
											"end": 8841,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8817,
											"end": 8841,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8817,
											"end": 8841,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8817,
											"end": 8841,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8817,
											"end": 8841,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8817,
											"end": 8841,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8817,
											"end": 8841,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8817,
											"end": 8841,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8817,
											"end": 8841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8817,
											"end": 8841,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8817,
											"end": 8841,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8817,
											"end": 8841,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8817,
											"end": 8841,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8817,
											"end": 8841,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8817,
											"end": 8841,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8817,
											"end": 8926,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8817,
											"end": 8926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8817,
											"end": 8926,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8817,
											"end": 8926,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8962,
											"end": 8996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 8989,
											"end": 8995,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8962,
											"end": 8971,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8962,
											"end": 8980,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8972,
											"end": 8979,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8962,
											"end": 8980,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8962,
											"end": 8980,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8962,
											"end": 8980,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8962,
											"end": 8980,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8962,
											"end": 8980,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8962,
											"end": 8980,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8962,
											"end": 8980,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8962,
											"end": 8980,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8962,
											"end": 8980,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8962,
											"end": 8980,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8962,
											"end": 8980,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8962,
											"end": 8984,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8981,
											"end": 8983,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 8962,
											"end": 8984,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8962,
											"end": 8984,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8962,
											"end": 8984,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8962,
											"end": 8984,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8962,
											"end": 8984,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8962,
											"end": 8984,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8962,
											"end": 8984,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8962,
											"end": 8984,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8962,
											"end": 8984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8962,
											"end": 8984,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8962,
											"end": 8984,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8962,
											"end": 8984,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8962,
											"end": 8984,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8962,
											"end": 8984,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8962,
											"end": 8984,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8962,
											"end": 8984,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8962,
											"end": 8988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 8962,
											"end": 8988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8962,
											"end": 8996,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8962,
											"end": 8996,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8962,
											"end": 8996,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8962,
											"end": 8996,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8962,
											"end": 8996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8962,
											"end": 8996,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 8962,
											"end": 8996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8937,
											"end": 8946,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8937,
											"end": 8955,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8947,
											"end": 8954,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8937,
											"end": 8955,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8937,
											"end": 8955,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8937,
											"end": 8955,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8937,
											"end": 8955,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8937,
											"end": 8955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8937,
											"end": 8955,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8937,
											"end": 8955,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8937,
											"end": 8955,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8937,
											"end": 8955,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8937,
											"end": 8955,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8937,
											"end": 8955,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8937,
											"end": 8959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8956,
											"end": 8958,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8937,
											"end": 8959,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8937,
											"end": 8959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8937,
											"end": 8959,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8937,
											"end": 8959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8937,
											"end": 8959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8937,
											"end": 8959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8937,
											"end": 8959,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8937,
											"end": 8959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8937,
											"end": 8959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8937,
											"end": 8959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8937,
											"end": 8959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8937,
											"end": 8959,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8937,
											"end": 8959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8937,
											"end": 8959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8937,
											"end": 8959,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8937,
											"end": 8996,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8937,
											"end": 8996,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8937,
											"end": 8996,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8937,
											"end": 8996,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9045,
											"end": 9047,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9014,
											"end": 9065,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9014,
											"end": 9065,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9039,
											"end": 9043,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9014,
											"end": 9065,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9014,
											"end": 9065,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9029,
											"end": 9037,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9014,
											"end": 9065,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9014,
											"end": 9065,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9014,
											"end": 9065,
											"name": "PUSH",
											"source": 0,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 9049,
											"end": 9056,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9064,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9014,
											"end": 9065,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9014,
											"end": 9065,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9014,
											"end": 9065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 9014,
											"end": 9065,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9014,
											"end": 9065,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9014,
											"end": 9065,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9014,
											"end": 9065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 9014,
											"end": 9065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9014,
											"end": 9065,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 9014,
											"end": 9065,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9014,
											"end": 9065,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9014,
											"end": 9065,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9014,
											"end": 9065,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9014,
											"end": 9065,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9014,
											"end": 9065,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9014,
											"end": 9065,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9014,
											"end": 9065,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 9078,
											"end": 9151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 9109,
											"end": 9117,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9119,
											"end": 9123,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9125,
											"end": 9127,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9129,
											"end": 9136,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9138,
											"end": 9144,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9146,
											"end": 9150,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9078,
											"end": 9108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 9078,
											"end": 9151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9078,
											"end": 9151,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 9078,
											"end": 9151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8407,
											"end": 9159,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8195,
											"end": 9159,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8195,
											"end": 9159,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8195,
											"end": 9159,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8195,
											"end": 9159,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8195,
											"end": 9159,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8195,
											"end": 9159,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3989,
											"end": 4116,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3989,
											"end": 4116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4054,
											"end": 4058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4078,
											"end": 4108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 4100,
											"end": 4107,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4078,
											"end": 4090,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4078,
											"end": 4099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 4078,
											"end": 4099,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4078,
											"end": 4108,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4078,
											"end": 4108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4078,
											"end": 4108,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4078,
											"end": 4108,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4078,
											"end": 4108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4078,
											"end": 4108,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 4078,
											"end": 4108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4071,
											"end": 4108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4071,
											"end": 4108,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3989,
											"end": 4116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3989,
											"end": 4116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3989,
											"end": 4116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3989,
											"end": 4116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2919,
											"end": 3042,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2919,
											"end": 3042,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3015,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 3023,
											"end": 3026,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3023,
											"end": 3033,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3023,
											"end": 3033,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3015,
											"end": 3022,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 3015,
											"end": 3034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3015,
											"end": 3034,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 3015,
											"end": 3034,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3034,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3034,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2919,
											"end": 3042,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2919,
											"end": 3042,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2919,
											"end": 3042,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2919,
											"end": 3042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 145,
											"end": 260,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 145,
											"end": 260,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 198,
											"end": 213,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 251,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 226,
											"end": 252,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 226,
											"end": 252,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 145,
											"end": 260,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 145,
											"end": 260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16026,
											"end": 16267,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 16026,
											"end": 16267,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16026,
											"end": 16267,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16026,
											"end": 16267,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16026,
											"end": 16267,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16026,
											"end": 16267,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16026,
											"end": 16267,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16026,
											"end": 16267,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16026,
											"end": 16267,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 754,
											"end": 946,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 754,
											"end": 946,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 840,
											"end": 847,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 873,
											"end": 874,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 868,
											"end": 869,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 868,
											"end": 874,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 868,
											"end": 874,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 876,
											"end": 888,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 860,
											"end": 889,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 860,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 860,
											"end": 889,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 860,
											"end": 889,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 860,
											"end": 889,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 860,
											"end": 889,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 860,
											"end": 889,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 860,
											"end": 889,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 860,
											"end": 889,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 860,
											"end": 889,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 860,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 860,
											"end": 889,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 860,
											"end": 889,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 860,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 860,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 860,
											"end": 889,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 860,
											"end": 889,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 860,
											"end": 889,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 860,
											"end": 889,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 860,
											"end": 889,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 860,
											"end": 889,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 860,
											"end": 889,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 860,
											"end": 889,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 860,
											"end": 889,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 860,
											"end": 889,
											"name": "tag",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 860,
											"end": 889,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 860,
											"end": 889,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 900,
											"end": 909,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 916,
											"end": 917,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 912,
											"end": 913,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 912,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 912,
											"end": 917,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 912,
											"end": 917,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 912,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 912,
											"end": 917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 912,
											"end": 917,
											"name": "tag",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 912,
											"end": 917,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 900,
											"end": 917,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 900,
											"end": 917,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 937,
											"end": 938,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 930,
											"end": 938,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 930,
											"end": 938,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 930,
											"end": 938,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 754,
											"end": 946,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 754,
											"end": 946,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 754,
											"end": 946,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 754,
											"end": 946,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 754,
											"end": 946,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 754,
											"end": 946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 302,
											"end": 483,
											"name": "tag",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 302,
											"end": 483,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 360,
											"end": 367,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 380,
											"end": 389,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 396,
											"end": 397,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 392,
											"end": 393,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 392,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 392,
											"end": 397,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 392,
											"end": 397,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 392,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 392,
											"end": 397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 392,
											"end": 397,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 392,
											"end": 397,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 380,
											"end": 397,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 380,
											"end": 397,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 421,
											"end": 422,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 416,
											"end": 417,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 416,
											"end": 422,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 416,
											"end": 422,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 408,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 408,
											"end": 454,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 408,
											"end": 454,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 408,
											"end": 454,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 408,
											"end": 454,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 408,
											"end": 454,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 408,
											"end": 454,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 408,
											"end": 454,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 408,
											"end": 454,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 408,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 408,
											"end": 454,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 408,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 408,
											"end": 454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 408,
											"end": 454,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 408,
											"end": 454,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 408,
											"end": 454,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 408,
											"end": 454,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 408,
											"end": 454,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 408,
											"end": 454,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 408,
											"end": 454,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 408,
											"end": 454,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 408,
											"end": 454,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 408,
											"end": 454,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 408,
											"end": 454,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 474,
											"end": 475,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 467,
											"end": 475,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 467,
											"end": 475,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 467,
											"end": 475,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 302,
											"end": 483,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 302,
											"end": 483,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 302,
											"end": 483,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 302,
											"end": 483,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 302,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17055,
											"end": 17864,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 17055,
											"end": 17864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17314,
											"end": 17329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 17314,
											"end": 17316,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17314,
											"end": 17327,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17314,
											"end": 17327,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17314,
											"end": 17327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 17314,
											"end": 17329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17314,
											"end": 17329,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 17314,
											"end": 17329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17310,
											"end": 17857,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17310,
											"end": 17857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 17310,
											"end": 17857,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17367,
											"end": 17369,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17350,
											"end": 17393,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17350,
											"end": 17393,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17350,
											"end": 17393,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C81"
										},
										{
											"begin": 17394,
											"end": 17402,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 17404,
											"end": 17408,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 17410,
											"end": 17418,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17420,
											"end": 17427,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17429,
											"end": 17433,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 17350,
											"end": 17434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 17350,
											"end": 17434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 17350,
											"end": 17434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17346,
											"end": 17846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 17346,
											"end": 17846,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17346,
											"end": 17846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 17346,
											"end": 17846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 17346,
											"end": 17846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17346,
											"end": 17846,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 17346,
											"end": 17846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17346,
											"end": 17846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17346,
											"end": 17846,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A0"
										},
										{
											"begin": 17346,
											"end": 17846,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17346,
											"end": 17846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 17346,
											"end": 17846,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17346,
											"end": 17846,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17346,
											"end": 17846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 17346,
											"end": 17846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 17346,
											"end": 17846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17346,
											"end": 17846,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 17346,
											"end": 17846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17346,
											"end": 17846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17346,
											"end": 17846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 17346,
											"end": 17846,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17346,
											"end": 17846,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17346,
											"end": 17846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 17346,
											"end": 17846,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17346,
											"end": 17846,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 17346,
											"end": 17846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17719,
											"end": 17725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17712,
											"end": 17726,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17712,
											"end": 17726,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17712,
											"end": 17726,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17712,
											"end": 17726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17712,
											"end": 17726,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17712,
											"end": 17726,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17712,
											"end": 17726,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17712,
											"end": 17726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 17712,
											"end": 17726,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17712,
											"end": 17726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17712,
											"end": 17726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 17712,
											"end": 17726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17712,
											"end": 17726,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 17712,
											"end": 17726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17712,
											"end": 17726,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17712,
											"end": 17726,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17712,
											"end": 17726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17712,
											"end": 17726,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17712,
											"end": 17726,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17712,
											"end": 17726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17712,
											"end": 17726,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17346,
											"end": 17846,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 17346,
											"end": 17846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17346,
											"end": 17846,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17346,
											"end": 17846,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 17346,
											"end": 17846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17768,
											"end": 17830,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17768,
											"end": 17830,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17768,
											"end": 17830,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17768,
											"end": 17830,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17768,
											"end": 17830,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17768,
											"end": 17830,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17768,
											"end": 17830,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17768,
											"end": 17830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 17768,
											"end": 17830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17768,
											"end": 17830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 17768,
											"end": 17830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17768,
											"end": 17830,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 17768,
											"end": 17830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17768,
											"end": 17830,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17768,
											"end": 17830,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17768,
											"end": 17830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17768,
											"end": 17830,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17768,
											"end": 17830,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17768,
											"end": 17830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17768,
											"end": 17830,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17346,
											"end": 17846,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 17346,
											"end": 17846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17496,
											"end": 17548,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C81"
										},
										{
											"begin": 17496,
											"end": 17548,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 17496,
											"end": 17548,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 17484,
											"end": 17548,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17484,
											"end": 17548,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 17484,
											"end": 17548,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17484,
											"end": 17492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17484,
											"end": 17548,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17484,
											"end": 17548,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 17484,
											"end": 17548,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17484,
											"end": 17548,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17480,
											"end": 17643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 17480,
											"end": 17643,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17573,
											"end": 17623,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17573,
											"end": 17623,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17573,
											"end": 17623,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17573,
											"end": 17623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17573,
											"end": 17623,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17573,
											"end": 17623,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17573,
											"end": 17623,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17573,
											"end": 17623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 17573,
											"end": 17623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17573,
											"end": 17623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 17573,
											"end": 17623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17573,
											"end": 17623,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 17573,
											"end": 17623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17573,
											"end": 17623,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17573,
											"end": 17623,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17573,
											"end": 17623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17573,
											"end": 17623,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17573,
											"end": 17623,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17573,
											"end": 17623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17573,
											"end": 17623,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17480,
											"end": 17643,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 17480,
											"end": 17643,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17658,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17310,
											"end": 17857,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 17310,
											"end": 17857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17055,
											"end": 17864,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17055,
											"end": 17864,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17055,
											"end": 17864,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17055,
											"end": 17864,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17055,
											"end": 17864,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17055,
											"end": 17864,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17055,
											"end": 17864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 388,
											"end": 1111,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 388,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 444,
											"end": 457,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 674,
											"end": 675,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 670,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 665,
											"end": 675,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 661,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 661,
											"end": 714,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 692,
											"end": 702,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 692,
											"end": 702,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 692,
											"end": 702,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 692,
											"end": 702,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 692,
											"end": 702,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 692,
											"end": 702,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 692,
											"end": 702,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 692,
											"end": 702,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 692,
											"end": 702,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 692,
											"end": 702,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 692,
											"end": 702,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 692,
											"end": 702,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 692,
											"end": 702,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 692,
											"end": 702,
											"name": "PUSH",
											"source": 10,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 692,
											"end": 702,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 692,
											"end": 702,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 692,
											"end": 702,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 692,
											"end": 702,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 692,
											"end": 702,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 692,
											"end": 702,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 692,
											"end": 702,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 661,
											"end": 714,
											"name": "tag",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 661,
											"end": 714,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 724,
											"end": 736,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 739,
											"end": 744,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 724,
											"end": 744,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 724,
											"end": 744,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 755,
											"end": 769,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 858,
											"name": "tag",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 780,
											"end": 858,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 795,
											"end": 796,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 787,
											"end": 791,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 787,
											"end": 796,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 780,
											"end": 858,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 780,
											"end": 858,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 813,
											"end": 821,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 813,
											"end": 821,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 813,
											"end": 821,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 813,
											"end": 821,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 813,
											"end": 821,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 813,
											"end": 821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 813,
											"end": 821,
											"name": "tag",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 813,
											"end": 821,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 813,
											"end": 821,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 813,
											"end": 821,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 813,
											"end": 821,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 844,
											"end": 846,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 836,
											"end": 846,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 836,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 836,
											"end": 846,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 836,
											"end": 846,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 836,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 836,
											"end": 846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 836,
											"end": 846,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 836,
											"end": 846,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 836,
											"end": 846,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 836,
											"end": 846,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 780,
											"end": 858,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 780,
											"end": 858,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 780,
											"end": 858,
											"name": "tag",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 780,
											"end": 858,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 868,
											"end": 887,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 900,
											"end": 906,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 890,
											"end": 907,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 890,
											"end": 907,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 890,
											"end": 907,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 890,
											"end": 907,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 890,
											"end": 907,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 890,
											"end": 907,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 890,
											"end": 907,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 890,
											"end": 907,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 890,
											"end": 907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 890,
											"end": 907,
											"name": "tag",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 890,
											"end": 907,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 890,
											"end": 907,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 890,
											"end": 907,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 890,
											"end": 907,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 890,
											"end": 907,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 890,
											"end": 907,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 890,
											"end": 907,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 890,
											"end": 907,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 890,
											"end": 907,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 890,
											"end": 907,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 890,
											"end": 907,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 890,
											"end": 907,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 890,
											"end": 907,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 890,
											"end": 907,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 890,
											"end": 907,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 890,
											"end": 907,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 890,
											"end": 907,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 890,
											"end": 907,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 890,
											"end": 907,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 890,
											"end": 907,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 890,
											"end": 907,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 890,
											"end": 907,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 890,
											"end": 907,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 890,
											"end": 907,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 890,
											"end": 907,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 890,
											"end": 907,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 890,
											"end": 907,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 890,
											"end": 907,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 890,
											"end": 907,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 890,
											"end": 907,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 890,
											"end": 907,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 890,
											"end": 907,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 890,
											"end": 907,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 890,
											"end": 907,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 890,
											"end": 907,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 890,
											"end": 907,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 890,
											"end": 907,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 890,
											"end": 907,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 890,
											"end": 907,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 890,
											"end": 907,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 890,
											"end": 907,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 890,
											"end": 907,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 890,
											"end": 907,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 890,
											"end": 907,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 890,
											"end": 907,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 890,
											"end": 907,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 868,
											"end": 907,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 868,
											"end": 907,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 918,
											"end": 1072,
											"name": "tag",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 918,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 934,
											"end": 935,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 925,
											"end": 930,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 925,
											"end": 935,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 918,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 918,
											"end": 1072,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 962,
											"end": 963,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 952,
											"end": 963,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 952,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 952,
											"end": 963,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 952,
											"end": 963,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 952,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 952,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 952,
											"end": 963,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 952,
											"end": 963,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 952,
											"end": 963,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 952,
											"end": 963,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1029,
											"end": 1031,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 1021,
											"end": 1026,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1031,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 1021,
											"end": 1031,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1031,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1031,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 1021,
											"end": 1031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1031,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 1021,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1008,
											"end": 1010,
											"name": "PUSH",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 1008,
											"end": 1032,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 1008,
											"end": 1032,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1008,
											"end": 1032,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1008,
											"end": 1032,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 1008,
											"end": 1032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1008,
											"end": 1032,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 1008,
											"end": 1032,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 995,
											"end": 1034,
											"name": "PUSH",
											"source": 10,
											"value": "F8"
										},
										{
											"begin": 995,
											"end": 1034,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 978,
											"end": 984,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 978,
											"end": 992,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 978,
											"end": 992,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 978,
											"end": 992,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 978,
											"end": 992,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 978,
											"end": 992,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 978,
											"end": 992,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 978,
											"end": 992,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 978,
											"end": 992,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 978,
											"end": 992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 978,
											"end": 992,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 978,
											"end": 992,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 978,
											"end": 992,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 978,
											"end": 992,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 978,
											"end": 992,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 978,
											"end": 992,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 978,
											"end": 992,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 978,
											"end": 1034,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 978,
											"end": 1034,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 978,
											"end": 1034,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 978,
											"end": 1034,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 978,
											"end": 1034,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 978,
											"end": 1034,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 978,
											"end": 1034,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 978,
											"end": 1034,
											"name": "BYTE",
											"source": 10
										},
										{
											"begin": 978,
											"end": 1034,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 978,
											"end": 1034,
											"name": "MSTORE8",
											"source": 10
										},
										{
											"begin": 978,
											"end": 1034,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1058,
											"end": 1060,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 1049,
											"end": 1060,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1049,
											"end": 1060,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 1049,
											"end": 1060,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1049,
											"end": 1060,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1049,
											"end": 1060,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 1049,
											"end": 1060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1049,
											"end": 1060,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 1049,
											"end": 1060,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1049,
											"end": 1060,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 1049,
											"end": 1060,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 918,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 918,
											"end": 1072,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 918,
											"end": 1072,
											"name": "tag",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 918,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1096,
											"end": 1102,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1082,
											"end": 1103,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1082,
											"end": 1103,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1082,
											"end": 1103,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1082,
											"end": 1103,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1082,
											"end": 1103,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 388,
											"end": 1111,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 388,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 388,
											"end": 1111,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 388,
											"end": 1111,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 388,
											"end": 1111,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 388,
											"end": 1111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17872,
											"end": 18070,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 17872,
											"end": 18070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17938,
											"end": 17954,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 17967,
											"end": 17989,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18006,
											"end": 18007,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17992,
											"end": 18008,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17992,
											"end": 18008,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17992,
											"end": 18008,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 17992,
											"end": 18008,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17992,
											"end": 18008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 17992,
											"end": 18008,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17992,
											"end": 18008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 17992,
											"end": 18008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 17992,
											"end": 18008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17992,
											"end": 18008,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 17992,
											"end": 18008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17992,
											"end": 18008,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 17992,
											"end": 18008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17992,
											"end": 18008,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17992,
											"end": 18008,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17992,
											"end": 18008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17992,
											"end": 18008,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17992,
											"end": 18008,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17992,
											"end": 18008,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17992,
											"end": 18008,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17992,
											"end": 18008,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17992,
											"end": 18008,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 17992,
											"end": 18008,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17992,
											"end": 18008,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17992,
											"end": 18008,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17992,
											"end": 18008,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17992,
											"end": 18008,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17992,
											"end": 18008,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17992,
											"end": 18008,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17992,
											"end": 18008,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17992,
											"end": 18008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 17992,
											"end": 18008,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17992,
											"end": 18008,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17992,
											"end": 18008,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17992,
											"end": 18008,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17992,
											"end": 18008,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17992,
											"end": 18008,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17992,
											"end": 18008,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 17992,
											"end": 18008,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17992,
											"end": 18008,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17992,
											"end": 18008,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17992,
											"end": 18008,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 17992,
											"end": 18008,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17992,
											"end": 18008,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17992,
											"end": 18008,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17992,
											"end": 18008,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17992,
											"end": 18008,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17992,
											"end": 18008,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17992,
											"end": 18008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17992,
											"end": 18008,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17992,
											"end": 18008,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 17992,
											"end": 18008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17992,
											"end": 18008,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17967,
											"end": 18008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17967,
											"end": 18008,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18030,
											"end": 18037,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18019,
											"end": 18024,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18025,
											"end": 18026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18019,
											"end": 18027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18019,
											"end": 18027,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18019,
											"end": 18027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18019,
											"end": 18027,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18019,
											"end": 18027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 18019,
											"end": 18027,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18019,
											"end": 18027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 18019,
											"end": 18027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 18019,
											"end": 18027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18019,
											"end": 18027,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 18019,
											"end": 18027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18019,
											"end": 18027,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 18019,
											"end": 18027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18019,
											"end": 18027,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18019,
											"end": 18027,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 18019,
											"end": 18027,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18019,
											"end": 18027,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18019,
											"end": 18027,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18019,
											"end": 18037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18019,
											"end": 18037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18019,
											"end": 18037,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18019,
											"end": 18037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18019,
											"end": 18037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18057,
											"end": 18062,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18050,
											"end": 18062,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18050,
											"end": 18062,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18050,
											"end": 18062,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17872,
											"end": 18070,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17872,
											"end": 18070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17872,
											"end": 18070,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17872,
											"end": 18070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16275,
											"end": 17047,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 16275,
											"end": 17047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16509,
											"end": 16524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 16509,
											"end": 16511,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16509,
											"end": 16522,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16509,
											"end": 16522,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16509,
											"end": 16522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 16509,
											"end": 16524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16509,
											"end": 16524,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 16509,
											"end": 16524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16505,
											"end": 17040,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16505,
											"end": 17040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 16505,
											"end": 17040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16562,
											"end": 16564,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16583,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16545,
											"end": 16583,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16583,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E61"
										},
										{
											"begin": 16584,
											"end": 16592,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16598,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16600,
											"end": 16607,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 16609,
											"end": 16615,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 16617,
											"end": 16621,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 16545,
											"end": 16622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 16545,
											"end": 16622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 16545,
											"end": 16622,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16541,
											"end": 17029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 16541,
											"end": 17029,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16541,
											"end": 17029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 16541,
											"end": 17029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 16541,
											"end": 17029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16541,
											"end": 17029,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 16541,
											"end": 17029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16541,
											"end": 17029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16541,
											"end": 17029,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A0"
										},
										{
											"begin": 16541,
											"end": 17029,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16541,
											"end": 17029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 16541,
											"end": 17029,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16541,
											"end": 17029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16541,
											"end": 17029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 16541,
											"end": 17029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 16541,
											"end": 17029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16541,
											"end": 17029,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 16541,
											"end": 17029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16541,
											"end": 17029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16541,
											"end": 17029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 16541,
											"end": 17029,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16541,
											"end": 17029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16541,
											"end": 17029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 16541,
											"end": 17029,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16541,
											"end": 17029,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 16541,
											"end": 17029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16902,
											"end": 16908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16895,
											"end": 16909,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16895,
											"end": 16909,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16895,
											"end": 16909,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16895,
											"end": 16909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16895,
											"end": 16909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16895,
											"end": 16909,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16895,
											"end": 16909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16895,
											"end": 16909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 16895,
											"end": 16909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16895,
											"end": 16909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16895,
											"end": 16909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 16895,
											"end": 16909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16895,
											"end": 16909,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 16895,
											"end": 16909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16895,
											"end": 16909,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16895,
											"end": 16909,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16895,
											"end": 16909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16895,
											"end": 16909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16895,
											"end": 16909,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16895,
											"end": 16909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16895,
											"end": 16909,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16541,
											"end": 17029,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 16541,
											"end": 17029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16541,
											"end": 17029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16541,
											"end": 17029,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 16541,
											"end": 17029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16951,
											"end": 17013,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16951,
											"end": 17013,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16951,
											"end": 17013,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16951,
											"end": 17013,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16951,
											"end": 17013,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16951,
											"end": 17013,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16951,
											"end": 17013,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16951,
											"end": 17013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 16951,
											"end": 17013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16951,
											"end": 17013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 16951,
											"end": 17013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16951,
											"end": 17013,
											"name": "tag",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 16951,
											"end": 17013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16951,
											"end": 17013,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16951,
											"end": 17013,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16951,
											"end": 17013,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16951,
											"end": 17013,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16951,
											"end": 17013,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16951,
											"end": 17013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16951,
											"end": 17013,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16541,
											"end": 17029,
											"name": "tag",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 16541,
											"end": 17029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16684,
											"end": 16731,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E61"
										},
										{
											"begin": 16684,
											"end": 16731,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 16684,
											"end": 16731,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 16672,
											"end": 16731,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16672,
											"end": 16731,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 16672,
											"end": 16731,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16672,
											"end": 16680,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16672,
											"end": 16731,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16672,
											"end": 16731,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 16672,
											"end": 16731,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16672,
											"end": 16731,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16668,
											"end": 16826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 16668,
											"end": 16826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16756,
											"end": 16806,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16756,
											"end": 16806,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16756,
											"end": 16806,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16756,
											"end": 16806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16756,
											"end": 16806,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16756,
											"end": 16806,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16756,
											"end": 16806,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16756,
											"end": 16806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 16756,
											"end": 16806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16756,
											"end": 16806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 16756,
											"end": 16806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16756,
											"end": 16806,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 16756,
											"end": 16806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16756,
											"end": 16806,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16756,
											"end": 16806,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16756,
											"end": 16806,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16756,
											"end": 16806,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16756,
											"end": 16806,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16756,
											"end": 16806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16756,
											"end": 16806,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16668,
											"end": 16826,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 16668,
											"end": 16826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16623,
											"end": 16841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16505,
											"end": 17040,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 16505,
											"end": 17040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16275,
											"end": 17047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16275,
											"end": 17047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16275,
											"end": 17047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16275,
											"end": 17047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16275,
											"end": 17047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16275,
											"end": 17047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16275,
											"end": 17047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2911,
											"name": "tag",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 2760,
											"end": 2911,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2844,
											"end": 2848,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2868,
											"end": 2903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "315"
										},
										{
											"begin": 2878,
											"end": 2881,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2888,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2878,
											"end": 2888,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2898,
											"end": 2901,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2890,
											"end": 2902,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2890,
											"end": 2902,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2877,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "316"
										},
										{
											"begin": 2868,
											"end": 2903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2903,
											"name": "tag",
											"source": 4,
											"value": "315"
										},
										{
											"begin": 2868,
											"end": 2903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2861,
											"end": 2903,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2861,
											"end": 2903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2760,
											"end": 2911,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2760,
											"end": 2911,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2760,
											"end": 2911,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2760,
											"end": 2911,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2760,
											"end": 2911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1624,
											"end": 1734,
											"name": "tag",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 1624,
											"end": 1734,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1687,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1707,
											"end": 1710,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1707,
											"end": 1719,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1707,
											"end": 1719,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1707,
											"end": 1726,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1707,
											"end": 1726,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1707,
											"end": 1726,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1707,
											"end": 1726,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1726,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1726,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1624,
											"end": 1734,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1624,
											"end": 1734,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1624,
											"end": 1734,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1624,
											"end": 1734,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1191,
											"end": 1517,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 1191,
											"end": 1517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1251,
											"end": 1255,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1508,
											"end": 1509,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1486,
											"end": 1493,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1486,
											"end": 1505,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1486,
											"end": 1505,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1486,
											"end": 1505,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 1486,
											"end": 1509,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1479,
											"end": 1509,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1479,
											"end": 1509,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1191,
											"end": 1517,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1191,
											"end": 1517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1191,
											"end": 1517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1191,
											"end": 1517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1616,
											"name": "tag",
											"source": 4,
											"value": "316"
										},
										{
											"begin": 1491,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1566,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1607,
											"end": 1608,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1586,
											"end": 1589,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1586,
											"end": 1598,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1586,
											"end": 1598,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1586,
											"end": 1603,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1599,
											"end": 1602,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1586,
											"end": 1603,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1586,
											"end": 1603,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1586,
											"end": 1603,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1586,
											"end": 1603,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1586,
											"end": 1603,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1586,
											"end": 1603,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1586,
											"end": 1603,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1586,
											"end": 1603,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1586,
											"end": 1603,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1586,
											"end": 1603,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1603,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1586,
											"end": 1603,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1586,
											"end": 1608,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1586,
											"end": 1608,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1579,
											"end": 1608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1579,
											"end": 1608,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1491,
											"end": 1616,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1491,
											"end": 1616,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1491,
											"end": 1616,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1491,
											"end": 1616,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1491,
											"end": 1616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "410"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 11,
											"value": "410"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "411"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 11,
											"value": "411"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "413"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 11,
											"value": "413"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "417"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 11,
											"value": "417"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "419"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 11,
											"value": "419"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 1328,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "423"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 1473,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 11,
											"value": "423"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "424"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 1601,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 11,
											"value": "424"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1197,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "tag",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 1782,
											"end": 1787,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 1764,
											"end": 1788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "tag",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1759,
											"end": 1762,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1752,
											"end": 1789,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1677,
											"end": 1795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "tag",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1894,
											"end": 1898,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1934,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 1930,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1917,
											"end": 1935,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "428"
										},
										{
											"begin": 2013,
											"end": 2014,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2011,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1989,
											"end": 1995,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 1945,
											"end": 2016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "tag",
											"source": 11,
											"value": "428"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1801,
											"end": 2023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "tag",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2065,
											"end": 2072,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2171,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2098,
											"end": 2103,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2094,
											"end": 2172,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2083,
											"end": 2172,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2083,
											"end": 2172,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2029,
											"end": 2178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "tag",
											"source": 11,
											"value": "332"
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "431"
										},
										{
											"begin": 2273,
											"end": 2278,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 2256,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "tag",
											"source": 11,
											"value": "431"
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "432"
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2294,
											"end": 2295,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2291,
											"end": 2292,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "tag",
											"source": 11,
											"value": "432"
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2184,
											"end": 2304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "tag",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2355,
											"end": 2360,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2380,
											"end": 2400,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "434"
										},
										{
											"begin": 2435,
											"end": 2440,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "332"
										},
										{
											"begin": 2409,
											"end": 2441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "tag",
											"source": 11,
											"value": "434"
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2310,
											"end": 2447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "tag",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2562,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2548,
											"end": 2557,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2539,
											"end": 2546,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2535,
											"end": 2558,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2531,
											"end": 2563,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "436"
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "437"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 2566,
											"end": 2645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "tag",
											"source": 11,
											"value": "437"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "tag",
											"source": 11,
											"value": "436"
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2686,
											"end": 2687,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "438"
										},
										{
											"begin": 2755,
											"end": 2762,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2746,
											"end": 2752,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2735,
											"end": 2744,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2731,
											"end": 2753,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 2711,
											"end": 2763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "tag",
											"source": 11,
											"value": "438"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2701,
											"end": 2763,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2701,
											"end": 2763,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2657,
											"end": 2773,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2453,
											"end": 2780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "tag",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2820,
											"end": 2827,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2863,
											"end": 2868,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2856,
											"end": 2869,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2838,
											"end": 2870,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2838,
											"end": 2870,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2786,
											"end": 2876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "tag",
											"source": 11,
											"value": "335"
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "441"
										},
										{
											"begin": 2978,
											"end": 2983,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 2963,
											"end": 2984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "tag",
											"source": 11,
											"value": "441"
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2958,
											"end": 2961,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2951,
											"end": 2985,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2882,
											"end": 2991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "tag",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3122,
											"end": 3124,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3111,
											"end": 3120,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3107,
											"end": 3125,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3099,
											"end": 3125,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3099,
											"end": 3125,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "443"
										},
										{
											"begin": 3197,
											"end": 3198,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3186,
											"end": 3195,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3182,
											"end": 3199,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3173,
											"end": 3179,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "335"
										},
										{
											"begin": 3135,
											"end": 3200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "tag",
											"source": 11,
											"value": "443"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3213,
											"end": 3312,
											"name": "tag",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 3213,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3265,
											"end": 3271,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3299,
											"end": 3304,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3293,
											"end": 3305,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3283,
											"end": 3305,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3283,
											"end": 3305,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3213,
											"end": 3312,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3213,
											"end": 3312,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3213,
											"end": 3312,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3213,
											"end": 3312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3318,
											"end": 3487,
											"name": "tag",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 3318,
											"end": 3487,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3402,
											"end": 3413,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3436,
											"end": 3442,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3431,
											"end": 3434,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3424,
											"end": 3443,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3476,
											"end": 3480,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3471,
											"end": 3474,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3467,
											"end": 3481,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3452,
											"end": 3481,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3452,
											"end": 3481,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3318,
											"end": 3487,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3318,
											"end": 3487,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3318,
											"end": 3487,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3318,
											"end": 3487,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3318,
											"end": 3487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3493,
											"end": 3739,
											"name": "tag",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 3493,
											"end": 3739,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3574,
											"end": 3575,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3584,
											"end": 3697,
											"name": "tag",
											"source": 11,
											"value": "447"
										},
										{
											"begin": 3584,
											"end": 3697,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3598,
											"end": 3604,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3595,
											"end": 3596,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3592,
											"end": 3605,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 3584,
											"end": 3697,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3584,
											"end": 3697,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "449"
										},
										{
											"begin": 3584,
											"end": 3697,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3683,
											"end": 3684,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3678,
											"end": 3681,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3674,
											"end": 3685,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3668,
											"end": 3686,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3664,
											"end": 3665,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3659,
											"end": 3662,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3655,
											"end": 3666,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3648,
											"end": 3687,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3620,
											"end": 3622,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3617,
											"end": 3618,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3613,
											"end": 3623,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3608,
											"end": 3623,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3608,
											"end": 3623,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3584,
											"end": 3697,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "447"
										},
										{
											"begin": 3584,
											"end": 3697,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3584,
											"end": 3697,
											"name": "tag",
											"source": 11,
											"value": "449"
										},
										{
											"begin": 3584,
											"end": 3697,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3731,
											"end": 3732,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3722,
											"end": 3728,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3717,
											"end": 3720,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3713,
											"end": 3729,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3706,
											"end": 3733,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3555,
											"end": 3739,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3493,
											"end": 3739,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3493,
											"end": 3739,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3493,
											"end": 3739,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3493,
											"end": 3739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3745,
											"end": 3847,
											"name": "tag",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 3745,
											"end": 3847,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3786,
											"end": 3792,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3837,
											"end": 3839,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3833,
											"end": 3840,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 3828,
											"end": 3830,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3821,
											"end": 3826,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3817,
											"end": 3831,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3813,
											"end": 3841,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3803,
											"end": 3841,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3803,
											"end": 3841,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3745,
											"end": 3847,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3745,
											"end": 3847,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3745,
											"end": 3847,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3745,
											"end": 3847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3853,
											"end": 4230,
											"name": "tag",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 3853,
											"end": 4230,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3941,
											"end": 3944,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3969,
											"end": 4008,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "452"
										},
										{
											"begin": 4002,
											"end": 4007,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3969,
											"end": 4008,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 3969,
											"end": 4008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3969,
											"end": 4008,
											"name": "tag",
											"source": 11,
											"value": "452"
										},
										{
											"begin": 3969,
											"end": 4008,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4024,
											"end": 4095,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "453"
										},
										{
											"begin": 4088,
											"end": 4094,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4083,
											"end": 4086,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4024,
											"end": 4095,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 4024,
											"end": 4095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4024,
											"end": 4095,
											"name": "tag",
											"source": 11,
											"value": "453"
										},
										{
											"begin": 4024,
											"end": 4095,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4017,
											"end": 4095,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 4017,
											"end": 4095,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4104,
											"end": 4169,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "454"
										},
										{
											"begin": 4162,
											"end": 4168,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4157,
											"end": 4160,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4150,
											"end": 4154,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4143,
											"end": 4148,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4139,
											"end": 4155,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4104,
											"end": 4169,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 4104,
											"end": 4169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4104,
											"end": 4169,
											"name": "tag",
											"source": 11,
											"value": "454"
										},
										{
											"begin": 4104,
											"end": 4169,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4194,
											"end": 4223,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "455"
										},
										{
											"begin": 4216,
											"end": 4222,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4194,
											"end": 4223,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 4194,
											"end": 4223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4194,
											"end": 4223,
											"name": "tag",
											"source": 11,
											"value": "455"
										},
										{
											"begin": 4194,
											"end": 4223,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4189,
											"end": 4192,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4185,
											"end": 4224,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4178,
											"end": 4224,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4178,
											"end": 4224,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4230,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3853,
											"end": 4230,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3853,
											"end": 4230,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3853,
											"end": 4230,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3853,
											"end": 4230,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3853,
											"end": 4230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4236,
											"end": 4549,
											"name": "tag",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 4236,
											"end": 4549,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4349,
											"end": 4353,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4387,
											"end": 4389,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4376,
											"end": 4385,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4372,
											"end": 4390,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4364,
											"end": 4390,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4364,
											"end": 4390,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4436,
											"end": 4445,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4430,
											"end": 4434,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4426,
											"end": 4446,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4422,
											"end": 4423,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4411,
											"end": 4420,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4407,
											"end": 4424,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4400,
											"end": 4447,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4464,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "457"
										},
										{
											"begin": 4537,
											"end": 4541,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4528,
											"end": 4534,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4464,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 4464,
											"end": 4542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4464,
											"end": 4542,
											"name": "tag",
											"source": 11,
											"value": "457"
										},
										{
											"begin": 4464,
											"end": 4542,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4456,
											"end": 4542,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4456,
											"end": 4542,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4236,
											"end": 4549,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4236,
											"end": 4549,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4236,
											"end": 4549,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4236,
											"end": 4549,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4236,
											"end": 4549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4555,
											"end": 4672,
											"name": "tag",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 4555,
											"end": 4672,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4664,
											"end": 4665,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4661,
											"end": 4662,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4654,
											"end": 4666,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4678,
											"end": 4858,
											"name": "tag",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 4678,
											"end": 4858,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4726,
											"end": 4803,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4723,
											"end": 4724,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4716,
											"end": 4804,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4823,
											"end": 4827,
											"name": "PUSH",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 4820,
											"end": 4821,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4813,
											"end": 4828,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4847,
											"end": 4851,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 4844,
											"end": 4845,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4837,
											"end": 4852,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4864,
											"end": 5145,
											"name": "tag",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 4864,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4947,
											"end": 4974,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "461"
										},
										{
											"begin": 4969,
											"end": 4973,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4947,
											"end": 4974,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 4947,
											"end": 4974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4947,
											"end": 4974,
											"name": "tag",
											"source": 11,
											"value": "461"
										},
										{
											"begin": 4947,
											"end": 4974,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4939,
											"end": 4945,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4975,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5077,
											"end": 5083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5065,
											"end": 5075,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5062,
											"end": 5084,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 5041,
											"end": 5059,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5029,
											"end": 5039,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5026,
											"end": 5060,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5023,
											"end": 5085,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 5020,
											"end": 5108,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5020,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "462"
										},
										{
											"begin": 5020,
											"end": 5108,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5106,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "463"
										},
										{
											"begin": 5088,
											"end": 5106,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 5088,
											"end": 5106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5106,
											"name": "tag",
											"source": 11,
											"value": "463"
										},
										{
											"begin": 5088,
											"end": 5106,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5020,
											"end": 5108,
											"name": "tag",
											"source": 11,
											"value": "462"
										},
										{
											"begin": 5020,
											"end": 5108,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5128,
											"end": 5138,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5124,
											"end": 5126,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5117,
											"end": 5139,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4907,
											"end": 5145,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4864,
											"end": 5145,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4864,
											"end": 5145,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4864,
											"end": 5145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5151,
											"end": 5280,
											"name": "tag",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 5151,
											"end": 5280,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5185,
											"end": 5191,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5212,
											"end": 5232,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "465"
										},
										{
											"begin": 5212,
											"end": 5232,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 5212,
											"end": 5232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5232,
											"name": "tag",
											"source": 11,
											"value": "465"
										},
										{
											"begin": 5212,
											"end": 5232,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5241,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "466"
										},
										{
											"begin": 5269,
											"end": 5273,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5261,
											"end": 5267,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5241,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 5241,
											"end": 5274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5241,
											"end": 5274,
											"name": "tag",
											"source": 11,
											"value": "466"
										},
										{
											"begin": 5241,
											"end": 5274,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5151,
											"end": 5280,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5151,
											"end": 5280,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5151,
											"end": 5280,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5151,
											"end": 5280,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5286,
											"end": 5597,
											"name": "tag",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 5286,
											"end": 5597,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5363,
											"end": 5367,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5453,
											"end": 5471,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5445,
											"end": 5451,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5442,
											"end": 5472,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5439,
											"end": 5495,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5439,
											"end": 5495,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "468"
										},
										{
											"begin": 5439,
											"end": 5495,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5475,
											"end": 5493,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "469"
										},
										{
											"begin": 5475,
											"end": 5493,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 5475,
											"end": 5493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5475,
											"end": 5493,
											"name": "tag",
											"source": 11,
											"value": "469"
										},
										{
											"begin": 5475,
											"end": 5493,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5439,
											"end": 5495,
											"name": "tag",
											"source": 11,
											"value": "468"
										},
										{
											"begin": 5439,
											"end": 5495,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5525,
											"end": 5529,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5517,
											"end": 5523,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5513,
											"end": 5530,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 5505,
											"end": 5530,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5505,
											"end": 5530,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5585,
											"end": 5589,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5579,
											"end": 5583,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5575,
											"end": 5590,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5567,
											"end": 5590,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5567,
											"end": 5590,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5286,
											"end": 5597,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5286,
											"end": 5597,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5286,
											"end": 5597,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5286,
											"end": 5597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5603,
											"end": 5720,
											"name": "tag",
											"source": 11,
											"value": "345"
										},
										{
											"begin": 5603,
											"end": 5720,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5712,
											"end": 5713,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5709,
											"end": 5710,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5743,
											"end": 6453,
											"name": "tag",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 5743,
											"end": 6453,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5839,
											"end": 5844,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5864,
											"end": 5945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "472"
										},
										{
											"begin": 5880,
											"end": 5944,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "473"
										},
										{
											"begin": 5937,
											"end": 5943,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5880,
											"end": 5944,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 5880,
											"end": 5944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5880,
											"end": 5944,
											"name": "tag",
											"source": 11,
											"value": "473"
										},
										{
											"begin": 5880,
											"end": 5944,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5864,
											"end": 5945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 5864,
											"end": 5945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5864,
											"end": 5945,
											"name": "tag",
											"source": 11,
											"value": "472"
										},
										{
											"begin": 5864,
											"end": 5945,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5855,
											"end": 5945,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5855,
											"end": 5945,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5965,
											"end": 5970,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5994,
											"end": 6000,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5987,
											"end": 5992,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5980,
											"end": 6001,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6028,
											"end": 6032,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6021,
											"end": 6026,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6017,
											"end": 6033,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6010,
											"end": 6033,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6010,
											"end": 6033,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6081,
											"end": 6085,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6073,
											"end": 6079,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6069,
											"end": 6086,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 6061,
											"end": 6067,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6057,
											"end": 6087,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6110,
											"end": 6113,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6102,
											"end": 6108,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6099,
											"end": 6114,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 6096,
											"end": 6218,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6096,
											"end": 6218,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "474"
										},
										{
											"begin": 6096,
											"end": 6218,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6129,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "475"
										},
										{
											"begin": 6129,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "345"
										},
										{
											"begin": 6129,
											"end": 6208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6129,
											"end": 6208,
											"name": "tag",
											"source": 11,
											"value": "475"
										},
										{
											"begin": 6129,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6096,
											"end": 6218,
											"name": "tag",
											"source": 11,
											"value": "474"
										},
										{
											"begin": 6096,
											"end": 6218,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6244,
											"end": 6250,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6227,
											"end": 6447,
											"name": "tag",
											"source": 11,
											"value": "476"
										},
										{
											"begin": 6227,
											"end": 6447,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6261,
											"end": 6267,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6256,
											"end": 6259,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6253,
											"end": 6268,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 6227,
											"end": 6447,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6227,
											"end": 6447,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "478"
										},
										{
											"begin": 6227,
											"end": 6447,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6336,
											"end": 6339,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6365,
											"end": 6402,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "479"
										},
										{
											"begin": 6398,
											"end": 6401,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 6386,
											"end": 6396,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6365,
											"end": 6402,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 6365,
											"end": 6402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6365,
											"end": 6402,
											"name": "tag",
											"source": 11,
											"value": "479"
										},
										{
											"begin": 6365,
											"end": 6402,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6360,
											"end": 6363,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6353,
											"end": 6403,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6432,
											"end": 6436,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6427,
											"end": 6430,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6423,
											"end": 6437,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6416,
											"end": 6437,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 6416,
											"end": 6437,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6303,
											"end": 6447,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6287,
											"end": 6291,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6282,
											"end": 6285,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6278,
											"end": 6292,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6271,
											"end": 6292,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6271,
											"end": 6292,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6227,
											"end": 6447,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "476"
										},
										{
											"begin": 6227,
											"end": 6447,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6227,
											"end": 6447,
											"name": "tag",
											"source": 11,
											"value": "478"
										},
										{
											"begin": 6227,
											"end": 6447,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6231,
											"end": 6252,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5845,
											"end": 6453,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5845,
											"end": 6453,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5743,
											"end": 6453,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 5743,
											"end": 6453,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5743,
											"end": 6453,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5743,
											"end": 6453,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5743,
											"end": 6453,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5743,
											"end": 6453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6476,
											"end": 6846,
											"name": "tag",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 6476,
											"end": 6846,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6547,
											"end": 6552,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6596,
											"end": 6599,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6589,
											"end": 6593,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 6581,
											"end": 6587,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6577,
											"end": 6594,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6573,
											"end": 6600,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 6563,
											"end": 6685,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "481"
										},
										{
											"begin": 6563,
											"end": 6685,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6604,
											"end": 6683,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "482"
										},
										{
											"begin": 6604,
											"end": 6683,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 6604,
											"end": 6683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6604,
											"end": 6683,
											"name": "tag",
											"source": 11,
											"value": "482"
										},
										{
											"begin": 6604,
											"end": 6683,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6563,
											"end": 6685,
											"name": "tag",
											"source": 11,
											"value": "481"
										},
										{
											"begin": 6563,
											"end": 6685,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6721,
											"end": 6727,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6708,
											"end": 6728,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 6746,
											"end": 6840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "483"
										},
										{
											"begin": 6836,
											"end": 6839,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6828,
											"end": 6834,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6821,
											"end": 6825,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6813,
											"end": 6819,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6809,
											"end": 6826,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6746,
											"end": 6840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 6746,
											"end": 6840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6746,
											"end": 6840,
											"name": "tag",
											"source": 11,
											"value": "483"
										},
										{
											"begin": 6746,
											"end": 6840,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6737,
											"end": 6840,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6737,
											"end": 6840,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6553,
											"end": 6846,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6476,
											"end": 6846,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6476,
											"end": 6846,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6476,
											"end": 6846,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6476,
											"end": 6846,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6476,
											"end": 6846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6852,
											"end": 6969,
											"name": "tag",
											"source": 11,
											"value": "348"
										},
										{
											"begin": 6852,
											"end": 6969,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6961,
											"end": 6962,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6958,
											"end": 6959,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6951,
											"end": 6963,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6975,
											"end": 7282,
											"name": "tag",
											"source": 11,
											"value": "349"
										},
										{
											"begin": 6975,
											"end": 7282,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7036,
											"end": 7040,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7126,
											"end": 7144,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7118,
											"end": 7124,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7115,
											"end": 7145,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 7112,
											"end": 7168,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7112,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "486"
										},
										{
											"begin": 7112,
											"end": 7168,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7148,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "487"
										},
										{
											"begin": 7148,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 7148,
											"end": 7166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7148,
											"end": 7166,
											"name": "tag",
											"source": 11,
											"value": "487"
										},
										{
											"begin": 7148,
											"end": 7166,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7112,
											"end": 7168,
											"name": "tag",
											"source": 11,
											"value": "486"
										},
										{
											"begin": 7112,
											"end": 7168,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7186,
											"end": 7215,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "488"
										},
										{
											"begin": 7208,
											"end": 7214,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7186,
											"end": 7215,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 7186,
											"end": 7215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7186,
											"end": 7215,
											"name": "tag",
											"source": 11,
											"value": "488"
										},
										{
											"begin": 7186,
											"end": 7215,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7178,
											"end": 7215,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7178,
											"end": 7215,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7270,
											"end": 7274,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7264,
											"end": 7268,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7260,
											"end": 7275,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7252,
											"end": 7275,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7252,
											"end": 7275,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6975,
											"end": 7282,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6975,
											"end": 7282,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6975,
											"end": 7282,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6975,
											"end": 7282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7288,
											"end": 7434,
											"name": "tag",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 7288,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7385,
											"end": 7391,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7380,
											"end": 7383,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7375,
											"end": 7378,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7362,
											"end": 7392,
											"name": "CALLDATACOPY",
											"source": 11
										},
										{
											"begin": 7426,
											"end": 7427,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7417,
											"end": 7423,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7412,
											"end": 7415,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7408,
											"end": 7424,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7401,
											"end": 7428,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7288,
											"end": 7434,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7288,
											"end": 7434,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7288,
											"end": 7434,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7288,
											"end": 7434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7440,
											"end": 7863,
											"name": "tag",
											"source": 11,
											"value": "351"
										},
										{
											"begin": 7440,
											"end": 7863,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7517,
											"end": 7522,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7542,
											"end": 7607,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "491"
										},
										{
											"begin": 7558,
											"end": 7606,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "492"
										},
										{
											"begin": 7599,
											"end": 7605,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7558,
											"end": 7606,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "349"
										},
										{
											"begin": 7558,
											"end": 7606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7558,
											"end": 7606,
											"name": "tag",
											"source": 11,
											"value": "492"
										},
										{
											"begin": 7558,
											"end": 7606,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7542,
											"end": 7607,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 7542,
											"end": 7607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7542,
											"end": 7607,
											"name": "tag",
											"source": 11,
											"value": "491"
										},
										{
											"begin": 7542,
											"end": 7607,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7533,
											"end": 7607,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7533,
											"end": 7607,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7630,
											"end": 7636,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7623,
											"end": 7628,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7616,
											"end": 7637,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7668,
											"end": 7672,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7661,
											"end": 7666,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7657,
											"end": 7673,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7706,
											"end": 7709,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7697,
											"end": 7703,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7692,
											"end": 7695,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7688,
											"end": 7704,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7685,
											"end": 7710,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 7682,
											"end": 7794,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7682,
											"end": 7794,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "493"
										},
										{
											"begin": 7682,
											"end": 7794,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7713,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "494"
										},
										{
											"begin": 7713,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "348"
										},
										{
											"begin": 7713,
											"end": 7792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7713,
											"end": 7792,
											"name": "tag",
											"source": 11,
											"value": "494"
										},
										{
											"begin": 7713,
											"end": 7792,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7682,
											"end": 7794,
											"name": "tag",
											"source": 11,
											"value": "493"
										},
										{
											"begin": 7682,
											"end": 7794,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7803,
											"end": 7857,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "495"
										},
										{
											"begin": 7850,
											"end": 7856,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7845,
											"end": 7848,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7840,
											"end": 7843,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7803,
											"end": 7857,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 7803,
											"end": 7857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7803,
											"end": 7857,
											"name": "tag",
											"source": 11,
											"value": "495"
										},
										{
											"begin": 7803,
											"end": 7857,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7523,
											"end": 7863,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7440,
											"end": 7863,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 7440,
											"end": 7863,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7440,
											"end": 7863,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7440,
											"end": 7863,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7440,
											"end": 7863,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7440,
											"end": 7863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7882,
											"end": 8220,
											"name": "tag",
											"source": 11,
											"value": "352"
										},
										{
											"begin": 7882,
											"end": 8220,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7937,
											"end": 7942,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7986,
											"end": 7989,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7979,
											"end": 7983,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 7971,
											"end": 7977,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7967,
											"end": 7984,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7963,
											"end": 7990,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 7953,
											"end": 8075,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "497"
										},
										{
											"begin": 7953,
											"end": 8075,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7994,
											"end": 8073,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "498"
										},
										{
											"begin": 7994,
											"end": 8073,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 7994,
											"end": 8073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7994,
											"end": 8073,
											"name": "tag",
											"source": 11,
											"value": "498"
										},
										{
											"begin": 7994,
											"end": 8073,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7953,
											"end": 8075,
											"name": "tag",
											"source": 11,
											"value": "497"
										},
										{
											"begin": 7953,
											"end": 8075,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8111,
											"end": 8117,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8098,
											"end": 8118,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 8136,
											"end": 8214,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "499"
										},
										{
											"begin": 8210,
											"end": 8213,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8202,
											"end": 8208,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8195,
											"end": 8199,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8187,
											"end": 8193,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 8183,
											"end": 8200,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8136,
											"end": 8214,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "351"
										},
										{
											"begin": 8136,
											"end": 8214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8136,
											"end": 8214,
											"name": "tag",
											"source": 11,
											"value": "499"
										},
										{
											"begin": 8136,
											"end": 8214,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8127,
											"end": 8214,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8127,
											"end": 8214,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7943,
											"end": 8220,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7882,
											"end": 8220,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7882,
											"end": 8220,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7882,
											"end": 8220,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7882,
											"end": 8220,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7882,
											"end": 8220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8226,
											"end": 9735,
											"name": "tag",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 8226,
											"end": 9735,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8380,
											"end": 8386,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8388,
											"end": 8394,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8396,
											"end": 8402,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8404,
											"end": 8410,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8412,
											"end": 8418,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8461,
											"end": 8464,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 8449,
											"end": 8458,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 8440,
											"end": 8447,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 8436,
											"end": 8459,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8432,
											"end": 8465,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 8429,
											"end": 8549,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8429,
											"end": 8549,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "501"
										},
										{
											"begin": 8429,
											"end": 8549,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8468,
											"end": 8547,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "502"
										},
										{
											"begin": 8468,
											"end": 8547,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 8468,
											"end": 8547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8468,
											"end": 8547,
											"name": "tag",
											"source": 11,
											"value": "502"
										},
										{
											"begin": 8468,
											"end": 8547,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8429,
											"end": 8549,
											"name": "tag",
											"source": 11,
											"value": "501"
										},
										{
											"begin": 8429,
											"end": 8549,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8588,
											"end": 8589,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8613,
											"end": 8666,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "503"
										},
										{
											"begin": 8658,
											"end": 8665,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 8649,
											"end": 8655,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8638,
											"end": 8647,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 8634,
											"end": 8656,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8613,
											"end": 8666,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 8613,
											"end": 8666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8613,
											"end": 8666,
											"name": "tag",
											"source": 11,
											"value": "503"
										},
										{
											"begin": 8613,
											"end": 8666,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8603,
											"end": 8666,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 8603,
											"end": 8666,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8559,
											"end": 8676,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8715,
											"end": 8717,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8741,
											"end": 8794,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "504"
										},
										{
											"begin": 8786,
											"end": 8793,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 8777,
											"end": 8783,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8766,
											"end": 8775,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 8762,
											"end": 8784,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8741,
											"end": 8794,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 8741,
											"end": 8794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8741,
											"end": 8794,
											"name": "tag",
											"source": 11,
											"value": "504"
										},
										{
											"begin": 8741,
											"end": 8794,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8731,
											"end": 8794,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 8731,
											"end": 8794,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8686,
											"end": 8804,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8871,
											"end": 8873,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8860,
											"end": 8869,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 8856,
											"end": 8874,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8843,
											"end": 8875,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 8902,
											"end": 8920,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8894,
											"end": 8900,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8891,
											"end": 8921,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 8888,
											"end": 9005,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8888,
											"end": 9005,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "505"
										},
										{
											"begin": 8888,
											"end": 9005,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8924,
											"end": 9003,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "506"
										},
										{
											"begin": 8924,
											"end": 9003,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 8924,
											"end": 9003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8924,
											"end": 9003,
											"name": "tag",
											"source": 11,
											"value": "506"
										},
										{
											"begin": 8924,
											"end": 9003,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8888,
											"end": 9005,
											"name": "tag",
											"source": 11,
											"value": "505"
										},
										{
											"begin": 8888,
											"end": 9005,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9029,
											"end": 9107,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "507"
										},
										{
											"begin": 9099,
											"end": 9106,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 9090,
											"end": 9096,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9079,
											"end": 9088,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 9075,
											"end": 9097,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9029,
											"end": 9107,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 9029,
											"end": 9107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9029,
											"end": 9107,
											"name": "tag",
											"source": 11,
											"value": "507"
										},
										{
											"begin": 9029,
											"end": 9107,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9019,
											"end": 9107,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 9019,
											"end": 9107,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8814,
											"end": 9117,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9184,
											"end": 9186,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 9173,
											"end": 9182,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 9169,
											"end": 9187,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9156,
											"end": 9188,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 9215,
											"end": 9233,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9207,
											"end": 9213,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9204,
											"end": 9234,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 9201,
											"end": 9318,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9201,
											"end": 9318,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "508"
										},
										{
											"begin": 9201,
											"end": 9318,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9237,
											"end": 9316,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "509"
										},
										{
											"begin": 9237,
											"end": 9316,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 9237,
											"end": 9316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9237,
											"end": 9316,
											"name": "tag",
											"source": 11,
											"value": "509"
										},
										{
											"begin": 9237,
											"end": 9316,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9201,
											"end": 9318,
											"name": "tag",
											"source": 11,
											"value": "508"
										},
										{
											"begin": 9201,
											"end": 9318,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9342,
											"end": 9420,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "510"
										},
										{
											"begin": 9412,
											"end": 9419,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 9403,
											"end": 9409,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9392,
											"end": 9401,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 9388,
											"end": 9410,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9342,
											"end": 9420,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 9342,
											"end": 9420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9342,
											"end": 9420,
											"name": "tag",
											"source": 11,
											"value": "510"
										},
										{
											"begin": 9342,
											"end": 9420,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9332,
											"end": 9420,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9332,
											"end": 9420,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9127,
											"end": 9430,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9497,
											"end": 9500,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 9486,
											"end": 9495,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 9482,
											"end": 9501,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9469,
											"end": 9502,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 9529,
											"end": 9547,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9521,
											"end": 9527,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9518,
											"end": 9548,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 9515,
											"end": 9632,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9515,
											"end": 9632,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "511"
										},
										{
											"begin": 9515,
											"end": 9632,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9551,
											"end": 9630,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "512"
										},
										{
											"begin": 9551,
											"end": 9630,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 9551,
											"end": 9630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9551,
											"end": 9630,
											"name": "tag",
											"source": 11,
											"value": "512"
										},
										{
											"begin": 9551,
											"end": 9630,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9515,
											"end": 9632,
											"name": "tag",
											"source": 11,
											"value": "511"
										},
										{
											"begin": 9515,
											"end": 9632,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9656,
											"end": 9718,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "513"
										},
										{
											"begin": 9710,
											"end": 9717,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 9701,
											"end": 9707,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9690,
											"end": 9699,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 9686,
											"end": 9708,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9656,
											"end": 9718,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "352"
										},
										{
											"begin": 9656,
											"end": 9718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9656,
											"end": 9718,
											"name": "tag",
											"source": 11,
											"value": "513"
										},
										{
											"begin": 9656,
											"end": 9718,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9646,
											"end": 9718,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9646,
											"end": 9718,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9440,
											"end": 9728,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8226,
											"end": 9735,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8226,
											"end": 9735,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 8226,
											"end": 9735,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8226,
											"end": 9735,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8226,
											"end": 9735,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 8226,
											"end": 9735,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8226,
											"end": 9735,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 8226,
											"end": 9735,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8226,
											"end": 9735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9741,
											"end": 10052,
											"name": "tag",
											"source": 11,
											"value": "353"
										},
										{
											"begin": 9741,
											"end": 10052,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9818,
											"end": 9822,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9908,
											"end": 9926,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9900,
											"end": 9906,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9897,
											"end": 9927,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 9894,
											"end": 9950,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9894,
											"end": 9950,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "515"
										},
										{
											"begin": 9894,
											"end": 9950,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9930,
											"end": 9948,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "516"
										},
										{
											"begin": 9930,
											"end": 9948,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 9930,
											"end": 9948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9930,
											"end": 9948,
											"name": "tag",
											"source": 11,
											"value": "516"
										},
										{
											"begin": 9930,
											"end": 9948,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9894,
											"end": 9950,
											"name": "tag",
											"source": 11,
											"value": "515"
										},
										{
											"begin": 9894,
											"end": 9950,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9980,
											"end": 9984,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9972,
											"end": 9978,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9968,
											"end": 9985,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 9960,
											"end": 9985,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9960,
											"end": 9985,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10040,
											"end": 10044,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10034,
											"end": 10038,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10030,
											"end": 10045,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10022,
											"end": 10045,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10022,
											"end": 10045,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9741,
											"end": 10052,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9741,
											"end": 10052,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9741,
											"end": 10052,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9741,
											"end": 10052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10075,
											"end": 10785,
											"name": "tag",
											"source": 11,
											"value": "354"
										},
										{
											"begin": 10075,
											"end": 10785,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10171,
											"end": 10176,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10196,
											"end": 10277,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "518"
										},
										{
											"begin": 10212,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "519"
										},
										{
											"begin": 10269,
											"end": 10275,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10212,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "353"
										},
										{
											"begin": 10212,
											"end": 10276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10212,
											"end": 10276,
											"name": "tag",
											"source": 11,
											"value": "519"
										},
										{
											"begin": 10212,
											"end": 10276,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10196,
											"end": 10277,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 10196,
											"end": 10277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10196,
											"end": 10277,
											"name": "tag",
											"source": 11,
											"value": "518"
										},
										{
											"begin": 10196,
											"end": 10277,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10187,
											"end": 10277,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10187,
											"end": 10277,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10297,
											"end": 10302,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10326,
											"end": 10332,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10319,
											"end": 10324,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10312,
											"end": 10333,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10360,
											"end": 10364,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10353,
											"end": 10358,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10349,
											"end": 10365,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10342,
											"end": 10365,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10342,
											"end": 10365,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10413,
											"end": 10417,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10405,
											"end": 10411,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10401,
											"end": 10418,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 10393,
											"end": 10399,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10389,
											"end": 10419,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10442,
											"end": 10445,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 10434,
											"end": 10440,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10431,
											"end": 10446,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 10428,
											"end": 10550,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10428,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "520"
										},
										{
											"begin": 10428,
											"end": 10550,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10461,
											"end": 10540,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "521"
										},
										{
											"begin": 10461,
											"end": 10540,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "345"
										},
										{
											"begin": 10461,
											"end": 10540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10461,
											"end": 10540,
											"name": "tag",
											"source": 11,
											"value": "521"
										},
										{
											"begin": 10461,
											"end": 10540,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10428,
											"end": 10550,
											"name": "tag",
											"source": 11,
											"value": "520"
										},
										{
											"begin": 10428,
											"end": 10550,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10576,
											"end": 10582,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10559,
											"end": 10779,
											"name": "tag",
											"source": 11,
											"value": "522"
										},
										{
											"begin": 10559,
											"end": 10779,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10593,
											"end": 10599,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10588,
											"end": 10591,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10585,
											"end": 10600,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 10559,
											"end": 10779,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10559,
											"end": 10779,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "524"
										},
										{
											"begin": 10559,
											"end": 10779,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10668,
											"end": 10671,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10697,
											"end": 10734,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "525"
										},
										{
											"begin": 10730,
											"end": 10733,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 10718,
											"end": 10728,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10697,
											"end": 10734,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 10697,
											"end": 10734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10697,
											"end": 10734,
											"name": "tag",
											"source": 11,
											"value": "525"
										},
										{
											"begin": 10697,
											"end": 10734,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10692,
											"end": 10695,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10685,
											"end": 10735,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10764,
											"end": 10768,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10759,
											"end": 10762,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10755,
											"end": 10769,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10748,
											"end": 10769,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 10748,
											"end": 10769,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10635,
											"end": 10779,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10619,
											"end": 10623,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10614,
											"end": 10617,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10610,
											"end": 10624,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10603,
											"end": 10624,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10603,
											"end": 10624,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10559,
											"end": 10779,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "522"
										},
										{
											"begin": 10559,
											"end": 10779,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10559,
											"end": 10779,
											"name": "tag",
											"source": 11,
											"value": "524"
										},
										{
											"begin": 10559,
											"end": 10779,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10563,
											"end": 10584,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10177,
											"end": 10785,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10177,
											"end": 10785,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10075,
											"end": 10785,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 10075,
											"end": 10785,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10075,
											"end": 10785,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10075,
											"end": 10785,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10075,
											"end": 10785,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10075,
											"end": 10785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10808,
											"end": 11178,
											"name": "tag",
											"source": 11,
											"value": "355"
										},
										{
											"begin": 10808,
											"end": 11178,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10879,
											"end": 10884,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10928,
											"end": 10931,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10921,
											"end": 10925,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 10913,
											"end": 10919,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10909,
											"end": 10926,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10905,
											"end": 10932,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 10895,
											"end": 11017,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "527"
										},
										{
											"begin": 10895,
											"end": 11017,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10936,
											"end": 11015,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "528"
										},
										{
											"begin": 10936,
											"end": 11015,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 10936,
											"end": 11015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10936,
											"end": 11015,
											"name": "tag",
											"source": 11,
											"value": "528"
										},
										{
											"begin": 10936,
											"end": 11015,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10895,
											"end": 11017,
											"name": "tag",
											"source": 11,
											"value": "527"
										},
										{
											"begin": 10895,
											"end": 11017,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11053,
											"end": 11059,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11040,
											"end": 11060,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 11078,
											"end": 11172,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "529"
										},
										{
											"begin": 11168,
											"end": 11171,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11160,
											"end": 11166,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11153,
											"end": 11157,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11145,
											"end": 11151,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 11141,
											"end": 11158,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11078,
											"end": 11172,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "354"
										},
										{
											"begin": 11078,
											"end": 11172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11078,
											"end": 11172,
											"name": "tag",
											"source": 11,
											"value": "529"
										},
										{
											"begin": 11078,
											"end": 11172,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11069,
											"end": 11172,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11069,
											"end": 11172,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10885,
											"end": 11178,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10808,
											"end": 11178,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10808,
											"end": 11178,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10808,
											"end": 11178,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10808,
											"end": 11178,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10808,
											"end": 11178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11184,
											"end": 12078,
											"name": "tag",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 11184,
											"end": 12078,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11302,
											"end": 11308,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11310,
											"end": 11316,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11359,
											"end": 11361,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11347,
											"end": 11356,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11338,
											"end": 11345,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 11334,
											"end": 11357,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 11330,
											"end": 11362,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 11327,
											"end": 11446,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 11327,
											"end": 11446,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "531"
										},
										{
											"begin": 11327,
											"end": 11446,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11365,
											"end": 11444,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "532"
										},
										{
											"begin": 11365,
											"end": 11444,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 11365,
											"end": 11444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11365,
											"end": 11444,
											"name": "tag",
											"source": 11,
											"value": "532"
										},
										{
											"begin": 11365,
											"end": 11444,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11327,
											"end": 11446,
											"name": "tag",
											"source": 11,
											"value": "531"
										},
										{
											"begin": 11327,
											"end": 11446,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11513,
											"end": 11514,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11502,
											"end": 11511,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11498,
											"end": 11515,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11485,
											"end": 11516,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 11543,
											"end": 11561,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11535,
											"end": 11541,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11532,
											"end": 11562,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 11529,
											"end": 11646,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 11529,
											"end": 11646,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "533"
										},
										{
											"begin": 11529,
											"end": 11646,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11565,
											"end": 11644,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "534"
										},
										{
											"begin": 11565,
											"end": 11644,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 11565,
											"end": 11644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11565,
											"end": 11644,
											"name": "tag",
											"source": 11,
											"value": "534"
										},
										{
											"begin": 11565,
											"end": 11644,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11529,
											"end": 11646,
											"name": "tag",
											"source": 11,
											"value": "533"
										},
										{
											"begin": 11529,
											"end": 11646,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11670,
											"end": 11748,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "535"
										},
										{
											"begin": 11740,
											"end": 11747,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 11731,
											"end": 11737,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11720,
											"end": 11729,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 11716,
											"end": 11738,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11670,
											"end": 11748,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "355"
										},
										{
											"begin": 11670,
											"end": 11748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11670,
											"end": 11748,
											"name": "tag",
											"source": 11,
											"value": "535"
										},
										{
											"begin": 11670,
											"end": 11748,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11660,
											"end": 11748,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11660,
											"end": 11748,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11456,
											"end": 11758,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11825,
											"end": 11827,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11814,
											"end": 11823,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11810,
											"end": 11828,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11797,
											"end": 11829,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 11856,
											"end": 11874,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11848,
											"end": 11854,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11845,
											"end": 11875,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 11842,
											"end": 11959,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 11842,
											"end": 11959,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "536"
										},
										{
											"begin": 11842,
											"end": 11959,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11878,
											"end": 11957,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "537"
										},
										{
											"begin": 11878,
											"end": 11957,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 11878,
											"end": 11957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11878,
											"end": 11957,
											"name": "tag",
											"source": 11,
											"value": "537"
										},
										{
											"begin": 11878,
											"end": 11957,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11842,
											"end": 11959,
											"name": "tag",
											"source": 11,
											"value": "536"
										},
										{
											"begin": 11842,
											"end": 11959,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11983,
											"end": 12061,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "538"
										},
										{
											"begin": 12053,
											"end": 12060,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 12044,
											"end": 12050,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12033,
											"end": 12042,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 12029,
											"end": 12051,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11983,
											"end": 12061,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 11983,
											"end": 12061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11983,
											"end": 12061,
											"name": "tag",
											"source": 11,
											"value": "538"
										},
										{
											"begin": 11983,
											"end": 12061,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11973,
											"end": 12061,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11973,
											"end": 12061,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11768,
											"end": 12071,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11184,
											"end": 12078,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11184,
											"end": 12078,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11184,
											"end": 12078,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11184,
											"end": 12078,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11184,
											"end": 12078,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11184,
											"end": 12078,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12084,
											"end": 12198,
											"name": "tag",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 12084,
											"end": 12198,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12151,
											"end": 12157,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12185,
											"end": 12190,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12179,
											"end": 12191,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 12169,
											"end": 12191,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12169,
											"end": 12191,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12084,
											"end": 12198,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12084,
											"end": 12198,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12084,
											"end": 12198,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12084,
											"end": 12198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12204,
											"end": 12388,
											"name": "tag",
											"source": 11,
											"value": "357"
										},
										{
											"begin": 12204,
											"end": 12388,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12303,
											"end": 12314,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12337,
											"end": 12343,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12332,
											"end": 12335,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12325,
											"end": 12344,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12377,
											"end": 12381,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12372,
											"end": 12375,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12368,
											"end": 12382,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12353,
											"end": 12382,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12353,
											"end": 12382,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12204,
											"end": 12388,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12204,
											"end": 12388,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12204,
											"end": 12388,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12204,
											"end": 12388,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12204,
											"end": 12388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12394,
											"end": 12526,
											"name": "tag",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 12394,
											"end": 12526,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12461,
											"end": 12465,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12484,
											"end": 12487,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12476,
											"end": 12487,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12476,
											"end": 12487,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12514,
											"end": 12518,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12509,
											"end": 12512,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12505,
											"end": 12519,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12497,
											"end": 12519,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12497,
											"end": 12519,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12394,
											"end": 12526,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12394,
											"end": 12526,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12394,
											"end": 12526,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12394,
											"end": 12526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12532,
											"end": 12640,
											"name": "tag",
											"source": 11,
											"value": "359"
										},
										{
											"begin": 12532,
											"end": 12640,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12609,
											"end": 12633,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "543"
										},
										{
											"begin": 12627,
											"end": 12632,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12609,
											"end": 12633,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 12609,
											"end": 12633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12609,
											"end": 12633,
											"name": "tag",
											"source": 11,
											"value": "543"
										},
										{
											"begin": 12609,
											"end": 12633,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12604,
											"end": 12607,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12597,
											"end": 12634,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12532,
											"end": 12640,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12532,
											"end": 12640,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12532,
											"end": 12640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12646,
											"end": 12825,
											"name": "tag",
											"source": 11,
											"value": "360"
										},
										{
											"begin": 12646,
											"end": 12825,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12715,
											"end": 12725,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12736,
											"end": 12782,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "545"
										},
										{
											"begin": 12778,
											"end": 12781,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12770,
											"end": 12776,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12736,
											"end": 12782,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "359"
										},
										{
											"begin": 12736,
											"end": 12782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12736,
											"end": 12782,
											"name": "tag",
											"source": 11,
											"value": "545"
										},
										{
											"begin": 12736,
											"end": 12782,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12814,
											"end": 12818,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12809,
											"end": 12812,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12805,
											"end": 12819,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12791,
											"end": 12819,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12791,
											"end": 12819,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12646,
											"end": 12825,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12646,
											"end": 12825,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12646,
											"end": 12825,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12646,
											"end": 12825,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12646,
											"end": 12825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12831,
											"end": 12944,
											"name": "tag",
											"source": 11,
											"value": "361"
										},
										{
											"begin": 12831,
											"end": 12944,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12901,
											"end": 12905,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12933,
											"end": 12937,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12928,
											"end": 12931,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12924,
											"end": 12938,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12916,
											"end": 12938,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12916,
											"end": 12938,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12831,
											"end": 12944,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12831,
											"end": 12944,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12831,
											"end": 12944,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12831,
											"end": 12944,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12980,
											"end": 13712,
											"name": "tag",
											"source": 11,
											"value": "362"
										},
										{
											"begin": 12980,
											"end": 13712,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13099,
											"end": 13102,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13128,
											"end": 13182,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "548"
										},
										{
											"begin": 13176,
											"end": 13181,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13128,
											"end": 13182,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 13128,
											"end": 13182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13128,
											"end": 13182,
											"name": "tag",
											"source": 11,
											"value": "548"
										},
										{
											"begin": 13128,
											"end": 13182,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13198,
											"end": 13284,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "549"
										},
										{
											"begin": 13277,
											"end": 13283,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13272,
											"end": 13275,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 13198,
											"end": 13284,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "357"
										},
										{
											"begin": 13198,
											"end": 13284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13198,
											"end": 13284,
											"name": "tag",
											"source": 11,
											"value": "549"
										},
										{
											"begin": 13198,
											"end": 13284,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13191,
											"end": 13284,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 13191,
											"end": 13284,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13308,
											"end": 13364,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "550"
										},
										{
											"begin": 13358,
											"end": 13363,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13308,
											"end": 13364,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 13308,
											"end": 13364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13308,
											"end": 13364,
											"name": "tag",
											"source": 11,
											"value": "550"
										},
										{
											"begin": 13308,
											"end": 13364,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13387,
											"end": 13394,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13418,
											"end": 13419,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13403,
											"end": 13687,
											"name": "tag",
											"source": 11,
											"value": "551"
										},
										{
											"begin": 13403,
											"end": 13687,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13428,
											"end": 13434,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13425,
											"end": 13426,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13422,
											"end": 13435,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 13403,
											"end": 13687,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 13403,
											"end": 13687,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "553"
										},
										{
											"begin": 13403,
											"end": 13687,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13504,
											"end": 13510,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13498,
											"end": 13511,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 13531,
											"end": 13594,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "554"
										},
										{
											"begin": 13590,
											"end": 13593,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 13575,
											"end": 13588,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13531,
											"end": 13594,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "360"
										},
										{
											"begin": 13531,
											"end": 13594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13531,
											"end": 13594,
											"name": "tag",
											"source": 11,
											"value": "554"
										},
										{
											"begin": 13531,
											"end": 13594,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13524,
											"end": 13594,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": 13524,
											"end": 13594,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13617,
											"end": 13677,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "555"
										},
										{
											"begin": 13670,
											"end": 13676,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13617,
											"end": 13677,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "361"
										},
										{
											"begin": 13617,
											"end": 13677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13617,
											"end": 13677,
											"name": "tag",
											"source": 11,
											"value": "555"
										},
										{
											"begin": 13617,
											"end": 13677,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13607,
											"end": 13677,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 13607,
											"end": 13677,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13463,
											"end": 13687,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13450,
											"end": 13451,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 13447,
											"end": 13448,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13443,
											"end": 13452,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13438,
											"end": 13452,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13438,
											"end": 13452,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13403,
											"end": 13687,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "551"
										},
										{
											"begin": 13403,
											"end": 13687,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13403,
											"end": 13687,
											"name": "tag",
											"source": 11,
											"value": "553"
										},
										{
											"begin": 13403,
											"end": 13687,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13407,
											"end": 13421,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13703,
											"end": 13706,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 13696,
											"end": 13706,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 13696,
											"end": 13706,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13104,
											"end": 13712,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13104,
											"end": 13712,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13104,
											"end": 13712,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12980,
											"end": 13712,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12980,
											"end": 13712,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12980,
											"end": 13712,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12980,
											"end": 13712,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12980,
											"end": 13712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13718,
											"end": 14091,
											"name": "tag",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 13718,
											"end": 14091,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13861,
											"end": 13865,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13899,
											"end": 13901,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13888,
											"end": 13897,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13884,
											"end": 13902,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13876,
											"end": 13902,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13876,
											"end": 13902,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13948,
											"end": 13957,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13942,
											"end": 13946,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13938,
											"end": 13958,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 13934,
											"end": 13935,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13923,
											"end": 13932,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13919,
											"end": 13936,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13912,
											"end": 13959,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13976,
											"end": 14084,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "557"
										},
										{
											"begin": 14079,
											"end": 14083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14070,
											"end": 14076,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 13976,
											"end": 14084,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "362"
										},
										{
											"begin": 13976,
											"end": 14084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13976,
											"end": 14084,
											"name": "tag",
											"source": 11,
											"value": "557"
										},
										{
											"begin": 13976,
											"end": 14084,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13968,
											"end": 14084,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13968,
											"end": 14084,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13718,
											"end": 14091,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 13718,
											"end": 14091,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13718,
											"end": 14091,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13718,
											"end": 14091,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13718,
											"end": 14091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14097,
											"end": 14213,
											"name": "tag",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 14097,
											"end": 14213,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14167,
											"end": 14188,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "559"
										},
										{
											"begin": 14182,
											"end": 14187,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14167,
											"end": 14188,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 14167,
											"end": 14188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14167,
											"end": 14188,
											"name": "tag",
											"source": 11,
											"value": "559"
										},
										{
											"begin": 14167,
											"end": 14188,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14160,
											"end": 14165,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14157,
											"end": 14189,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 14147,
											"end": 14207,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "560"
										},
										{
											"begin": 14147,
											"end": 14207,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14203,
											"end": 14204,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14200,
											"end": 14201,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14193,
											"end": 14205,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 14147,
											"end": 14207,
											"name": "tag",
											"source": 11,
											"value": "560"
										},
										{
											"begin": 14147,
											"end": 14207,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14097,
											"end": 14213,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14097,
											"end": 14213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14219,
											"end": 14352,
											"name": "tag",
											"source": 11,
											"value": "364"
										},
										{
											"begin": 14219,
											"end": 14352,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14262,
											"end": 14267,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14300,
											"end": 14306,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14287,
											"end": 14307,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 14278,
											"end": 14307,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14278,
											"end": 14307,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14316,
											"end": 14346,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "562"
										},
										{
											"begin": 14340,
											"end": 14345,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14316,
											"end": 14346,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 14316,
											"end": 14346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14316,
											"end": 14346,
											"name": "tag",
											"source": 11,
											"value": "562"
										},
										{
											"begin": 14316,
											"end": 14346,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14219,
											"end": 14352,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 14219,
											"end": 14352,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14219,
											"end": 14352,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14219,
											"end": 14352,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14219,
											"end": 14352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14358,
											"end": 14826,
											"name": "tag",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 14358,
											"end": 14826,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14423,
											"end": 14429,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14431,
											"end": 14437,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14480,
											"end": 14482,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 14468,
											"end": 14477,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14459,
											"end": 14466,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 14455,
											"end": 14478,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 14451,
											"end": 14483,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 14448,
											"end": 14567,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 14448,
											"end": 14567,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "564"
										},
										{
											"begin": 14448,
											"end": 14567,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14486,
											"end": 14565,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "565"
										},
										{
											"begin": 14486,
											"end": 14565,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 14486,
											"end": 14565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14486,
											"end": 14565,
											"name": "tag",
											"source": 11,
											"value": "565"
										},
										{
											"begin": 14486,
											"end": 14565,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14448,
											"end": 14567,
											"name": "tag",
											"source": 11,
											"value": "564"
										},
										{
											"begin": 14448,
											"end": 14567,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14606,
											"end": 14607,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14631,
											"end": 14684,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "566"
										},
										{
											"begin": 14676,
											"end": 14683,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 14667,
											"end": 14673,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14656,
											"end": 14665,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 14652,
											"end": 14674,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14631,
											"end": 14684,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 14631,
											"end": 14684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14631,
											"end": 14684,
											"name": "tag",
											"source": 11,
											"value": "566"
										},
										{
											"begin": 14631,
											"end": 14684,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14621,
											"end": 14684,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 14621,
											"end": 14684,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14577,
											"end": 14694,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14733,
											"end": 14735,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14759,
											"end": 14809,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "567"
										},
										{
											"begin": 14801,
											"end": 14808,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 14792,
											"end": 14798,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14781,
											"end": 14790,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 14777,
											"end": 14799,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14759,
											"end": 14809,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "364"
										},
										{
											"begin": 14759,
											"end": 14809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14759,
											"end": 14809,
											"name": "tag",
											"source": 11,
											"value": "567"
										},
										{
											"begin": 14759,
											"end": 14809,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14749,
											"end": 14809,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14749,
											"end": 14809,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14704,
											"end": 14819,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14358,
											"end": 14826,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 14358,
											"end": 14826,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14358,
											"end": 14826,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 14358,
											"end": 14826,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14358,
											"end": 14826,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14358,
											"end": 14826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14832,
											"end": 15161,
											"name": "tag",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 14832,
											"end": 15161,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14891,
											"end": 14897,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14940,
											"end": 14942,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14928,
											"end": 14937,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14919,
											"end": 14926,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 14915,
											"end": 14938,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 14911,
											"end": 14943,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 14908,
											"end": 15027,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 14908,
											"end": 15027,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "569"
										},
										{
											"begin": 14908,
											"end": 15027,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14946,
											"end": 15025,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "570"
										},
										{
											"begin": 14946,
											"end": 15025,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 14946,
											"end": 15025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14946,
											"end": 15025,
											"name": "tag",
											"source": 11,
											"value": "570"
										},
										{
											"begin": 14946,
											"end": 15025,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14908,
											"end": 15027,
											"name": "tag",
											"source": 11,
											"value": "569"
										},
										{
											"begin": 14908,
											"end": 15027,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15066,
											"end": 15067,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15091,
											"end": 15144,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "571"
										},
										{
											"begin": 15136,
											"end": 15143,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 15127,
											"end": 15133,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15116,
											"end": 15125,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 15112,
											"end": 15134,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15091,
											"end": 15144,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 15091,
											"end": 15144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15091,
											"end": 15144,
											"name": "tag",
											"source": 11,
											"value": "571"
										},
										{
											"begin": 15091,
											"end": 15144,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15081,
											"end": 15144,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15081,
											"end": 15144,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15037,
											"end": 15154,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14832,
											"end": 15161,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 14832,
											"end": 15161,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14832,
											"end": 15161,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14832,
											"end": 15161,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14832,
											"end": 15161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15167,
											"end": 15285,
											"name": "tag",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 15167,
											"end": 15285,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15254,
											"end": 15278,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "573"
										},
										{
											"begin": 15272,
											"end": 15277,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15254,
											"end": 15278,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 15254,
											"end": 15278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15254,
											"end": 15278,
											"name": "tag",
											"source": 11,
											"value": "573"
										},
										{
											"begin": 15254,
											"end": 15278,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15249,
											"end": 15252,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15242,
											"end": 15279,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15167,
											"end": 15285,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15167,
											"end": 15285,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15167,
											"end": 15285,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15291,
											"end": 15513,
											"name": "tag",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 15291,
											"end": 15513,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15384,
											"end": 15388,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15422,
											"end": 15424,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15411,
											"end": 15420,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15407,
											"end": 15425,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15399,
											"end": 15425,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15399,
											"end": 15425,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15435,
											"end": 15506,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "575"
										},
										{
											"begin": 15503,
											"end": 15504,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15492,
											"end": 15501,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15488,
											"end": 15505,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15479,
											"end": 15485,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 15435,
											"end": 15506,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 15435,
											"end": 15506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15435,
											"end": 15506,
											"name": "tag",
											"source": 11,
											"value": "575"
										},
										{
											"begin": 15435,
											"end": 15506,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15291,
											"end": 15513,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 15291,
											"end": 15513,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15291,
											"end": 15513,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15291,
											"end": 15513,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15291,
											"end": 15513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15519,
											"end": 15993,
											"name": "tag",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 15519,
											"end": 15993,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15587,
											"end": 15593,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15595,
											"end": 15601,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 15644,
											"end": 15646,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 15632,
											"end": 15641,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15623,
											"end": 15630,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 15619,
											"end": 15642,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 15615,
											"end": 15647,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 15612,
											"end": 15731,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 15612,
											"end": 15731,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "577"
										},
										{
											"begin": 15612,
											"end": 15731,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 15650,
											"end": 15729,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "578"
										},
										{
											"begin": 15650,
											"end": 15729,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 15650,
											"end": 15729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15650,
											"end": 15729,
											"name": "tag",
											"source": 11,
											"value": "578"
										},
										{
											"begin": 15650,
											"end": 15729,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15612,
											"end": 15731,
											"name": "tag",
											"source": 11,
											"value": "577"
										},
										{
											"begin": 15612,
											"end": 15731,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15770,
											"end": 15771,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15795,
											"end": 15848,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "579"
										},
										{
											"begin": 15840,
											"end": 15847,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 15831,
											"end": 15837,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15820,
											"end": 15829,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 15816,
											"end": 15838,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15795,
											"end": 15848,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 15795,
											"end": 15848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15795,
											"end": 15848,
											"name": "tag",
											"source": 11,
											"value": "579"
										},
										{
											"begin": 15795,
											"end": 15848,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15785,
											"end": 15848,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 15785,
											"end": 15848,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15741,
											"end": 15858,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15897,
											"end": 15899,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15923,
											"end": 15976,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "580"
										},
										{
											"begin": 15968,
											"end": 15975,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 15959,
											"end": 15965,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15948,
											"end": 15957,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 15944,
											"end": 15966,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15923,
											"end": 15976,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 15923,
											"end": 15976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15923,
											"end": 15976,
											"name": "tag",
											"source": 11,
											"value": "580"
										},
										{
											"begin": 15923,
											"end": 15976,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15913,
											"end": 15976,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15913,
											"end": 15976,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15868,
											"end": 15986,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15519,
											"end": 15993,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 15519,
											"end": 15993,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15519,
											"end": 15993,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 15519,
											"end": 15993,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15519,
											"end": 15993,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15519,
											"end": 15993,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15999,
											"end": 17088,
											"name": "tag",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 15999,
											"end": 17088,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16103,
											"end": 16109,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16111,
											"end": 16117,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 16119,
											"end": 16125,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16127,
											"end": 16133,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 16135,
											"end": 16141,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16184,
											"end": 16187,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 16172,
											"end": 16181,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 16163,
											"end": 16170,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 16159,
											"end": 16182,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 16155,
											"end": 16188,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 16152,
											"end": 16272,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 16152,
											"end": 16272,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "582"
										},
										{
											"begin": 16152,
											"end": 16272,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 16191,
											"end": 16270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "583"
										},
										{
											"begin": 16191,
											"end": 16270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 16191,
											"end": 16270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16191,
											"end": 16270,
											"name": "tag",
											"source": 11,
											"value": "583"
										},
										{
											"begin": 16191,
											"end": 16270,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16152,
											"end": 16272,
											"name": "tag",
											"source": 11,
											"value": "582"
										},
										{
											"begin": 16152,
											"end": 16272,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16311,
											"end": 16312,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16336,
											"end": 16389,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "584"
										},
										{
											"begin": 16381,
											"end": 16388,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 16372,
											"end": 16378,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16361,
											"end": 16370,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 16357,
											"end": 16379,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16336,
											"end": 16389,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 16336,
											"end": 16389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16336,
											"end": 16389,
											"name": "tag",
											"source": 11,
											"value": "584"
										},
										{
											"begin": 16336,
											"end": 16389,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16326,
											"end": 16389,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 16326,
											"end": 16389,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16282,
											"end": 16399,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16438,
											"end": 16440,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 16464,
											"end": 16517,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "585"
										},
										{
											"begin": 16509,
											"end": 16516,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 16500,
											"end": 16506,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16489,
											"end": 16498,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 16485,
											"end": 16507,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16464,
											"end": 16517,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 16464,
											"end": 16517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16464,
											"end": 16517,
											"name": "tag",
											"source": 11,
											"value": "585"
										},
										{
											"begin": 16464,
											"end": 16517,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16454,
											"end": 16517,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 16454,
											"end": 16517,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16409,
											"end": 16527,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16566,
											"end": 16568,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 16592,
											"end": 16645,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "586"
										},
										{
											"begin": 16637,
											"end": 16644,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 16628,
											"end": 16634,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16617,
											"end": 16626,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 16613,
											"end": 16635,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16592,
											"end": 16645,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 16592,
											"end": 16645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16592,
											"end": 16645,
											"name": "tag",
											"source": 11,
											"value": "586"
										},
										{
											"begin": 16592,
											"end": 16645,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16582,
											"end": 16645,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 16582,
											"end": 16645,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16537,
											"end": 16655,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16694,
											"end": 16696,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 16720,
											"end": 16773,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "587"
										},
										{
											"begin": 16765,
											"end": 16772,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 16756,
											"end": 16762,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16745,
											"end": 16754,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 16741,
											"end": 16763,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16720,
											"end": 16773,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 16720,
											"end": 16773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16720,
											"end": 16773,
											"name": "tag",
											"source": 11,
											"value": "587"
										},
										{
											"begin": 16720,
											"end": 16773,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16710,
											"end": 16773,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 16710,
											"end": 16773,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16665,
											"end": 16783,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16850,
											"end": 16853,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 16839,
											"end": 16848,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 16835,
											"end": 16854,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16822,
											"end": 16855,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 16882,
											"end": 16900,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16874,
											"end": 16880,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16871,
											"end": 16901,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 16868,
											"end": 16985,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 16868,
											"end": 16985,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "588"
										},
										{
											"begin": 16868,
											"end": 16985,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 16904,
											"end": 16983,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "589"
										},
										{
											"begin": 16904,
											"end": 16983,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 16904,
											"end": 16983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16904,
											"end": 16983,
											"name": "tag",
											"source": 11,
											"value": "589"
										},
										{
											"begin": 16904,
											"end": 16983,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16868,
											"end": 16985,
											"name": "tag",
											"source": 11,
											"value": "588"
										},
										{
											"begin": 16868,
											"end": 16985,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17009,
											"end": 17071,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "590"
										},
										{
											"begin": 17063,
											"end": 17070,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 17054,
											"end": 17060,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17043,
											"end": 17052,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 17039,
											"end": 17061,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17009,
											"end": 17071,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "352"
										},
										{
											"begin": 17009,
											"end": 17071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17009,
											"end": 17071,
											"name": "tag",
											"source": 11,
											"value": "590"
										},
										{
											"begin": 17009,
											"end": 17071,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16999,
											"end": 17071,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16999,
											"end": 17071,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16793,
											"end": 17081,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15999,
											"end": 17088,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 15999,
											"end": 17088,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 15999,
											"end": 17088,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15999,
											"end": 17088,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 15999,
											"end": 17088,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 15999,
											"end": 17088,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15999,
											"end": 17088,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 15999,
											"end": 17088,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15999,
											"end": 17088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17094,
											"end": 17333,
											"name": "tag",
											"source": 11,
											"value": "366"
										},
										{
											"begin": 17094,
											"end": 17333,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17234,
											"end": 17268,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135354D657461646174613A2062616C616E63652071756572792066"
										},
										{
											"begin": 17230,
											"end": 17231,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17222,
											"end": 17228,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17218,
											"end": 17232,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17211,
											"end": 17269,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17303,
											"end": 17325,
											"name": "PUSH",
											"source": 11,
											"value": "6F72206E6F6E6578697374656E7420746F6B656E000000000000000000000000"
										},
										{
											"begin": 17298,
											"end": 17300,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 17290,
											"end": 17296,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17286,
											"end": 17301,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17279,
											"end": 17326,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17094,
											"end": 17333,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17094,
											"end": 17333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17339,
											"end": 17705,
											"name": "tag",
											"source": 11,
											"value": "367"
										},
										{
											"begin": 17339,
											"end": 17705,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17481,
											"end": 17484,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17502,
											"end": 17569,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "593"
										},
										{
											"begin": 17566,
											"end": 17568,
											"name": "PUSH",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 17561,
											"end": 17564,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17502,
											"end": 17569,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 17502,
											"end": 17569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17502,
											"end": 17569,
											"name": "tag",
											"source": 11,
											"value": "593"
										},
										{
											"begin": 17502,
											"end": 17569,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17495,
											"end": 17569,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17495,
											"end": 17569,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17578,
											"end": 17671,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "594"
										},
										{
											"begin": 17667,
											"end": 17670,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17578,
											"end": 17671,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "366"
										},
										{
											"begin": 17578,
											"end": 17671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17578,
											"end": 17671,
											"name": "tag",
											"source": 11,
											"value": "594"
										},
										{
											"begin": 17578,
											"end": 17671,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17696,
											"end": 17698,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 17691,
											"end": 17694,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17687,
											"end": 17699,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17680,
											"end": 17699,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17680,
											"end": 17699,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17339,
											"end": 17705,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17339,
											"end": 17705,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17339,
											"end": 17705,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17339,
											"end": 17705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17711,
											"end": 18130,
											"name": "tag",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 17711,
											"end": 18130,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17877,
											"end": 17881,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17915,
											"end": 17917,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 17904,
											"end": 17913,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17900,
											"end": 17918,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17892,
											"end": 17918,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17892,
											"end": 17918,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17964,
											"end": 17973,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17958,
											"end": 17962,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17954,
											"end": 17974,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 17950,
											"end": 17951,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17939,
											"end": 17948,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17935,
											"end": 17952,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17928,
											"end": 17975,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17992,
											"end": 18123,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "596"
										},
										{
											"begin": 18118,
											"end": 18122,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17992,
											"end": 18123,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "367"
										},
										{
											"begin": 17992,
											"end": 18123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17992,
											"end": 18123,
											"name": "tag",
											"source": 11,
											"value": "596"
										},
										{
											"begin": 17992,
											"end": 18123,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17984,
											"end": 18123,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17984,
											"end": 18123,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17711,
											"end": 18130,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17711,
											"end": 18130,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17711,
											"end": 18130,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17711,
											"end": 18130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18136,
											"end": 18366,
											"name": "tag",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 18136,
											"end": 18366,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18276,
											"end": 18310,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A2062616C616E636520717565727920666F7220746865207A"
										},
										{
											"begin": 18272,
											"end": 18273,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18264,
											"end": 18270,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18260,
											"end": 18274,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18253,
											"end": 18311,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18345,
											"end": 18358,
											"name": "PUSH",
											"source": 11,
											"value": "65726F2061646472657373000000000000000000000000000000000000000000"
										},
										{
											"begin": 18340,
											"end": 18342,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 18332,
											"end": 18338,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18328,
											"end": 18343,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18321,
											"end": 18359,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18136,
											"end": 18366,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18136,
											"end": 18366,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18372,
											"end": 18738,
											"name": "tag",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 18372,
											"end": 18738,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18514,
											"end": 18517,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18535,
											"end": 18602,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "599"
										},
										{
											"begin": 18599,
											"end": 18601,
											"name": "PUSH",
											"source": 11,
											"value": "2B"
										},
										{
											"begin": 18594,
											"end": 18597,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 18535,
											"end": 18602,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 18535,
											"end": 18602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18535,
											"end": 18602,
											"name": "tag",
											"source": 11,
											"value": "599"
										},
										{
											"begin": 18535,
											"end": 18602,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18528,
											"end": 18602,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18528,
											"end": 18602,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18611,
											"end": 18704,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "600"
										},
										{
											"begin": 18700,
											"end": 18703,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18611,
											"end": 18704,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 18611,
											"end": 18704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18611,
											"end": 18704,
											"name": "tag",
											"source": 11,
											"value": "600"
										},
										{
											"begin": 18611,
											"end": 18704,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18729,
											"end": 18731,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 18724,
											"end": 18727,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18720,
											"end": 18732,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18713,
											"end": 18732,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18713,
											"end": 18732,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18372,
											"end": 18738,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18372,
											"end": 18738,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18372,
											"end": 18738,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18372,
											"end": 18738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18744,
											"end": 19163,
											"name": "tag",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 18744,
											"end": 19163,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18910,
											"end": 18914,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18948,
											"end": 18950,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 18937,
											"end": 18946,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18933,
											"end": 18951,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18925,
											"end": 18951,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18925,
											"end": 18951,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18997,
											"end": 19006,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18991,
											"end": 18995,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18987,
											"end": 19007,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 18983,
											"end": 18984,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18972,
											"end": 18981,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 18968,
											"end": 18985,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18961,
											"end": 19008,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19025,
											"end": 19156,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "602"
										},
										{
											"begin": 19151,
											"end": 19155,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19025,
											"end": 19156,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 19025,
											"end": 19156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19025,
											"end": 19156,
											"name": "tag",
											"source": 11,
											"value": "602"
										},
										{
											"begin": 19025,
											"end": 19156,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19017,
											"end": 19156,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19017,
											"end": 19156,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18744,
											"end": 19163,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18744,
											"end": 19163,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18744,
											"end": 19163,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18744,
											"end": 19163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19169,
											"end": 19349,
											"name": "tag",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 19169,
											"end": 19349,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19217,
											"end": 19294,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19214,
											"end": 19215,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19207,
											"end": 19295,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19314,
											"end": 19318,
											"name": "PUSH",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 19311,
											"end": 19312,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 19304,
											"end": 19319,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19338,
											"end": 19342,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 19335,
											"end": 19336,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19328,
											"end": 19343,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 19355,
											"end": 19675,
											"name": "tag",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 19355,
											"end": 19675,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19399,
											"end": 19405,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19436,
											"end": 19437,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 19430,
											"end": 19434,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19426,
											"end": 19438,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 19416,
											"end": 19438,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19416,
											"end": 19438,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19483,
											"end": 19484,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 19477,
											"end": 19481,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19473,
											"end": 19485,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 19504,
											"end": 19522,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 19494,
											"end": 19575,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "605"
										},
										{
											"begin": 19494,
											"end": 19575,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 19560,
											"end": 19564,
											"name": "PUSH",
											"source": 11,
											"value": "7F"
										},
										{
											"begin": 19552,
											"end": 19558,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19548,
											"end": 19565,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 19538,
											"end": 19565,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 19538,
											"end": 19565,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19494,
											"end": 19575,
											"name": "tag",
											"source": 11,
											"value": "605"
										},
										{
											"begin": 19494,
											"end": 19575,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19622,
											"end": 19624,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 19614,
											"end": 19620,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19611,
											"end": 19625,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 19591,
											"end": 19609,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19588,
											"end": 19626,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 19585,
											"end": 19669,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "606"
										},
										{
											"begin": 19585,
											"end": 19669,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 19641,
											"end": 19659,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "607"
										},
										{
											"begin": 19641,
											"end": 19659,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 19641,
											"end": 19659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19641,
											"end": 19659,
											"name": "tag",
											"source": 11,
											"value": "607"
										},
										{
											"begin": 19641,
											"end": 19659,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19585,
											"end": 19669,
											"name": "tag",
											"source": 11,
											"value": "606"
										},
										{
											"begin": 19585,
											"end": 19669,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19406,
											"end": 19675,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19355,
											"end": 19675,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 19355,
											"end": 19675,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19355,
											"end": 19675,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19355,
											"end": 19675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19681,
											"end": 19908,
											"name": "tag",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 19681,
											"end": 19908,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19821,
											"end": 19855,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
										},
										{
											"begin": 19817,
											"end": 19818,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19809,
											"end": 19815,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19805,
											"end": 19819,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19798,
											"end": 19856,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19890,
											"end": 19900,
											"name": "PUSH",
											"source": 11,
											"value": "6D69736D61746368000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19885,
											"end": 19887,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 19877,
											"end": 19883,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19873,
											"end": 19888,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19866,
											"end": 19901,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19681,
											"end": 19908,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19681,
											"end": 19908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19914,
											"end": 20280,
											"name": "tag",
											"source": 11,
											"value": "372"
										},
										{
											"begin": 19914,
											"end": 20280,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20056,
											"end": 20059,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20077,
											"end": 20144,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "610"
										},
										{
											"begin": 20141,
											"end": 20143,
											"name": "PUSH",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 20136,
											"end": 20139,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 20077,
											"end": 20144,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 20077,
											"end": 20144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20077,
											"end": 20144,
											"name": "tag",
											"source": 11,
											"value": "610"
										},
										{
											"begin": 20077,
											"end": 20144,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20070,
											"end": 20144,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20070,
											"end": 20144,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20153,
											"end": 20246,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "611"
										},
										{
											"begin": 20242,
											"end": 20245,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20153,
											"end": 20246,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 20153,
											"end": 20246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20153,
											"end": 20246,
											"name": "tag",
											"source": 11,
											"value": "611"
										},
										{
											"begin": 20153,
											"end": 20246,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20271,
											"end": 20273,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 20266,
											"end": 20269,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20262,
											"end": 20274,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20255,
											"end": 20274,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20255,
											"end": 20274,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19914,
											"end": 20280,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 19914,
											"end": 20280,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19914,
											"end": 20280,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19914,
											"end": 20280,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20286,
											"end": 20705,
											"name": "tag",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 20286,
											"end": 20705,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20452,
											"end": 20456,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20490,
											"end": 20492,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 20479,
											"end": 20488,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20475,
											"end": 20493,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20467,
											"end": 20493,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20467,
											"end": 20493,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20539,
											"end": 20548,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20533,
											"end": 20537,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20529,
											"end": 20549,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 20525,
											"end": 20526,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20514,
											"end": 20523,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 20510,
											"end": 20527,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20503,
											"end": 20550,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 20567,
											"end": 20698,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "613"
										},
										{
											"begin": 20693,
											"end": 20697,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20567,
											"end": 20698,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "372"
										},
										{
											"begin": 20567,
											"end": 20698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20567,
											"end": 20698,
											"name": "tag",
											"source": 11,
											"value": "613"
										},
										{
											"begin": 20567,
											"end": 20698,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20559,
											"end": 20698,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20559,
											"end": 20698,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20286,
											"end": 20705,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20286,
											"end": 20705,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20286,
											"end": 20705,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20286,
											"end": 20705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20711,
											"end": 20935,
											"name": "tag",
											"source": 11,
											"value": "373"
										},
										{
											"begin": 20711,
											"end": 20935,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20851,
											"end": 20885,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 20847,
											"end": 20848,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20839,
											"end": 20845,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20835,
											"end": 20849,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20828,
											"end": 20886,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 20920,
											"end": 20927,
											"name": "PUSH",
											"source": 11,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20915,
											"end": 20917,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 20907,
											"end": 20913,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20903,
											"end": 20918,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20896,
											"end": 20928,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 20711,
											"end": 20935,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20711,
											"end": 20935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20941,
											"end": 21307,
											"name": "tag",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 20941,
											"end": 21307,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21083,
											"end": 21086,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21104,
											"end": 21171,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "616"
										},
										{
											"begin": 21168,
											"end": 21170,
											"name": "PUSH",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 21163,
											"end": 21166,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 21104,
											"end": 21171,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 21104,
											"end": 21171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21104,
											"end": 21171,
											"name": "tag",
											"source": 11,
											"value": "616"
										},
										{
											"begin": 21104,
											"end": 21171,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21097,
											"end": 21171,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 21097,
											"end": 21171,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21180,
											"end": 21273,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "617"
										},
										{
											"begin": 21269,
											"end": 21272,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21180,
											"end": 21273,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "373"
										},
										{
											"begin": 21180,
											"end": 21273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21180,
											"end": 21273,
											"name": "tag",
											"source": 11,
											"value": "617"
										},
										{
											"begin": 21180,
											"end": 21273,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21298,
											"end": 21300,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 21293,
											"end": 21296,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21289,
											"end": 21301,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21282,
											"end": 21301,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21282,
											"end": 21301,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20941,
											"end": 21307,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20941,
											"end": 21307,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20941,
											"end": 21307,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20941,
											"end": 21307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21313,
											"end": 21732,
											"name": "tag",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 21313,
											"end": 21732,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21479,
											"end": 21483,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21517,
											"end": 21519,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 21506,
											"end": 21515,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21502,
											"end": 21520,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21494,
											"end": 21520,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21494,
											"end": 21520,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21566,
											"end": 21575,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21560,
											"end": 21564,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21556,
											"end": 21576,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 21552,
											"end": 21553,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21541,
											"end": 21550,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 21537,
											"end": 21554,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21530,
											"end": 21577,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 21594,
											"end": 21725,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "619"
										},
										{
											"begin": 21720,
											"end": 21724,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21594,
											"end": 21725,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 21594,
											"end": 21725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21594,
											"end": 21725,
											"name": "tag",
											"source": 11,
											"value": "619"
										},
										{
											"begin": 21594,
											"end": 21725,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21586,
											"end": 21725,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21586,
											"end": 21725,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21313,
											"end": 21732,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 21313,
											"end": 21732,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21313,
											"end": 21732,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21313,
											"end": 21732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21738,
											"end": 21975,
											"name": "tag",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 21738,
											"end": 21975,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21878,
											"end": 21912,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A207472616E736665722063616C6C6572206973206E6F7420"
										},
										{
											"begin": 21874,
											"end": 21875,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21866,
											"end": 21872,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21862,
											"end": 21876,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21855,
											"end": 21913,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 21947,
											"end": 21967,
											"name": "PUSH",
											"source": 11,
											"value": "6F776E6572206E6F7220617070726F7665640000000000000000000000000000"
										},
										{
											"begin": 21942,
											"end": 21944,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 21934,
											"end": 21940,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21930,
											"end": 21945,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21923,
											"end": 21968,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 21738,
											"end": 21975,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21738,
											"end": 21975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21981,
											"end": 22347,
											"name": "tag",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 21981,
											"end": 22347,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22123,
											"end": 22126,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22144,
											"end": 22211,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "622"
										},
										{
											"begin": 22208,
											"end": 22210,
											"name": "PUSH",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 22203,
											"end": 22206,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 22144,
											"end": 22211,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 22144,
											"end": 22211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22144,
											"end": 22211,
											"name": "tag",
											"source": 11,
											"value": "622"
										},
										{
											"begin": 22144,
											"end": 22211,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22137,
											"end": 22211,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 22137,
											"end": 22211,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22220,
											"end": 22313,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "623"
										},
										{
											"begin": 22309,
											"end": 22312,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 22220,
											"end": 22313,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 22220,
											"end": 22313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22220,
											"end": 22313,
											"name": "tag",
											"source": 11,
											"value": "623"
										},
										{
											"begin": 22220,
											"end": 22313,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22338,
											"end": 22340,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 22333,
											"end": 22336,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 22329,
											"end": 22341,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 22322,
											"end": 22341,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22322,
											"end": 22341,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21981,
											"end": 22347,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 21981,
											"end": 22347,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21981,
											"end": 22347,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21981,
											"end": 22347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22353,
											"end": 22772,
											"name": "tag",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 22353,
											"end": 22772,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22519,
											"end": 22523,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22557,
											"end": 22559,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 22546,
											"end": 22555,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 22542,
											"end": 22560,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 22534,
											"end": 22560,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22534,
											"end": 22560,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22606,
											"end": 22615,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 22600,
											"end": 22604,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 22596,
											"end": 22616,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 22592,
											"end": 22593,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22581,
											"end": 22590,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 22577,
											"end": 22594,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 22570,
											"end": 22617,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 22634,
											"end": 22765,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "625"
										},
										{
											"begin": 22760,
											"end": 22764,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 22634,
											"end": 22765,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 22634,
											"end": 22765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22634,
											"end": 22765,
											"name": "tag",
											"source": 11,
											"value": "625"
										},
										{
											"begin": 22634,
											"end": 22765,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22626,
											"end": 22765,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22626,
											"end": 22765,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22353,
											"end": 22772,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 22353,
											"end": 22772,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22353,
											"end": 22772,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22353,
											"end": 22772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22778,
											"end": 22958,
											"name": "tag",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 22778,
											"end": 22958,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22826,
											"end": 22903,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22823,
											"end": 22824,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22816,
											"end": 22904,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 22923,
											"end": 22927,
											"name": "PUSH",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 22920,
											"end": 22921,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 22913,
											"end": 22928,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 22947,
											"end": 22951,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 22944,
											"end": 22945,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22937,
											"end": 22952,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 22964,
											"end": 23144,
											"name": "tag",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 22964,
											"end": 23144,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23012,
											"end": 23089,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23009,
											"end": 23010,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 23002,
											"end": 23090,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 23109,
											"end": 23113,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 23106,
											"end": 23107,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 23099,
											"end": 23114,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 23133,
											"end": 23137,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 23130,
											"end": 23131,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 23123,
											"end": 23138,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 23150,
											"end": 23383,
											"name": "tag",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 23150,
											"end": 23383,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23189,
											"end": 23192,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 23212,
											"end": 23236,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "629"
										},
										{
											"begin": 23230,
											"end": 23235,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 23212,
											"end": 23236,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 23212,
											"end": 23236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23212,
											"end": 23236,
											"name": "tag",
											"source": 11,
											"value": "629"
										},
										{
											"begin": 23212,
											"end": 23236,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23203,
											"end": 23236,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 23203,
											"end": 23236,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23258,
											"end": 23324,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23251,
											"end": 23256,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 23248,
											"end": 23325,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 23245,
											"end": 23348,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "630"
										},
										{
											"begin": 23245,
											"end": 23348,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 23328,
											"end": 23346,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "631"
										},
										{
											"begin": 23328,
											"end": 23346,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 23328,
											"end": 23346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23328,
											"end": 23346,
											"name": "tag",
											"source": 11,
											"value": "631"
										},
										{
											"begin": 23328,
											"end": 23346,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23245,
											"end": 23348,
											"name": "tag",
											"source": 11,
											"value": "630"
										},
										{
											"begin": 23245,
											"end": 23348,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23375,
											"end": 23376,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 23368,
											"end": 23373,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 23364,
											"end": 23377,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 23357,
											"end": 23377,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 23357,
											"end": 23377,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23150,
											"end": 23383,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 23150,
											"end": 23383,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 23150,
											"end": 23383,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23150,
											"end": 23383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23389,
											"end": 24023,
											"name": "tag",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 23389,
											"end": 24023,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23610,
											"end": 23614,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 23648,
											"end": 23650,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 23637,
											"end": 23646,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 23633,
											"end": 23651,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 23625,
											"end": 23651,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 23625,
											"end": 23651,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23697,
											"end": 23706,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 23691,
											"end": 23695,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 23687,
											"end": 23707,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 23683,
											"end": 23684,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 23672,
											"end": 23681,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 23668,
											"end": 23685,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 23661,
											"end": 23708,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 23725,
											"end": 23833,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "633"
										},
										{
											"begin": 23828,
											"end": 23832,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 23819,
											"end": 23825,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 23725,
											"end": 23833,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "362"
										},
										{
											"begin": 23725,
											"end": 23833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23725,
											"end": 23833,
											"name": "tag",
											"source": 11,
											"value": "633"
										},
										{
											"begin": 23725,
											"end": 23833,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23717,
											"end": 23833,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 23717,
											"end": 23833,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23880,
											"end": 23889,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 23874,
											"end": 23878,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 23870,
											"end": 23890,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 23865,
											"end": 23867,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 23854,
											"end": 23863,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 23850,
											"end": 23868,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 23843,
											"end": 23891,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 23908,
											"end": 24016,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "634"
										},
										{
											"begin": 24011,
											"end": 24015,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 24002,
											"end": 24008,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 23908,
											"end": 24016,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "362"
										},
										{
											"begin": 23908,
											"end": 24016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23908,
											"end": 24016,
											"name": "tag",
											"source": 11,
											"value": "634"
										},
										{
											"begin": 23908,
											"end": 24016,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23900,
											"end": 24016,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 23900,
											"end": 24016,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23389,
											"end": 24023,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 23389,
											"end": 24023,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 23389,
											"end": 24023,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23389,
											"end": 24023,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23389,
											"end": 24023,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23389,
											"end": 24023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 24029,
											"end": 24257,
											"name": "tag",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 24029,
											"end": 24257,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 24169,
											"end": 24203,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A206163636F756E747320616E6420696473206C656E677468"
										},
										{
											"begin": 24165,
											"end": 24166,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 24157,
											"end": 24163,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 24153,
											"end": 24167,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 24146,
											"end": 24204,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 24238,
											"end": 24249,
											"name": "PUSH",
											"source": 11,
											"value": "206D69736D617463680000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24233,
											"end": 24235,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 24225,
											"end": 24231,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 24221,
											"end": 24236,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 24214,
											"end": 24250,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 24029,
											"end": 24257,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24029,
											"end": 24257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 24263,
											"end": 24629,
											"name": "tag",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 24263,
											"end": 24629,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 24405,
											"end": 24408,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 24426,
											"end": 24493,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "637"
										},
										{
											"begin": 24490,
											"end": 24492,
											"name": "PUSH",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 24485,
											"end": 24488,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 24426,
											"end": 24493,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 24426,
											"end": 24493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 24426,
											"end": 24493,
											"name": "tag",
											"source": 11,
											"value": "637"
										},
										{
											"begin": 24426,
											"end": 24493,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 24419,
											"end": 24493,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 24419,
											"end": 24493,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24502,
											"end": 24595,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "638"
										},
										{
											"begin": 24591,
											"end": 24594,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 24502,
											"end": 24595,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 24502,
											"end": 24595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 24502,
											"end": 24595,
											"name": "tag",
											"source": 11,
											"value": "638"
										},
										{
											"begin": 24502,
											"end": 24595,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 24620,
											"end": 24622,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 24615,
											"end": 24618,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 24611,
											"end": 24623,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 24604,
											"end": 24623,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 24604,
											"end": 24623,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24263,
											"end": 24629,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 24263,
											"end": 24629,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 24263,
											"end": 24629,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24263,
											"end": 24629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 24635,
											"end": 25054,
											"name": "tag",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 24635,
											"end": 25054,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 24801,
											"end": 24805,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 24839,
											"end": 24841,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 24828,
											"end": 24837,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 24824,
											"end": 24842,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 24816,
											"end": 24842,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 24816,
											"end": 24842,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24888,
											"end": 24897,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 24882,
											"end": 24886,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 24878,
											"end": 24898,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 24874,
											"end": 24875,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 24863,
											"end": 24872,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 24859,
											"end": 24876,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 24852,
											"end": 24899,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 24916,
											"end": 25047,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "640"
										},
										{
											"begin": 25042,
											"end": 25046,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 24916,
											"end": 25047,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 24916,
											"end": 25047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 24916,
											"end": 25047,
											"name": "tag",
											"source": 11,
											"value": "640"
										},
										{
											"begin": 24916,
											"end": 25047,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 24908,
											"end": 25047,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 24908,
											"end": 25047,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24635,
											"end": 25054,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 24635,
											"end": 25054,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 24635,
											"end": 25054,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24635,
											"end": 25054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 25060,
											"end": 25296,
											"name": "tag",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 25060,
											"end": 25296,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 25200,
											"end": 25234,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A2062617463682062616C616E636520717565727920666F72"
										},
										{
											"begin": 25196,
											"end": 25197,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 25188,
											"end": 25194,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 25184,
											"end": 25198,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 25177,
											"end": 25235,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 25269,
											"end": 25288,
											"name": "PUSH",
											"source": 11,
											"value": "20746865207A65726F2061646472657373000000000000000000000000000000"
										},
										{
											"begin": 25264,
											"end": 25266,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 25256,
											"end": 25262,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 25252,
											"end": 25267,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 25245,
											"end": 25289,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 25060,
											"end": 25296,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25060,
											"end": 25296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 25302,
											"end": 25668,
											"name": "tag",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 25302,
											"end": 25668,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 25444,
											"end": 25447,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 25465,
											"end": 25532,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "643"
										},
										{
											"begin": 25529,
											"end": 25531,
											"name": "PUSH",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 25524,
											"end": 25527,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 25465,
											"end": 25532,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 25465,
											"end": 25532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 25465,
											"end": 25532,
											"name": "tag",
											"source": 11,
											"value": "643"
										},
										{
											"begin": 25465,
											"end": 25532,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 25458,
											"end": 25532,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 25458,
											"end": 25532,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25541,
											"end": 25634,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "644"
										},
										{
											"begin": 25630,
											"end": 25633,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 25541,
											"end": 25634,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 25541,
											"end": 25634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 25541,
											"end": 25634,
											"name": "tag",
											"source": 11,
											"value": "644"
										},
										{
											"begin": 25541,
											"end": 25634,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 25659,
											"end": 25661,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 25654,
											"end": 25657,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 25650,
											"end": 25662,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 25643,
											"end": 25662,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 25643,
											"end": 25662,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25302,
											"end": 25668,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 25302,
											"end": 25668,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 25302,
											"end": 25668,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25302,
											"end": 25668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 25674,
											"end": 26093,
											"name": "tag",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 25674,
											"end": 26093,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 25840,
											"end": 25844,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 25878,
											"end": 25880,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 25867,
											"end": 25876,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 25863,
											"end": 25881,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 25855,
											"end": 25881,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 25855,
											"end": 25881,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25927,
											"end": 25936,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 25921,
											"end": 25925,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 25917,
											"end": 25937,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 25913,
											"end": 25914,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 25902,
											"end": 25911,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 25898,
											"end": 25915,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 25891,
											"end": 25938,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 25955,
											"end": 26086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "646"
										},
										{
											"begin": 26081,
											"end": 26085,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 25955,
											"end": 26086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 25955,
											"end": 26086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 25955,
											"end": 26086,
											"name": "tag",
											"source": 11,
											"value": "646"
										},
										{
											"begin": 25955,
											"end": 26086,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 25947,
											"end": 26086,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 25947,
											"end": 26086,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25674,
											"end": 26093,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 25674,
											"end": 26093,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 25674,
											"end": 26093,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25674,
											"end": 26093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 26099,
											"end": 26327,
											"name": "tag",
											"source": 11,
											"value": "382"
										},
										{
											"begin": 26099,
											"end": 26327,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 26239,
											"end": 26273,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A2073657474696E6720617070726F76616C20737461747573"
										},
										{
											"begin": 26235,
											"end": 26236,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 26227,
											"end": 26233,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 26223,
											"end": 26237,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 26216,
											"end": 26274,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 26308,
											"end": 26319,
											"name": "PUSH",
											"source": 11,
											"value": "20666F722073656C660000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26303,
											"end": 26305,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 26295,
											"end": 26301,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 26291,
											"end": 26306,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 26284,
											"end": 26320,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 26099,
											"end": 26327,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 26099,
											"end": 26327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 26333,
											"end": 26699,
											"name": "tag",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 26333,
											"end": 26699,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 26475,
											"end": 26478,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 26496,
											"end": 26563,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "649"
										},
										{
											"begin": 26560,
											"end": 26562,
											"name": "PUSH",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 26555,
											"end": 26558,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 26496,
											"end": 26563,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 26496,
											"end": 26563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 26496,
											"end": 26563,
											"name": "tag",
											"source": 11,
											"value": "649"
										},
										{
											"begin": 26496,
											"end": 26563,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 26489,
											"end": 26563,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 26489,
											"end": 26563,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 26572,
											"end": 26665,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "650"
										},
										{
											"begin": 26661,
											"end": 26664,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 26572,
											"end": 26665,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "382"
										},
										{
											"begin": 26572,
											"end": 26665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 26572,
											"end": 26665,
											"name": "tag",
											"source": 11,
											"value": "650"
										},
										{
											"begin": 26572,
											"end": 26665,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 26690,
											"end": 26692,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 26685,
											"end": 26688,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 26681,
											"end": 26693,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 26674,
											"end": 26693,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 26674,
											"end": 26693,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 26333,
											"end": 26699,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 26333,
											"end": 26699,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 26333,
											"end": 26699,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 26333,
											"end": 26699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 26705,
											"end": 27124,
											"name": "tag",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 26705,
											"end": 27124,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 26871,
											"end": 26875,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 26909,
											"end": 26911,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 26898,
											"end": 26907,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 26894,
											"end": 26912,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 26886,
											"end": 26912,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 26886,
											"end": 26912,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 26958,
											"end": 26967,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 26952,
											"end": 26956,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 26948,
											"end": 26968,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 26944,
											"end": 26945,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 26933,
											"end": 26942,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 26929,
											"end": 26946,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 26922,
											"end": 26969,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 26986,
											"end": 27117,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "652"
										},
										{
											"begin": 27112,
											"end": 27116,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 26986,
											"end": 27117,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 26986,
											"end": 27117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 26986,
											"end": 27117,
											"name": "tag",
											"source": 11,
											"value": "652"
										},
										{
											"begin": 26986,
											"end": 27117,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 26978,
											"end": 27117,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 26978,
											"end": 27117,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 26705,
											"end": 27124,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 26705,
											"end": 27124,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 26705,
											"end": 27124,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 26705,
											"end": 27124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 27130,
											"end": 27365,
											"name": "tag",
											"source": 11,
											"value": "384"
										},
										{
											"begin": 27130,
											"end": 27365,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 27270,
											"end": 27304,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135354D657461646174613A2055524920717565727920666F72206E"
										},
										{
											"begin": 27266,
											"end": 27267,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 27258,
											"end": 27264,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 27254,
											"end": 27268,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 27247,
											"end": 27305,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 27339,
											"end": 27357,
											"name": "PUSH",
											"source": 11,
											"value": "6F6E6578697374656E7420746F6B656E00000000000000000000000000000000"
										},
										{
											"begin": 27334,
											"end": 27336,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 27326,
											"end": 27332,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 27322,
											"end": 27337,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 27315,
											"end": 27358,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 27130,
											"end": 27365,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 27130,
											"end": 27365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 27371,
											"end": 27737,
											"name": "tag",
											"source": 11,
											"value": "385"
										},
										{
											"begin": 27371,
											"end": 27737,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 27513,
											"end": 27516,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 27534,
											"end": 27601,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "655"
										},
										{
											"begin": 27598,
											"end": 27600,
											"name": "PUSH",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 27593,
											"end": 27596,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 27534,
											"end": 27601,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 27534,
											"end": 27601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 27534,
											"end": 27601,
											"name": "tag",
											"source": 11,
											"value": "655"
										},
										{
											"begin": 27534,
											"end": 27601,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 27527,
											"end": 27601,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 27527,
											"end": 27601,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 27610,
											"end": 27703,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "656"
										},
										{
											"begin": 27699,
											"end": 27702,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 27610,
											"end": 27703,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "384"
										},
										{
											"begin": 27610,
											"end": 27703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 27610,
											"end": 27703,
											"name": "tag",
											"source": 11,
											"value": "656"
										},
										{
											"begin": 27610,
											"end": 27703,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 27728,
											"end": 27730,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 27723,
											"end": 27726,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 27719,
											"end": 27731,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 27712,
											"end": 27731,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 27712,
											"end": 27731,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 27371,
											"end": 27737,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 27371,
											"end": 27737,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 27371,
											"end": 27737,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 27371,
											"end": 27737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 27743,
											"end": 28162,
											"name": "tag",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 27743,
											"end": 28162,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 27909,
											"end": 27913,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 27947,
											"end": 27949,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 27936,
											"end": 27945,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 27932,
											"end": 27950,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 27924,
											"end": 27950,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 27924,
											"end": 27950,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 27996,
											"end": 28005,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 27990,
											"end": 27994,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 27986,
											"end": 28006,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 27982,
											"end": 27983,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 27971,
											"end": 27980,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 27967,
											"end": 27984,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 27960,
											"end": 28007,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 28024,
											"end": 28155,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "658"
										},
										{
											"begin": 28150,
											"end": 28154,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 28024,
											"end": 28155,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "385"
										},
										{
											"begin": 28024,
											"end": 28155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 28024,
											"end": 28155,
											"name": "tag",
											"source": 11,
											"value": "658"
										},
										{
											"begin": 28024,
											"end": 28155,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 28016,
											"end": 28155,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 28016,
											"end": 28155,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 27743,
											"end": 28162,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 27743,
											"end": 28162,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 27743,
											"end": 28162,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 27743,
											"end": 28162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 28168,
											"end": 28316,
											"name": "tag",
											"source": 11,
											"value": "386"
										},
										{
											"begin": 28168,
											"end": 28316,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 28270,
											"end": 28281,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 28307,
											"end": 28310,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 28292,
											"end": 28310,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 28292,
											"end": 28310,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 28168,
											"end": 28316,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 28168,
											"end": 28316,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 28168,
											"end": 28316,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 28168,
											"end": 28316,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 28168,
											"end": 28316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 28322,
											"end": 28712,
											"name": "tag",
											"source": 11,
											"value": "387"
										},
										{
											"begin": 28322,
											"end": 28712,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 28428,
											"end": 28431,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 28456,
											"end": 28495,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "661"
										},
										{
											"begin": 28489,
											"end": 28494,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 28456,
											"end": 28495,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 28456,
											"end": 28495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 28456,
											"end": 28495,
											"name": "tag",
											"source": 11,
											"value": "661"
										},
										{
											"begin": 28456,
											"end": 28495,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 28511,
											"end": 28600,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "662"
										},
										{
											"begin": 28593,
											"end": 28599,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 28588,
											"end": 28591,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 28511,
											"end": 28600,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "386"
										},
										{
											"begin": 28511,
											"end": 28600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 28511,
											"end": 28600,
											"name": "tag",
											"source": 11,
											"value": "662"
										},
										{
											"begin": 28511,
											"end": 28600,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 28504,
											"end": 28600,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 28504,
											"end": 28600,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 28609,
											"end": 28674,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "663"
										},
										{
											"begin": 28667,
											"end": 28673,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 28662,
											"end": 28665,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 28655,
											"end": 28659,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 28648,
											"end": 28653,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 28644,
											"end": 28660,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 28609,
											"end": 28674,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 28609,
											"end": 28674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 28609,
											"end": 28674,
											"name": "tag",
											"source": 11,
											"value": "663"
										},
										{
											"begin": 28609,
											"end": 28674,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 28699,
											"end": 28705,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 28694,
											"end": 28697,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 28690,
											"end": 28706,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 28683,
											"end": 28706,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 28683,
											"end": 28706,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 28432,
											"end": 28712,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 28322,
											"end": 28712,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 28322,
											"end": 28712,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 28322,
											"end": 28712,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 28322,
											"end": 28712,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 28322,
											"end": 28712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 28718,
											"end": 29153,
											"name": "tag",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 28718,
											"end": 29153,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 28898,
											"end": 28901,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 28920,
											"end": 29015,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "665"
										},
										{
											"begin": 29011,
											"end": 29014,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 29002,
											"end": 29008,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 28920,
											"end": 29015,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "387"
										},
										{
											"begin": 28920,
											"end": 29015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 28920,
											"end": 29015,
											"name": "tag",
											"source": 11,
											"value": "665"
										},
										{
											"begin": 28920,
											"end": 29015,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 28913,
											"end": 29015,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 28913,
											"end": 29015,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 29032,
											"end": 29127,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "666"
										},
										{
											"begin": 29123,
											"end": 29126,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 29114,
											"end": 29120,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 29032,
											"end": 29127,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "387"
										},
										{
											"begin": 29032,
											"end": 29127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 29032,
											"end": 29127,
											"name": "tag",
											"source": 11,
											"value": "666"
										},
										{
											"begin": 29032,
											"end": 29127,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 29025,
											"end": 29127,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 29025,
											"end": 29127,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 29144,
											"end": 29147,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 29137,
											"end": 29147,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 29137,
											"end": 29147,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 28718,
											"end": 29153,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 28718,
											"end": 29153,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 28718,
											"end": 29153,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 28718,
											"end": 29153,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 28718,
											"end": 29153,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 28718,
											"end": 29153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 29159,
											"end": 29387,
											"name": "tag",
											"source": 11,
											"value": "388"
										},
										{
											"begin": 29159,
											"end": 29387,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 29299,
											"end": 29333,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72"
										},
										{
											"begin": 29295,
											"end": 29296,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 29287,
											"end": 29293,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 29283,
											"end": 29297,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 29276,
											"end": 29334,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 29368,
											"end": 29379,
											"name": "PUSH",
											"source": 11,
											"value": "20617070726F7665640000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29363,
											"end": 29365,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 29355,
											"end": 29361,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 29351,
											"end": 29366,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 29344,
											"end": 29380,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 29159,
											"end": 29387,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 29159,
											"end": 29387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 29393,
											"end": 29759,
											"name": "tag",
											"source": 11,
											"value": "389"
										},
										{
											"begin": 29393,
											"end": 29759,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 29535,
											"end": 29538,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 29556,
											"end": 29623,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "669"
										},
										{
											"begin": 29620,
											"end": 29622,
											"name": "PUSH",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 29615,
											"end": 29618,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 29556,
											"end": 29623,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 29556,
											"end": 29623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 29556,
											"end": 29623,
											"name": "tag",
											"source": 11,
											"value": "669"
										},
										{
											"begin": 29556,
											"end": 29623,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 29549,
											"end": 29623,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 29549,
											"end": 29623,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 29632,
											"end": 29725,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "670"
										},
										{
											"begin": 29721,
											"end": 29724,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 29632,
											"end": 29725,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "388"
										},
										{
											"begin": 29632,
											"end": 29725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 29632,
											"end": 29725,
											"name": "tag",
											"source": 11,
											"value": "670"
										},
										{
											"begin": 29632,
											"end": 29725,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 29750,
											"end": 29752,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 29745,
											"end": 29748,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 29741,
											"end": 29753,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 29734,
											"end": 29753,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 29734,
											"end": 29753,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 29393,
											"end": 29759,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 29393,
											"end": 29759,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 29393,
											"end": 29759,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 29393,
											"end": 29759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 29765,
											"end": 30184,
											"name": "tag",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 29765,
											"end": 30184,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 29931,
											"end": 29935,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 29969,
											"end": 29971,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 29958,
											"end": 29967,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 29954,
											"end": 29972,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 29946,
											"end": 29972,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 29946,
											"end": 29972,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 30018,
											"end": 30027,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 30012,
											"end": 30016,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 30008,
											"end": 30028,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 30004,
											"end": 30005,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 29993,
											"end": 30002,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 29989,
											"end": 30006,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 29982,
											"end": 30029,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 30046,
											"end": 30177,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "672"
										},
										{
											"begin": 30172,
											"end": 30176,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 30046,
											"end": 30177,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "389"
										},
										{
											"begin": 30046,
											"end": 30177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 30046,
											"end": 30177,
											"name": "tag",
											"source": 11,
											"value": "672"
										},
										{
											"begin": 30046,
											"end": 30177,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 30038,
											"end": 30177,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 30038,
											"end": 30177,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 29765,
											"end": 30184,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 29765,
											"end": 30184,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 29765,
											"end": 30184,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 29765,
											"end": 30184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 30190,
											"end": 30522,
											"name": "tag",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 30190,
											"end": 30522,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 30311,
											"end": 30315,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 30349,
											"end": 30351,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 30338,
											"end": 30347,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 30334,
											"end": 30352,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 30326,
											"end": 30352,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 30326,
											"end": 30352,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 30362,
											"end": 30433,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "674"
										},
										{
											"begin": 30430,
											"end": 30431,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 30419,
											"end": 30428,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 30415,
											"end": 30432,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 30406,
											"end": 30412,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 30362,
											"end": 30433,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 30362,
											"end": 30433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 30362,
											"end": 30433,
											"name": "tag",
											"source": 11,
											"value": "674"
										},
										{
											"begin": 30362,
											"end": 30433,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 30443,
											"end": 30515,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "675"
										},
										{
											"begin": 30511,
											"end": 30513,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 30500,
											"end": 30509,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 30496,
											"end": 30514,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 30487,
											"end": 30493,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 30443,
											"end": 30515,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 30443,
											"end": 30515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 30443,
											"end": 30515,
											"name": "tag",
											"source": 11,
											"value": "675"
										},
										{
											"begin": 30443,
											"end": 30515,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 30190,
											"end": 30522,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 30190,
											"end": 30522,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 30190,
											"end": 30522,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 30190,
											"end": 30522,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 30190,
											"end": 30522,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 30190,
											"end": 30522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 30528,
											"end": 30722,
											"name": "tag",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 30528,
											"end": 30722,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 30568,
											"end": 30572,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 30588,
											"end": 30608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "677"
										},
										{
											"begin": 30606,
											"end": 30607,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 30588,
											"end": 30608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 30588,
											"end": 30608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 30588,
											"end": 30608,
											"name": "tag",
											"source": 11,
											"value": "677"
										},
										{
											"begin": 30588,
											"end": 30608,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 30583,
											"end": 30608,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 30583,
											"end": 30608,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 30622,
											"end": 30642,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "678"
										},
										{
											"begin": 30640,
											"end": 30641,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 30622,
											"end": 30642,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 30622,
											"end": 30642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 30622,
											"end": 30642,
											"name": "tag",
											"source": 11,
											"value": "678"
										},
										{
											"begin": 30622,
											"end": 30642,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 30617,
											"end": 30642,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 30617,
											"end": 30642,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 30666,
											"end": 30667,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 30663,
											"end": 30664,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 30659,
											"end": 30668,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 30651,
											"end": 30668,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 30651,
											"end": 30668,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 30690,
											"end": 30691,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 30684,
											"end": 30688,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 30681,
											"end": 30692,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 30678,
											"end": 30715,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 30678,
											"end": 30715,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "679"
										},
										{
											"begin": 30678,
											"end": 30715,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 30695,
											"end": 30713,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "680"
										},
										{
											"begin": 30695,
											"end": 30713,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 30695,
											"end": 30713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 30695,
											"end": 30713,
											"name": "tag",
											"source": 11,
											"value": "680"
										},
										{
											"begin": 30695,
											"end": 30713,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 30678,
											"end": 30715,
											"name": "tag",
											"source": 11,
											"value": "679"
										},
										{
											"begin": 30678,
											"end": 30715,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 30528,
											"end": 30722,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 30528,
											"end": 30722,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 30528,
											"end": 30722,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 30528,
											"end": 30722,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 30528,
											"end": 30722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 30728,
											"end": 30919,
											"name": "tag",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 30728,
											"end": 30919,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 30768,
											"end": 30771,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 30787,
											"end": 30807,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "682"
										},
										{
											"begin": 30805,
											"end": 30806,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 30787,
											"end": 30807,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 30787,
											"end": 30807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 30787,
											"end": 30807,
											"name": "tag",
											"source": 11,
											"value": "682"
										},
										{
											"begin": 30787,
											"end": 30807,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 30782,
											"end": 30807,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 30782,
											"end": 30807,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 30821,
											"end": 30841,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "683"
										},
										{
											"begin": 30839,
											"end": 30840,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 30821,
											"end": 30841,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 30821,
											"end": 30841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 30821,
											"end": 30841,
											"name": "tag",
											"source": 11,
											"value": "683"
										},
										{
											"begin": 30821,
											"end": 30841,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 30816,
											"end": 30841,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 30816,
											"end": 30841,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 30864,
											"end": 30865,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 30861,
											"end": 30862,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 30857,
											"end": 30866,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 30850,
											"end": 30866,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 30850,
											"end": 30866,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 30885,
											"end": 30888,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 30882,
											"end": 30883,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 30879,
											"end": 30889,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 30876,
											"end": 30912,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 30876,
											"end": 30912,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "684"
										},
										{
											"begin": 30876,
											"end": 30912,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 30892,
											"end": 30910,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "685"
										},
										{
											"begin": 30892,
											"end": 30910,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 30892,
											"end": 30910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 30892,
											"end": 30910,
											"name": "tag",
											"source": 11,
											"value": "685"
										},
										{
											"begin": 30892,
											"end": 30910,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 30876,
											"end": 30912,
											"name": "tag",
											"source": 11,
											"value": "684"
										},
										{
											"begin": 30876,
											"end": 30912,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 30728,
											"end": 30919,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 30728,
											"end": 30919,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 30728,
											"end": 30919,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 30728,
											"end": 30919,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 30728,
											"end": 30919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 30925,
											"end": 31102,
											"name": "tag",
											"source": 11,
											"value": "390"
										},
										{
											"begin": 30925,
											"end": 31102,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 31065,
											"end": 31094,
											"name": "PUSH",
											"source": 11,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 31061,
											"end": 31062,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 31053,
											"end": 31059,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 31049,
											"end": 31063,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 31042,
											"end": 31095,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 30925,
											"end": 31102,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 30925,
											"end": 31102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 31108,
											"end": 31474,
											"name": "tag",
											"source": 11,
											"value": "391"
										},
										{
											"begin": 31108,
											"end": 31474,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 31250,
											"end": 31253,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 31271,
											"end": 31338,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "688"
										},
										{
											"begin": 31335,
											"end": 31337,
											"name": "PUSH",
											"source": 11,
											"value": "1B"
										},
										{
											"begin": 31330,
											"end": 31333,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 31271,
											"end": 31338,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 31271,
											"end": 31338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 31271,
											"end": 31338,
											"name": "tag",
											"source": 11,
											"value": "688"
										},
										{
											"begin": 31271,
											"end": 31338,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 31264,
											"end": 31338,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 31264,
											"end": 31338,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 31347,
											"end": 31440,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "689"
										},
										{
											"begin": 31436,
											"end": 31439,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 31347,
											"end": 31440,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "390"
										},
										{
											"begin": 31347,
											"end": 31440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 31347,
											"end": 31440,
											"name": "tag",
											"source": 11,
											"value": "689"
										},
										{
											"begin": 31347,
											"end": 31440,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 31465,
											"end": 31467,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 31460,
											"end": 31463,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 31456,
											"end": 31468,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 31449,
											"end": 31468,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 31449,
											"end": 31468,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 31108,
											"end": 31474,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 31108,
											"end": 31474,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 31108,
											"end": 31474,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 31108,
											"end": 31474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 31480,
											"end": 31899,
											"name": "tag",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 31480,
											"end": 31899,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 31646,
											"end": 31650,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 31684,
											"end": 31686,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 31673,
											"end": 31682,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 31669,
											"end": 31687,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 31661,
											"end": 31687,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 31661,
											"end": 31687,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 31733,
											"end": 31742,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 31727,
											"end": 31731,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 31723,
											"end": 31743,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 31719,
											"end": 31720,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 31708,
											"end": 31717,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 31704,
											"end": 31721,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 31697,
											"end": 31744,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 31761,
											"end": 31892,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "691"
										},
										{
											"begin": 31887,
											"end": 31891,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 31761,
											"end": 31892,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "391"
										},
										{
											"begin": 31761,
											"end": 31892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 31761,
											"end": 31892,
											"name": "tag",
											"source": 11,
											"value": "691"
										},
										{
											"begin": 31761,
											"end": 31892,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 31753,
											"end": 31892,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 31753,
											"end": 31892,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 31480,
											"end": 31899,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 31480,
											"end": 31899,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 31480,
											"end": 31899,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 31480,
											"end": 31899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 31905,
											"end": 32003,
											"name": "tag",
											"source": 11,
											"value": "392"
										},
										{
											"begin": 31905,
											"end": 32003,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 31956,
											"end": 31962,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 31990,
											"end": 31995,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 31984,
											"end": 31996,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 31974,
											"end": 31996,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 31974,
											"end": 31996,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 31905,
											"end": 32003,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 31905,
											"end": 32003,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 31905,
											"end": 32003,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 31905,
											"end": 32003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 32009,
											"end": 32177,
											"name": "tag",
											"source": 11,
											"value": "393"
										},
										{
											"begin": 32009,
											"end": 32177,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 32092,
											"end": 32103,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 32126,
											"end": 32132,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 32121,
											"end": 32124,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 32114,
											"end": 32133,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 32166,
											"end": 32170,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 32161,
											"end": 32164,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 32157,
											"end": 32171,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 32142,
											"end": 32171,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 32142,
											"end": 32171,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 32009,
											"end": 32177,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 32009,
											"end": 32177,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 32009,
											"end": 32177,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 32009,
											"end": 32177,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 32009,
											"end": 32177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 32183,
											"end": 32556,
											"name": "tag",
											"source": 11,
											"value": "394"
										},
										{
											"begin": 32183,
											"end": 32556,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 32269,
											"end": 32272,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 32297,
											"end": 32335,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "695"
										},
										{
											"begin": 32329,
											"end": 32334,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 32297,
											"end": 32335,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "392"
										},
										{
											"begin": 32297,
											"end": 32335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 32297,
											"end": 32335,
											"name": "tag",
											"source": 11,
											"value": "695"
										},
										{
											"begin": 32297,
											"end": 32335,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 32351,
											"end": 32421,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "696"
										},
										{
											"begin": 32414,
											"end": 32420,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 32409,
											"end": 32412,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 32351,
											"end": 32421,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "393"
										},
										{
											"begin": 32351,
											"end": 32421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 32351,
											"end": 32421,
											"name": "tag",
											"source": 11,
											"value": "696"
										},
										{
											"begin": 32351,
											"end": 32421,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 32344,
											"end": 32421,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 32344,
											"end": 32421,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 32430,
											"end": 32495,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "697"
										},
										{
											"begin": 32488,
											"end": 32494,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 32483,
											"end": 32486,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 32476,
											"end": 32480,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 32469,
											"end": 32474,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 32465,
											"end": 32481,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 32430,
											"end": 32495,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 32430,
											"end": 32495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 32430,
											"end": 32495,
											"name": "tag",
											"source": 11,
											"value": "697"
										},
										{
											"begin": 32430,
											"end": 32495,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 32520,
											"end": 32549,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "698"
										},
										{
											"begin": 32542,
											"end": 32548,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 32520,
											"end": 32549,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 32520,
											"end": 32549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 32520,
											"end": 32549,
											"name": "tag",
											"source": 11,
											"value": "698"
										},
										{
											"begin": 32520,
											"end": 32549,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 32515,
											"end": 32518,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 32511,
											"end": 32550,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 32504,
											"end": 32550,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 32504,
											"end": 32550,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 32273,
											"end": 32556,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 32183,
											"end": 32556,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 32183,
											"end": 32556,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 32183,
											"end": 32556,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 32183,
											"end": 32556,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 32183,
											"end": 32556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 32562,
											"end": 33615,
											"name": "tag",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 32562,
											"end": 33615,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 32885,
											"end": 32889,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 32923,
											"end": 32926,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 32912,
											"end": 32921,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 32908,
											"end": 32927,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 32900,
											"end": 32927,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 32900,
											"end": 32927,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 32937,
											"end": 33008,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "700"
										},
										{
											"begin": 33005,
											"end": 33006,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 32994,
											"end": 33003,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 32990,
											"end": 33007,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 32981,
											"end": 32987,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 32937,
											"end": 33008,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 32937,
											"end": 33008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 32937,
											"end": 33008,
											"name": "tag",
											"source": 11,
											"value": "700"
										},
										{
											"begin": 32937,
											"end": 33008,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 33018,
											"end": 33090,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "701"
										},
										{
											"begin": 33086,
											"end": 33088,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 33075,
											"end": 33084,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 33071,
											"end": 33089,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 33062,
											"end": 33068,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 33018,
											"end": 33090,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 33018,
											"end": 33090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 33018,
											"end": 33090,
											"name": "tag",
											"source": 11,
											"value": "701"
										},
										{
											"begin": 33018,
											"end": 33090,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 33137,
											"end": 33146,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 33131,
											"end": 33135,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 33127,
											"end": 33147,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 33122,
											"end": 33124,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 33111,
											"end": 33120,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 33107,
											"end": 33125,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 33100,
											"end": 33148,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 33165,
											"end": 33273,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "702"
										},
										{
											"begin": 33268,
											"end": 33272,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 33259,
											"end": 33265,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 33165,
											"end": 33273,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "362"
										},
										{
											"begin": 33165,
											"end": 33273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 33165,
											"end": 33273,
											"name": "tag",
											"source": 11,
											"value": "702"
										},
										{
											"begin": 33165,
											"end": 33273,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 33157,
											"end": 33273,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 33157,
											"end": 33273,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 33320,
											"end": 33329,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 33314,
											"end": 33318,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 33310,
											"end": 33330,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 33305,
											"end": 33307,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 33294,
											"end": 33303,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 33290,
											"end": 33308,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 33283,
											"end": 33331,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 33348,
											"end": 33456,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "703"
										},
										{
											"begin": 33451,
											"end": 33455,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 33442,
											"end": 33448,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 33348,
											"end": 33456,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "362"
										},
										{
											"begin": 33348,
											"end": 33456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 33348,
											"end": 33456,
											"name": "tag",
											"source": 11,
											"value": "703"
										},
										{
											"begin": 33348,
											"end": 33456,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 33340,
											"end": 33456,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 33340,
											"end": 33456,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 33504,
											"end": 33513,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 33498,
											"end": 33502,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 33494,
											"end": 33514,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 33488,
											"end": 33491,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 33477,
											"end": 33486,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 33473,
											"end": 33492,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 33466,
											"end": 33515,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 33532,
											"end": 33608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "704"
										},
										{
											"begin": 33603,
											"end": 33607,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 33594,
											"end": 33600,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 33532,
											"end": 33608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "394"
										},
										{
											"begin": 33532,
											"end": 33608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 33532,
											"end": 33608,
											"name": "tag",
											"source": 11,
											"value": "704"
										},
										{
											"begin": 33532,
											"end": 33608,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 33524,
											"end": 33608,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 33524,
											"end": 33608,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 32562,
											"end": 33615,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 32562,
											"end": 33615,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 32562,
											"end": 33615,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 32562,
											"end": 33615,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 32562,
											"end": 33615,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 32562,
											"end": 33615,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 32562,
											"end": 33615,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 32562,
											"end": 33615,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 32562,
											"end": 33615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 33621,
											"end": 33762,
											"name": "tag",
											"source": 11,
											"value": "395"
										},
										{
											"begin": 33621,
											"end": 33762,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 33677,
											"end": 33682,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 33708,
											"end": 33714,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 33702,
											"end": 33715,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 33693,
											"end": 33715,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 33693,
											"end": 33715,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 33724,
											"end": 33756,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "706"
										},
										{
											"begin": 33750,
											"end": 33755,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 33724,
											"end": 33756,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "332"
										},
										{
											"begin": 33724,
											"end": 33756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 33724,
											"end": 33756,
											"name": "tag",
											"source": 11,
											"value": "706"
										},
										{
											"begin": 33724,
											"end": 33756,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 33621,
											"end": 33762,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 33621,
											"end": 33762,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 33621,
											"end": 33762,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 33621,
											"end": 33762,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 33621,
											"end": 33762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 33768,
											"end": 34117,
											"name": "tag",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 33768,
											"end": 34117,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 33837,
											"end": 33843,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 33886,
											"end": 33888,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 33874,
											"end": 33883,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 33865,
											"end": 33872,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 33861,
											"end": 33884,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 33857,
											"end": 33889,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 33854,
											"end": 33973,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 33854,
											"end": 33973,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "708"
										},
										{
											"begin": 33854,
											"end": 33973,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 33892,
											"end": 33971,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "709"
										},
										{
											"begin": 33892,
											"end": 33971,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 33892,
											"end": 33971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 33892,
											"end": 33971,
											"name": "tag",
											"source": 11,
											"value": "709"
										},
										{
											"begin": 33892,
											"end": 33971,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 33854,
											"end": 33973,
											"name": "tag",
											"source": 11,
											"value": "708"
										},
										{
											"begin": 33854,
											"end": 33973,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 34012,
											"end": 34013,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 34037,
											"end": 34100,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "710"
										},
										{
											"begin": 34092,
											"end": 34099,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 34083,
											"end": 34089,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 34072,
											"end": 34081,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 34068,
											"end": 34090,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 34037,
											"end": 34100,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "395"
										},
										{
											"begin": 34037,
											"end": 34100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 34037,
											"end": 34100,
											"name": "tag",
											"source": 11,
											"value": "710"
										},
										{
											"begin": 34037,
											"end": 34100,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 34027,
											"end": 34100,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 34027,
											"end": 34100,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 33983,
											"end": 34110,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 33768,
											"end": 34117,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 33768,
											"end": 34117,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 33768,
											"end": 34117,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 33768,
											"end": 34117,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 33768,
											"end": 34117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 34123,
											"end": 34229,
											"name": "tag",
											"source": 11,
											"value": "396"
										},
										{
											"begin": 34123,
											"end": 34229,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 34167,
											"end": 34175,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 34216,
											"end": 34221,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 34211,
											"end": 34214,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 34207,
											"end": 34222,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 34186,
											"end": 34222,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 34186,
											"end": 34222,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 34123,
											"end": 34229,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 34123,
											"end": 34229,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 34123,
											"end": 34229,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 34123,
											"end": 34229,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 34235,
											"end": 34418,
											"name": "tag",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 34235,
											"end": 34418,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 34270,
											"end": 34273,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 34308,
											"end": 34309,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 34290,
											"end": 34306,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 34287,
											"end": 34310,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 34284,
											"end": 34412,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 34284,
											"end": 34412,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "713"
										},
										{
											"begin": 34284,
											"end": 34412,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 34346,
											"end": 34347,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 34343,
											"end": 34344,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 34340,
											"end": 34341,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 34325,
											"end": 34348,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 34368,
											"end": 34402,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "714"
										},
										{
											"begin": 34399,
											"end": 34400,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 34393,
											"end": 34401,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 34368,
											"end": 34402,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "396"
										},
										{
											"begin": 34368,
											"end": 34402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 34368,
											"end": 34402,
											"name": "tag",
											"source": 11,
											"value": "714"
										},
										{
											"begin": 34368,
											"end": 34402,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 34361,
											"end": 34402,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 34361,
											"end": 34402,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 34284,
											"end": 34412,
											"name": "tag",
											"source": 11,
											"value": "713"
										},
										{
											"begin": 34284,
											"end": 34412,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 34235,
											"end": 34418,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 34235,
											"end": 34418,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 34424,
											"end": 35135,
											"name": "tag",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 34424,
											"end": 35135,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 34463,
											"end": 34466,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 34501,
											"end": 34505,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 34483,
											"end": 34499,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 34480,
											"end": 34506,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 34509,
											"end": 34514,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "715"
										},
										{
											"begin": 34477,
											"end": 34516,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 34538,
											"end": 34558,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "717"
										},
										{
											"begin": 34538,
											"end": 34558,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 34538,
											"end": 34558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 34538,
											"end": 34558,
											"name": "tag",
											"source": 11,
											"value": "717"
										},
										{
											"begin": 34538,
											"end": 34558,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 34613,
											"end": 34614,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 34595,
											"end": 34611,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 34591,
											"end": 34615,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 34588,
											"end": 34589,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 34582,
											"end": 34586,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 34567,
											"end": 34616,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 34646,
											"end": 34650,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 34640,
											"end": 34651,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 34745,
											"end": 34761,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 34738,
											"end": 34742,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 34730,
											"end": 34736,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 34726,
											"end": 34743,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 34723,
											"end": 34762,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 34690,
											"end": 34708,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34682,
											"end": 34688,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 34679,
											"end": 34709,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 34663,
											"end": 34776,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 34660,
											"end": 34806,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 34660,
											"end": 34806,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "718"
										},
										{
											"begin": 34660,
											"end": 34806,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 34791,
											"end": 34796,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 34791,
											"end": 34796,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 34791,
											"end": 34796,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "715"
										},
										{
											"begin": 34791,
											"end": 34796,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 34660,
											"end": 34806,
											"name": "tag",
											"source": 11,
											"value": "718"
										},
										{
											"begin": 34660,
											"end": 34806,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 34837,
											"end": 34843,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 34831,
											"end": 34835,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 34827,
											"end": 34844,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 34873,
											"end": 34876,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 34867,
											"end": 34877,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 34900,
											"end": 34918,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34892,
											"end": 34898,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 34889,
											"end": 34919,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 34886,
											"end": 34929,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 34886,
											"end": 34929,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "719"
										},
										{
											"begin": 34886,
											"end": 34929,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 34922,
											"end": 34927,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 34922,
											"end": 34927,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 34922,
											"end": 34927,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 34922,
											"end": 34927,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 34922,
											"end": 34927,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "715"
										},
										{
											"begin": 34922,
											"end": 34927,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 34886,
											"end": 34929,
											"name": "tag",
											"source": 11,
											"value": "719"
										},
										{
											"begin": 34886,
											"end": 34929,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 34970,
											"end": 34976,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 34963,
											"end": 34967,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 34958,
											"end": 34961,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 34954,
											"end": 34968,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 34950,
											"end": 34977,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 35029,
											"end": 35030,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 35011,
											"end": 35027,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 35007,
											"end": 35031,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 35001,
											"end": 35005,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 34997,
											"end": 35032,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 34992,
											"end": 34995,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 34989,
											"end": 35033,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 34986,
											"end": 35043,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 34986,
											"end": 35043,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "720"
										},
										{
											"begin": 34986,
											"end": 35043,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 35036,
											"end": 35041,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 35036,
											"end": 35041,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 35036,
											"end": 35041,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 35036,
											"end": 35041,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 35036,
											"end": 35041,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 35036,
											"end": 35041,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "715"
										},
										{
											"begin": 35036,
											"end": 35041,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 34986,
											"end": 35043,
											"name": "tag",
											"source": 11,
											"value": "720"
										},
										{
											"begin": 34986,
											"end": 35043,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 35053,
											"end": 35110,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "721"
										},
										{
											"begin": 35101,
											"end": 35107,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 35095,
											"end": 35099,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 35091,
											"end": 35108,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 35083,
											"end": 35089,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 35079,
											"end": 35109,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 35073,
											"end": 35077,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 35053,
											"end": 35110,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 35053,
											"end": 35110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 35053,
											"end": 35110,
											"name": "tag",
											"source": 11,
											"value": "721"
										},
										{
											"begin": 35053,
											"end": 35110,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 35126,
											"end": 35129,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 35119,
											"end": 35129,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 35119,
											"end": 35129,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 34467,
											"end": 35135,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 34467,
											"end": 35135,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 34467,
											"end": 35135,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 34467,
											"end": 35135,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 34467,
											"end": 35135,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 34424,
											"end": 35135,
											"name": "tag",
											"source": 11,
											"value": "715"
										},
										{
											"begin": 34424,
											"end": 35135,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 34424,
											"end": 35135,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 34424,
											"end": 35135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 35141,
											"end": 35380,
											"name": "tag",
											"source": 11,
											"value": "397"
										},
										{
											"begin": 35141,
											"end": 35380,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 35281,
											"end": 35315,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
										},
										{
											"begin": 35277,
											"end": 35278,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 35269,
											"end": 35275,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 35265,
											"end": 35279,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 35258,
											"end": 35316,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 35350,
											"end": 35372,
											"name": "PUSH",
											"source": 11,
											"value": "526563656976657220696D706C656D656E746572000000000000000000000000"
										},
										{
											"begin": 35345,
											"end": 35347,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 35337,
											"end": 35343,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 35333,
											"end": 35348,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 35326,
											"end": 35373,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 35141,
											"end": 35380,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 35141,
											"end": 35380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 35386,
											"end": 35752,
											"name": "tag",
											"source": 11,
											"value": "398"
										},
										{
											"begin": 35386,
											"end": 35752,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 35528,
											"end": 35531,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 35549,
											"end": 35616,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "724"
										},
										{
											"begin": 35613,
											"end": 35615,
											"name": "PUSH",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 35608,
											"end": 35611,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 35549,
											"end": 35616,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 35549,
											"end": 35616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 35549,
											"end": 35616,
											"name": "tag",
											"source": 11,
											"value": "724"
										},
										{
											"begin": 35549,
											"end": 35616,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 35542,
											"end": 35616,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 35542,
											"end": 35616,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 35625,
											"end": 35718,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "725"
										},
										{
											"begin": 35714,
											"end": 35717,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 35625,
											"end": 35718,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "397"
										},
										{
											"begin": 35625,
											"end": 35718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 35625,
											"end": 35718,
											"name": "tag",
											"source": 11,
											"value": "725"
										},
										{
											"begin": 35625,
											"end": 35718,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 35743,
											"end": 35745,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 35738,
											"end": 35741,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 35734,
											"end": 35746,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 35727,
											"end": 35746,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 35727,
											"end": 35746,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 35386,
											"end": 35752,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 35386,
											"end": 35752,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 35386,
											"end": 35752,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 35386,
											"end": 35752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 35758,
											"end": 36177,
											"name": "tag",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 35758,
											"end": 36177,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 35924,
											"end": 35928,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 35962,
											"end": 35964,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 35951,
											"end": 35960,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 35947,
											"end": 35965,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 35939,
											"end": 35965,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 35939,
											"end": 35965,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 36011,
											"end": 36020,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 36005,
											"end": 36009,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 36001,
											"end": 36021,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 35997,
											"end": 35998,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 35986,
											"end": 35995,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 35982,
											"end": 35999,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 35975,
											"end": 36022,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 36039,
											"end": 36170,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "727"
										},
										{
											"begin": 36165,
											"end": 36169,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 36039,
											"end": 36170,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "398"
										},
										{
											"begin": 36039,
											"end": 36170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 36039,
											"end": 36170,
											"name": "tag",
											"source": 11,
											"value": "727"
										},
										{
											"begin": 36039,
											"end": 36170,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 36031,
											"end": 36170,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 36031,
											"end": 36170,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 35758,
											"end": 36177,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 35758,
											"end": 36177,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 35758,
											"end": 36177,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 35758,
											"end": 36177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 36183,
											"end": 36410,
											"name": "tag",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 36183,
											"end": 36410,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 36323,
											"end": 36357,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 36319,
											"end": 36320,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 36311,
											"end": 36317,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 36307,
											"end": 36321,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 36300,
											"end": 36358,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 36392,
											"end": 36402,
											"name": "PUSH",
											"source": 11,
											"value": "6420746F6B656E73000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 36387,
											"end": 36389,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 36379,
											"end": 36385,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 36375,
											"end": 36390,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 36368,
											"end": 36403,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 36183,
											"end": 36410,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 36183,
											"end": 36410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 36416,
											"end": 36782,
											"name": "tag",
											"source": 11,
											"value": "400"
										},
										{
											"begin": 36416,
											"end": 36782,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 36558,
											"end": 36561,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 36579,
											"end": 36646,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "730"
										},
										{
											"begin": 36643,
											"end": 36645,
											"name": "PUSH",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 36638,
											"end": 36641,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 36579,
											"end": 36646,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 36579,
											"end": 36646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 36579,
											"end": 36646,
											"name": "tag",
											"source": 11,
											"value": "730"
										},
										{
											"begin": 36579,
											"end": 36646,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 36572,
											"end": 36646,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 36572,
											"end": 36646,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 36655,
											"end": 36748,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "731"
										},
										{
											"begin": 36744,
											"end": 36747,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 36655,
											"end": 36748,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 36655,
											"end": 36748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 36655,
											"end": 36748,
											"name": "tag",
											"source": 11,
											"value": "731"
										},
										{
											"begin": 36655,
											"end": 36748,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 36773,
											"end": 36775,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 36768,
											"end": 36771,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 36764,
											"end": 36776,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 36757,
											"end": 36776,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 36757,
											"end": 36776,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 36416,
											"end": 36782,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 36416,
											"end": 36782,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 36416,
											"end": 36782,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 36416,
											"end": 36782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 36788,
											"end": 37207,
											"name": "tag",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 36788,
											"end": 37207,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 36954,
											"end": 36958,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 36992,
											"end": 36994,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 36981,
											"end": 36990,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 36977,
											"end": 36995,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 36969,
											"end": 36995,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 36969,
											"end": 36995,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 37041,
											"end": 37050,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 37035,
											"end": 37039,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 37031,
											"end": 37051,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 37027,
											"end": 37028,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 37016,
											"end": 37025,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 37012,
											"end": 37029,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 37005,
											"end": 37052,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 37069,
											"end": 37200,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "733"
										},
										{
											"begin": 37195,
											"end": 37199,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 37069,
											"end": 37200,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "400"
										},
										{
											"begin": 37069,
											"end": 37200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 37069,
											"end": 37200,
											"name": "tag",
											"source": 11,
											"value": "733"
										},
										{
											"begin": 37069,
											"end": 37200,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 37061,
											"end": 37200,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 37061,
											"end": 37200,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 36788,
											"end": 37207,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 36788,
											"end": 37207,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 36788,
											"end": 37207,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 36788,
											"end": 37207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 37213,
											"end": 37393,
											"name": "tag",
											"source": 11,
											"value": "401"
										},
										{
											"begin": 37213,
											"end": 37393,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 37261,
											"end": 37338,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 37258,
											"end": 37259,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 37251,
											"end": 37339,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 37358,
											"end": 37362,
											"name": "PUSH",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 37355,
											"end": 37356,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 37348,
											"end": 37363,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 37382,
											"end": 37386,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 37379,
											"end": 37380,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 37372,
											"end": 37387,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 37399,
											"end": 37584,
											"name": "tag",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 37399,
											"end": 37584,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 37439,
											"end": 37440,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 37456,
											"end": 37476,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "736"
										},
										{
											"begin": 37474,
											"end": 37475,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 37456,
											"end": 37476,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 37456,
											"end": 37476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 37456,
											"end": 37476,
											"name": "tag",
											"source": 11,
											"value": "736"
										},
										{
											"begin": 37456,
											"end": 37476,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 37451,
											"end": 37476,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 37451,
											"end": 37476,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 37490,
											"end": 37510,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "737"
										},
										{
											"begin": 37508,
											"end": 37509,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 37490,
											"end": 37510,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 37490,
											"end": 37510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 37490,
											"end": 37510,
											"name": "tag",
											"source": 11,
											"value": "737"
										},
										{
											"begin": 37490,
											"end": 37510,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 37485,
											"end": 37510,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 37485,
											"end": 37510,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 37529,
											"end": 37530,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 37519,
											"end": 37554,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "738"
										},
										{
											"begin": 37519,
											"end": 37554,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 37534,
											"end": 37552,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "739"
										},
										{
											"begin": 37534,
											"end": 37552,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "401"
										},
										{
											"begin": 37534,
											"end": 37552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 37534,
											"end": 37552,
											"name": "tag",
											"source": 11,
											"value": "739"
										},
										{
											"begin": 37534,
											"end": 37552,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 37519,
											"end": 37554,
											"name": "tag",
											"source": 11,
											"value": "738"
										},
										{
											"begin": 37519,
											"end": 37554,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 37576,
											"end": 37577,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 37573,
											"end": 37574,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 37569,
											"end": 37578,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 37564,
											"end": 37578,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 37564,
											"end": 37578,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 37399,
											"end": 37584,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 37399,
											"end": 37584,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 37399,
											"end": 37584,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 37399,
											"end": 37584,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 37399,
											"end": 37584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 37590,
											"end": 37766,
											"name": "tag",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 37590,
											"end": 37766,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 37622,
											"end": 37623,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 37639,
											"end": 37659,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "741"
										},
										{
											"begin": 37657,
											"end": 37658,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 37639,
											"end": 37659,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 37639,
											"end": 37659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 37639,
											"end": 37659,
											"name": "tag",
											"source": 11,
											"value": "741"
										},
										{
											"begin": 37639,
											"end": 37659,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 37634,
											"end": 37659,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 37634,
											"end": 37659,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 37673,
											"end": 37693,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "742"
										},
										{
											"begin": 37691,
											"end": 37692,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 37673,
											"end": 37693,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 37673,
											"end": 37693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 37673,
											"end": 37693,
											"name": "tag",
											"source": 11,
											"value": "742"
										},
										{
											"begin": 37673,
											"end": 37693,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 37668,
											"end": 37693,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 37668,
											"end": 37693,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 37712,
											"end": 37713,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 37702,
											"end": 37737,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "743"
										},
										{
											"begin": 37702,
											"end": 37737,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 37717,
											"end": 37735,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "744"
										},
										{
											"begin": 37717,
											"end": 37735,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "401"
										},
										{
											"begin": 37717,
											"end": 37735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 37717,
											"end": 37735,
											"name": "tag",
											"source": 11,
											"value": "744"
										},
										{
											"begin": 37717,
											"end": 37735,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 37702,
											"end": 37737,
											"name": "tag",
											"source": 11,
											"value": "743"
										},
										{
											"begin": 37702,
											"end": 37737,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 37758,
											"end": 37759,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 37755,
											"end": 37756,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 37751,
											"end": 37760,
											"name": "MOD",
											"source": 11
										},
										{
											"begin": 37746,
											"end": 37760,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 37746,
											"end": 37760,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 37590,
											"end": 37766,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 37590,
											"end": 37766,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 37590,
											"end": 37766,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 37590,
											"end": 37766,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 37590,
											"end": 37766,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 37772,
											"end": 38523,
											"name": "tag",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 37772,
											"end": 38523,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 37995,
											"end": 37999,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 38033,
											"end": 38036,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 38022,
											"end": 38031,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 38018,
											"end": 38037,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 38010,
											"end": 38037,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 38010,
											"end": 38037,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 38047,
											"end": 38118,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "746"
										},
										{
											"begin": 38115,
											"end": 38116,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 38104,
											"end": 38113,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 38100,
											"end": 38117,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 38091,
											"end": 38097,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 38047,
											"end": 38118,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 38047,
											"end": 38118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 38047,
											"end": 38118,
											"name": "tag",
											"source": 11,
											"value": "746"
										},
										{
											"begin": 38047,
											"end": 38118,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 38128,
											"end": 38200,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "747"
										},
										{
											"begin": 38196,
											"end": 38198,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 38185,
											"end": 38194,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 38181,
											"end": 38199,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 38172,
											"end": 38178,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 38128,
											"end": 38200,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 38128,
											"end": 38200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 38128,
											"end": 38200,
											"name": "tag",
											"source": 11,
											"value": "747"
										},
										{
											"begin": 38128,
											"end": 38200,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 38210,
											"end": 38282,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "748"
										},
										{
											"begin": 38278,
											"end": 38280,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 38267,
											"end": 38276,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 38263,
											"end": 38281,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 38254,
											"end": 38260,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 38210,
											"end": 38282,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 38210,
											"end": 38282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 38210,
											"end": 38282,
											"name": "tag",
											"source": 11,
											"value": "748"
										},
										{
											"begin": 38210,
											"end": 38282,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 38292,
											"end": 38364,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "749"
										},
										{
											"begin": 38360,
											"end": 38362,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 38349,
											"end": 38358,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 38345,
											"end": 38363,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 38336,
											"end": 38342,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 38292,
											"end": 38364,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 38292,
											"end": 38364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 38292,
											"end": 38364,
											"name": "tag",
											"source": 11,
											"value": "749"
										},
										{
											"begin": 38292,
											"end": 38364,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 38412,
											"end": 38421,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 38406,
											"end": 38410,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 38402,
											"end": 38422,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 38396,
											"end": 38399,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 38385,
											"end": 38394,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 38381,
											"end": 38400,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 38374,
											"end": 38423,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 38440,
											"end": 38516,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "750"
										},
										{
											"begin": 38511,
											"end": 38515,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 38502,
											"end": 38508,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 38440,
											"end": 38516,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "394"
										},
										{
											"begin": 38440,
											"end": 38516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 38440,
											"end": 38516,
											"name": "tag",
											"source": 11,
											"value": "750"
										},
										{
											"begin": 38440,
											"end": 38516,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 38432,
											"end": 38516,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 38432,
											"end": 38516,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 37772,
											"end": 38523,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 37772,
											"end": 38523,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 37772,
											"end": 38523,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 37772,
											"end": 38523,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 37772,
											"end": 38523,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 37772,
											"end": 38523,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 37772,
											"end": 38523,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 37772,
											"end": 38523,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 37772,
											"end": 38523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									],
									".data": {
										"8AC7E9556B567C1C94BB4DAAA3C3A65BE5AC686579615210CB910FB8CB8D65BF": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572"
									}
								}
							},
							"sourceList": [
								"contracts/ERC1155.sol",
								"contracts/External/Address.sol",
								"contracts/External/Context.sol",
								"contracts/External/ERC165.sol",
								"contracts/External/EnumerableMap.sol",
								"contracts/External/IERC1155.sol",
								"contracts/External/IERC1155MetadataURI.sol",
								"contracts/External/IERC1155Receiver.sol",
								"contracts/External/IERC165.sol",
								"contracts/External/SafeMath.sol",
								"contracts/External/Strings.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"getCreator(uint256)": "d48e638a",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"royaltyFee(uint256)": "c57dc235",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"tokenURIPrefix()": "c0ac9983",
							"totalSupply()": "18160ddd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"tokenBaseURI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getCreator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"royaltyFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenURIPrefix\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"params\":{\"account\":\"The address of the token holder\",\"tokenId\":\"ID of the Token\"},\"returns\":{\"_0\":\"The owner's balance of the Token type requested\"}},\"balanceOfBatch(address[],uint256[])\":{\"params\":{\"accounts\":\"The addresses of the token holders\",\"ids\":\"ID of the Tokens\"},\"returns\":{\"_0\":\"The _owner's balance of the Token types requested (i.e. balance for each (owner, id) pair)\"}},\"getCreator(uint256)\":{\"params\":{\"tokenId\":\"ID of the Token.\"},\"returns\":{\"_0\":\"creator of given ID.\"}},\"isApprovedForAll(address,address)\":{\"params\":{\"account\":\"The owner of the Tokens\",\"operator\":\"Address of authorized operator\"},\"returns\":{\"_0\":\"True if the operator is approved, false if not\"}},\"royaltyFee(uint256)\":{\"params\":{\"tokenId\":\"ID of the Token.\"},\"returns\":{\"_0\":\"royaltyFee of given ID.\"}},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Caller must be approved to manage the tokens being transferred out of the `_from` account (see \\\"Approval\\\" section of the standard). MUST revert if `_to` is the zero address. MUST revert if length of `_ids` is not the same as length of `_values`. MUST revert if any of the balance(s) of the holder(s) for token(s) in `_ids` is lower than the respective amount(s) in `_values` sent to the recipient. MUST revert on any other error. MUST emit `TransferSingle` or `TransferBatch` event(s) such that all the balance changes are reflected (see \\\"Safe Transfer Rules\\\" section of the standard). Balance changes and events MUST follow the ordering of the arrays (_ids[0]/_values[0] before _ids[1]/_values[1], etc). After the above conditions for the transfer(s) in the batch are met, this function MUST check if `_to` is a smart contract (e.g. code size > 0). If so, it MUST call the relevant `ERC1155TokenReceiver` hook(s) on `_to` and act appropriately (see \\\"Safe Transfer Rules\\\" section of the standard).\",\"params\":{\"amounts\":\"Transfer amounts per token type (order and length must match _ids array)\",\"data\":\"Additional data with no specified format, MUST be sent unaltered in call to the `ERC1155TokenReceiver` hook(s) on `_to`\",\"from\":\"Source address\",\"to\":\"Target address\",\"tokenIds\":\"IDs of each token type (order and length must match _values array)\"}},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Caller must be approved to manage the tokens being transferred out of the `_from` account (see \\\"Approval\\\" section of the standard). MUST revert if `_to` is the zero address. MUST revert if balance of holder for token `_id` is lower than the `_value` sent. MUST revert on any other error. MUST emit the `TransferSingle` event to reflect the balance change (see \\\"Safe Transfer Rules\\\" section of the standard). After the above conditions are met, this function MUST check if `_to` is a smart contract (e.g. code size > 0). If so, it MUST call `onERC1155Received` on `_to` and act appropriately (see \\\"Safe Transfer Rules\\\" section of the standard).\",\"params\":{\"amount\":\"Transfer amount\",\"data\":\"Additional data with no specified format, MUST be sent unaltered in call to `onERC1155Received` on `_to`\",\"from\":\"Source address\",\"to\":\"Target address\",\"tokenId\":\"ID of the token type\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"MUST emit the ApprovalForAll event on success.\",\"params\":{\"approved\":\"True if the operator is approved, false to revoke approval\",\"operator\":\"Address to add to the set of authorized operators\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenURI(uint256)\":{\"details\":\"Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"balanceOf(address,uint256)\":{\"notice\":\"Get the balance of an account's Tokens.\"},\"balanceOfBatch(address[],uint256[])\":{\"notice\":\"Get the balance of multiple account/token pairs\"},\"getCreator(uint256)\":{\"notice\":\"Get the creator of given tokenID.\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Queries the approval status of an operator for a given owner.\"},\"royaltyFee(uint256)\":{\"notice\":\"Get the royalty associated with tokenID.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"notice\":\"Transfers `_values` amount(s) of `_ids` from the `_from` address to the `_to` address specified (with safety call).\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"notice\":\"Transfers `_value` amount of an `_id` from the `_from` address to the `_to` address specified (with safety call).\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Enable or disable approval for a third party (\\\"operator\\\") to manage all of the caller's tokens.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC1155.sol\":{\"keccak256\":\"0xee5127ade64846b8192c5d1679e528fcddcaa0082775d958591dfc716d268835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c635d5d181699f28565d8a4553b714fe56824ed8fe0d18c859f30b29111e98d\",\"dweb:/ipfs/QmQhMF4oaPjppxfYhQu6FHuPDpmMmD9Q663poXXZHWgkP8\"]},\"contracts/External/Address.sol\":{\"keccak256\":\"0x2f46c1f29abceabf3044b58a58b21d6cbfa3cced4c50ef5bb5647f67ac825045\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3ba8de493ce5e34221d17bb880a7ac9ee54910f60bb24d254df2a26e2750700\",\"dweb:/ipfs/QmYEfKf9rybhLcLQLM1gfFnmmn3WJ4acEJhRZXxn273rLG\"]},\"contracts/External/Context.sol\":{\"keccak256\":\"0xaac395688edc1129b10b3c1ff17b281ed12211fdad9d79fbc7c66451e48fd1ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4b1edd816216205384dad14ca182e5c1f369d5c441791be33738e0e0b529feaa\",\"dweb:/ipfs/QmVM6viMdjTjqY8Em6i2iKgKQtcwxTXzUchNxSfZHkUMMq\"]},\"contracts/External/ERC165.sol\":{\"keccak256\":\"0x8e00d4240c1b03af55c4dc34bf9875185da87964f448a4cd34cb5cf80d870014\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62cec786e5891e17eb73c8da07f8a4f39583425acb791b59218836e3655a81ad\",\"dweb:/ipfs/QmUVc283Q5EhBtx8qgju3ScGncoHxEMtqSmSSJFFzPtYYV\"]},\"contracts/External/EnumerableMap.sol\":{\"keccak256\":\"0x3fa04da15ec8b6da6c026493ce01720cdcbbdf0c7a47c1e94be36f98673be0e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e80830acf112bcd6ecd645f6a4ea5e9903491d93f0bb6d43e474449b5e57dacf\",\"dweb:/ipfs/QmZRgjXjnhkLk786aPx95Hd2RDEYgeTyiERfjHYSXn3ri9\"]},\"contracts/External/IERC1155.sol\":{\"keccak256\":\"0xbf541fc72c92377a1831c8bb3357357d8b1fb360b688c6616edbc501f592749e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a110557004f6f34333236bae1c1aa8b7a518d0355d93273d1724b662e77f93fd\",\"dweb:/ipfs/QmSX8CMTw4c5TQaYiZByWEhtqEtnqYyKcacRApo5iiHbPx\"]},\"contracts/External/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa8e4e795672233a02983bcd30485b7a455f59db738b22efb4bcef442a7dd5fab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48d8d13a431f22ea4d6fdaaeae79652481efe88603ee05f4d56aa53c7a06c460\",\"dweb:/ipfs/QmVg3Exjz3T5nZG9HNMXkrLaKGuTQw4ek3yB8hXtrSbZwL\"]},\"contracts/External/IERC1155Receiver.sol\":{\"keccak256\":\"0x542f404659cf47f597b70a95f2878b546768d2a1c1be92318a31430f38fa5375\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a55480a037a571e3db9911e12206ea38d759d02ce2f9c9806aa6bbdb4f17f28e\",\"dweb:/ipfs/QmTdF2HSAEG6W9eJmJ3XpYM9A13u17GV5SEhkqEb8pkbau\"]},\"contracts/External/IERC165.sol\":{\"keccak256\":\"0x04477a1cac572cc62ecd9df747d418b5898d40a6099a253b061dad31575a75fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aefb7b8801f749cebe99f13ea15979df1c73a16dbefcf2eb0f310c93149bd7f\",\"dweb:/ipfs/QmaGkUytPvCyquqpZbGe3eDkG2jCYZYVGug6GvVC1AavNi\"]},\"contracts/External/SafeMath.sol\":{\"keccak256\":\"0xea060a43956deecfd79e602fc08adad0ac8e899ee37d67509b915546d249df3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eca8af2c52fa895aadc9945608323acf24c0879d50ea3966415704a20e52a134\",\"dweb:/ipfs/QmdA6QQ594Lj5fQAjdJo8bJTixGJKYok8VmjowxF5U9CQf\"]},\"contracts/External/Strings.sol\":{\"keccak256\":\"0xe0c83dd25019c41fda8798164ae0399a42e70250f7991eaf8c142be9ce9c7edd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://062b9f059c2065fc3bcb16d183371646b183bd64d61dacd1bfece569fa02de22\",\"dweb:/ipfs/QmS4qk9W9opCSg55SbAVKCEKUsor7LKpoW4gUKf86rNKZg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1573,
								"contract": "contracts/ERC1155.sol:ERC1155",
								"label": "_supportedInterfaces",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes4,t_bool)"
							},
							{
								"astId": 33,
								"contract": "contracts/ERC1155.sol:ERC1155",
								"label": "creators",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 37,
								"contract": "contracts/ERC1155.sol:ERC1155",
								"label": "_royaltyFee",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 43,
								"contract": "contracts/ERC1155.sol:ERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 49,
								"contract": "contracts/ERC1155.sol:ERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 52,
								"contract": "contracts/ERC1155.sol:ERC1155",
								"label": "tokenURIPrefix",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 56,
								"contract": "contracts/ERC1155.sol:ERC1155",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							},
							{
								"astId": 59,
								"contract": "contracts/ERC1155.sol:ERC1155",
								"label": "_tokenOwners",
								"offset": 0,
								"slot": "7",
								"type": "t_struct(UintToAddressMap)1880_storage"
							},
							{
								"astId": 61,
								"contract": "contracts/ERC1155.sol:ERC1155",
								"label": "_name",
								"offset": 0,
								"slot": "9",
								"type": "t_string_storage"
							},
							{
								"astId": 63,
								"contract": "contracts/ERC1155.sol:ERC1155",
								"label": "_symbol",
								"offset": 0,
								"slot": "10",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(MapEntry)1621_storage)dyn_storage": {
								"base": "t_struct(MapEntry)1621_storage",
								"encoding": "dynamic_array",
								"label": "struct EnumerableMap.MapEntry[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_bytes4": {
								"encoding": "inplace",
								"label": "bytes4",
								"numberOfBytes": "4"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes4,t_bool)": {
								"encoding": "mapping",
								"key": "t_bytes4",
								"label": "mapping(bytes4 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Map)1630_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableMap.Map",
								"members": [
									{
										"astId": 1625,
										"contract": "contracts/ERC1155.sol:ERC1155",
										"label": "_entries",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_struct(MapEntry)1621_storage)dyn_storage"
									},
									{
										"astId": 1629,
										"contract": "contracts/ERC1155.sol:ERC1155",
										"label": "_indexes",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_bytes32,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(MapEntry)1621_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableMap.MapEntry",
								"members": [
									{
										"astId": 1618,
										"contract": "contracts/ERC1155.sol:ERC1155",
										"label": "_key",
										"offset": 0,
										"slot": "0",
										"type": "t_bytes32"
									},
									{
										"astId": 1620,
										"contract": "contracts/ERC1155.sol:ERC1155",
										"label": "_value",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(UintToAddressMap)1880_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableMap.UintToAddressMap",
								"members": [
									{
										"astId": 1879,
										"contract": "contracts/ERC1155.sol:ERC1155",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Map)1630_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"balanceOf(address,uint256)": {
								"notice": "Get the balance of an account's Tokens."
							},
							"balanceOfBatch(address[],uint256[])": {
								"notice": "Get the balance of multiple account/token pairs"
							},
							"getCreator(uint256)": {
								"notice": "Get the creator of given tokenID."
							},
							"isApprovedForAll(address,address)": {
								"notice": "Queries the approval status of an operator for a given owner."
							},
							"royaltyFee(uint256)": {
								"notice": "Get the royalty associated with tokenID."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"notice": "Transfers `_values` amount(s) of `_ids` from the `_from` address to the `_to` address specified (with safety call)."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"notice": "Transfers `_value` amount of an `_id` from the `_from` address to the `_to` address specified (with safety call)."
							},
							"setApprovalForAll(address,bool)": {
								"notice": "Enable or disable approval for a third party (\"operator\") to manage all of the caller's tokens."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/External/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/External/Address.sol\":183:9382  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/External/Address.sol\":183:9382  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209262dcd749bbe198b428215cab9ab6fed96dd76af671d263277a795ccac5649464736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209262dcd749bbe198b428215cab9ab6fed96dd76af671d263277a795ccac5649464736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 PUSH3 0xDCD749 0xBB 0xE1 SWAP9 0xB4 0x28 0x21 0x5C 0xAB SWAP11 0xB6 INVALID 0xD9 PUSH14 0xD76AF671D263277A795CCAC56494 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "183:9199:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209262dcd749bbe198b428215cab9ab6fed96dd76af671d263277a795ccac5649464736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 PUSH3 0xDCD749 0xBB 0xE1 SWAP9 0xB4 0x28 0x21 0x5C 0xAB SWAP11 0xB6 INVALID 0xD9 PUSH14 0xD76AF671D263277A795CCAC56494 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "183:9199:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 183,
									"end": 9382,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 183,
									"end": 9382,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 183,
									"end": 9382,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 183,
									"end": 9382,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 183,
									"end": 9382,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 183,
									"end": 9382,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 183,
									"end": 9382,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 183,
									"end": 9382,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 183,
									"end": 9382,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 183,
									"end": 9382,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 9382,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 183,
									"end": 9382,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 183,
									"end": 9382,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 183,
									"end": 9382,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 183,
									"end": 9382,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 183,
									"end": 9382,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 183,
									"end": 9382,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 9382,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 183,
									"end": 9382,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 9382,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 183,
									"end": 9382,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 183,
									"end": 9382,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 183,
									"end": 9382,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 9382,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 183,
									"end": 9382,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 183,
									"end": 9382,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 183,
									"end": 9382,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 183,
									"end": 9382,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 9382,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 183,
									"end": 9382,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 183,
									"end": 9382,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 183,
									"end": 9382,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 183,
									"end": 9382,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 183,
									"end": 9382,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 183,
									"end": 9382,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209262dcd749bbe198b428215cab9ab6fed96dd76af671d263277a795ccac5649464736f6c63430008110033",
									".code": [
										{
											"begin": 183,
											"end": 9382,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 183,
											"end": 9382,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 183,
											"end": 9382,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 183,
											"end": 9382,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 183,
											"end": 9382,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 183,
											"end": 9382,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 183,
											"end": 9382,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 183,
											"end": 9382,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 183,
											"end": 9382,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/ERC1155.sol",
								"contracts/External/Address.sol",
								"contracts/External/Context.sol",
								"contracts/External/ERC165.sol",
								"contracts/External/EnumerableMap.sol",
								"contracts/External/IERC1155.sol",
								"contracts/External/IERC1155MetadataURI.sol",
								"contracts/External/IERC1155Receiver.sol",
								"contracts/External/IERC165.sol",
								"contracts/External/SafeMath.sol",
								"contracts/External/Strings.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/External/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/External/Address.sol\":{\"keccak256\":\"0x2f46c1f29abceabf3044b58a58b21d6cbfa3cced4c50ef5bb5647f67ac825045\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3ba8de493ce5e34221d17bb880a7ac9ee54910f60bb24d254df2a26e2750700\",\"dweb:/ipfs/QmYEfKf9rybhLcLQLM1gfFnmmn3WJ4acEJhRZXxn273rLG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/External/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/External/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/External/Context.sol\":{\"keccak256\":\"0xaac395688edc1129b10b3c1ff17b281ed12211fdad9d79fbc7c66451e48fd1ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4b1edd816216205384dad14ca182e5c1f369d5c441791be33738e0e0b529feaa\",\"dweb:/ipfs/QmVM6viMdjTjqY8Em6i2iKgKQtcwxTXzUchNxSfZHkUMMq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/External/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/External/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/External/ERC165.sol\":{\"keccak256\":\"0x8e00d4240c1b03af55c4dc34bf9875185da87964f448a4cd34cb5cf80d870014\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62cec786e5891e17eb73c8da07f8a4f39583425acb791b59218836e3655a81ad\",\"dweb:/ipfs/QmUVc283Q5EhBtx8qgju3ScGncoHxEMtqSmSSJFFzPtYYV\"]},\"contracts/External/IERC165.sol\":{\"keccak256\":\"0x04477a1cac572cc62ecd9df747d418b5898d40a6099a253b061dad31575a75fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aefb7b8801f749cebe99f13ea15979df1c73a16dbefcf2eb0f310c93149bd7f\",\"dweb:/ipfs/QmaGkUytPvCyquqpZbGe3eDkG2jCYZYVGug6GvVC1AavNi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1573,
								"contract": "contracts/External/ERC165.sol:ERC165",
								"label": "_supportedInterfaces",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes4,t_bool)"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes4": {
								"encoding": "inplace",
								"label": "bytes4",
								"numberOfBytes": "4"
							},
							"t_mapping(t_bytes4,t_bool)": {
								"encoding": "mapping",
								"key": "t_bytes4",
								"label": "mapping(bytes4 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/External/EnumerableMap.sol": {
				"EnumerableMap": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/External/EnumerableMap.sol\":112:3510  library EnumerableMap {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/External/EnumerableMap.sol\":112:3510  library EnumerableMap {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122076e1871ed8b0ab90e36641707b7f5d8da867293aaf3ab3ff90d629d1ff45bc6d64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122076e1871ed8b0ab90e36641707b7f5d8da867293aaf3ab3ff90d629d1ff45bc6d64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0xE1871ED8B0AB90E36641707B7F5D8DA867293AAF3AB3FF SWAP1 0xD6 0x29 0xD1 SELFDESTRUCT GASLIMIT 0xBC PUSH14 0x64736F6C63430008110033000000 ",
							"sourceMap": "112:3398:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122076e1871ed8b0ab90e36641707b7f5d8da867293aaf3ab3ff90d629d1ff45bc6d64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0xE1871ED8B0AB90E36641707B7F5D8DA867293AAF3AB3FF SWAP1 0xD6 0x29 0xD1 SELFDESTRUCT GASLIMIT 0xBC PUSH14 0x64736F6C63430008110033000000 ",
							"sourceMap": "112:3398:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_at(struct EnumerableMap.Map storage pointer,uint256)": "infinite",
								"_contains(struct EnumerableMap.Map storage pointer,bytes32)": "infinite",
								"_get(struct EnumerableMap.Map storage pointer,bytes32,string memory)": "infinite",
								"_length(struct EnumerableMap.Map storage pointer)": "infinite",
								"_remove(struct EnumerableMap.Map storage pointer,bytes32)": "infinite",
								"_set(struct EnumerableMap.Map storage pointer,bytes32,bytes32)": "infinite",
								"at(struct EnumerableMap.UintToAddressMap storage pointer,uint256)": "infinite",
								"contains(struct EnumerableMap.UintToAddressMap storage pointer,uint256)": "infinite",
								"get(struct EnumerableMap.UintToAddressMap storage pointer,uint256,string memory)": "infinite",
								"length(struct EnumerableMap.UintToAddressMap storage pointer)": "infinite",
								"remove(struct EnumerableMap.UintToAddressMap storage pointer,uint256)": "infinite",
								"set(struct EnumerableMap.UintToAddressMap storage pointer,uint256,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 112,
									"end": 3510,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 112,
									"end": 3510,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 112,
									"end": 3510,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 112,
									"end": 3510,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 112,
									"end": 3510,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 112,
									"end": 3510,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 112,
									"end": 3510,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 112,
									"end": 3510,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 112,
									"end": 3510,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 112,
									"end": 3510,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 112,
									"end": 3510,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 112,
									"end": 3510,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 112,
									"end": 3510,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 112,
									"end": 3510,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 112,
									"end": 3510,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 112,
									"end": 3510,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 112,
									"end": 3510,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 112,
									"end": 3510,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 112,
									"end": 3510,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 112,
									"end": 3510,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 112,
									"end": 3510,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 112,
									"end": 3510,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 112,
									"end": 3510,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 112,
									"end": 3510,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 112,
									"end": 3510,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 112,
									"end": 3510,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 112,
									"end": 3510,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 112,
									"end": 3510,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 112,
									"end": 3510,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 112,
									"end": 3510,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 112,
									"end": 3510,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 112,
									"end": 3510,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 112,
									"end": 3510,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 112,
									"end": 3510,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 112,
									"end": 3510,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122076e1871ed8b0ab90e36641707b7f5d8da867293aaf3ab3ff90d629d1ff45bc6d64736f6c63430008110033",
									".code": [
										{
											"begin": 112,
											"end": 3510,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 112,
											"end": 3510,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 112,
											"end": 3510,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 112,
											"end": 3510,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 112,
											"end": 3510,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 112,
											"end": 3510,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 112,
											"end": 3510,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 112,
											"end": 3510,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 112,
											"end": 3510,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"contracts/ERC1155.sol",
								"contracts/External/Address.sol",
								"contracts/External/Context.sol",
								"contracts/External/ERC165.sol",
								"contracts/External/EnumerableMap.sol",
								"contracts/External/IERC1155.sol",
								"contracts/External/IERC1155MetadataURI.sol",
								"contracts/External/IERC1155Receiver.sol",
								"contracts/External/IERC165.sol",
								"contracts/External/SafeMath.sol",
								"contracts/External/Strings.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/External/EnumerableMap.sol\":\"EnumerableMap\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/External/EnumerableMap.sol\":{\"keccak256\":\"0x3fa04da15ec8b6da6c026493ce01720cdcbbdf0c7a47c1e94be36f98673be0e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e80830acf112bcd6ecd645f6a4ea5e9903491d93f0bb6d43e474449b5e57dacf\",\"dweb:/ipfs/QmZRgjXjnhkLk786aPx95Hd2RDEYgeTyiERfjHYSXn3ri9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/External/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								}
							],
							"name": "tokenBaseURI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getCreator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "royaltyFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"getCreator(uint256)": "d48e638a",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"royaltyFee(uint256)": "c57dc235",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"tokenBaseURI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getCreator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"royaltyFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/External/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/External/IERC1155.sol\":{\"keccak256\":\"0xbf541fc72c92377a1831c8bb3357357d8b1fb360b688c6616edbc501f592749e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a110557004f6f34333236bae1c1aa8b7a518d0355d93273d1724b662e77f93fd\",\"dweb:/ipfs/QmSX8CMTw4c5TQaYiZByWEhtqEtnqYyKcacRApo5iiHbPx\"]},\"contracts/External/IERC165.sol\":{\"keccak256\":\"0x04477a1cac572cc62ecd9df747d418b5898d40a6099a253b061dad31575a75fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aefb7b8801f749cebe99f13ea15979df1c73a16dbefcf2eb0f310c93149bd7f\",\"dweb:/ipfs/QmaGkUytPvCyquqpZbGe3eDkG2jCYZYVGug6GvVC1AavNi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/External/IERC1155MetadataURI.sol": {
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								}
							],
							"name": "tokenBaseURI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getCreator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "royaltyFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"getCreator(uint256)": "d48e638a",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"royaltyFee(uint256)": "c57dc235",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"tokenBaseURI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getCreator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"royaltyFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/External/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/External/IERC1155.sol\":{\"keccak256\":\"0xbf541fc72c92377a1831c8bb3357357d8b1fb360b688c6616edbc501f592749e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a110557004f6f34333236bae1c1aa8b7a518d0355d93273d1724b662e77f93fd\",\"dweb:/ipfs/QmSX8CMTw4c5TQaYiZByWEhtqEtnqYyKcacRApo5iiHbPx\"]},\"contracts/External/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa8e4e795672233a02983bcd30485b7a455f59db738b22efb4bcef442a7dd5fab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48d8d13a431f22ea4d6fdaaeae79652481efe88603ee05f4d56aa53c7a06c460\",\"dweb:/ipfs/QmVg3Exjz3T5nZG9HNMXkrLaKGuTQw4ek3yB8hXtrSbZwL\"]},\"contracts/External/IERC165.sol\":{\"keccak256\":\"0x04477a1cac572cc62ecd9df747d418b5898d40a6099a253b061dad31575a75fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aefb7b8801f749cebe99f13ea15979df1c73a16dbefcf2eb0f310c93149bd7f\",\"dweb:/ipfs/QmaGkUytPvCyquqpZbGe3eDkG2jCYZYVGug6GvVC1AavNi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/External/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/External/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/External/IERC1155Receiver.sol\":{\"keccak256\":\"0x542f404659cf47f597b70a95f2878b546768d2a1c1be92318a31430f38fa5375\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a55480a037a571e3db9911e12206ea38d759d02ce2f9c9806aa6bbdb4f17f28e\",\"dweb:/ipfs/QmTdF2HSAEG6W9eJmJ3XpYM9A13u17GV5SEhkqEb8pkbau\"]},\"contracts/External/IERC165.sol\":{\"keccak256\":\"0x04477a1cac572cc62ecd9df747d418b5898d40a6099a253b061dad31575a75fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aefb7b8801f749cebe99f13ea15979df1c73a16dbefcf2eb0f310c93149bd7f\",\"dweb:/ipfs/QmaGkUytPvCyquqpZbGe3eDkG2jCYZYVGug6GvVC1AavNi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/External/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/External/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/External/IERC165.sol\":{\"keccak256\":\"0x04477a1cac572cc62ecd9df747d418b5898d40a6099a253b061dad31575a75fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aefb7b8801f749cebe99f13ea15979df1c73a16dbefcf2eb0f310c93149bd7f\",\"dweb:/ipfs/QmaGkUytPvCyquqpZbGe3eDkG2jCYZYVGug6GvVC1AavNi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/External/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Math operations with safety checks that throw on error",
						"kind": "dev",
						"methods": {},
						"title": "SafeMath",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/External/SafeMath.sol\":207:2108  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/External/SafeMath.sol\":207:2108  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209992b5e10882d9ae0a9e15f05f1e820624d381803732b48d85f8a83fb0f748f064736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209992b5e10882d9ae0a9e15f05f1e820624d381803732b48d85f8a83fb0f748f064736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 SWAP3 0xB5 0xE1 ADDMOD DUP3 0xD9 0xAE EXP SWAP15 ISZERO CREATE 0x5F 0x1E DUP3 MOD 0x24 0xD3 DUP2 DUP1 CALLDATACOPY ORIGIN 0xB4 DUP14 DUP6 0xF8 0xA8 EXTCODEHASH 0xB0 0xF7 BASEFEE CREATE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "207:1901:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209992b5e10882d9ae0a9e15f05f1e820624d381803732b48d85f8a83fb0f748f064736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 SWAP3 0xB5 0xE1 ADDMOD DUP3 0xD9 0xAE EXP SWAP15 ISZERO CREATE 0x5F 0x1E DUP3 MOD 0x24 0xD3 DUP2 DUP1 CALLDATACOPY ORIGIN 0xB4 DUP14 DUP6 0xF8 0xA8 EXTCODEHASH 0xB0 0xF7 BASEFEE CREATE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "207:1901:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 207,
									"end": 2108,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 207,
									"end": 2108,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209992b5e10882d9ae0a9e15f05f1e820624d381803732b48d85f8a83fb0f748f064736f6c63430008110033",
									".code": [
										{
											"begin": 207,
											"end": 2108,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 207,
											"end": 2108,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 207,
											"end": 2108,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 207,
											"end": 2108,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 207,
											"end": 2108,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 207,
											"end": 2108,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 207,
											"end": 2108,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 207,
											"end": 2108,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 207,
											"end": 2108,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"contracts/ERC1155.sol",
								"contracts/External/Address.sol",
								"contracts/External/Context.sol",
								"contracts/External/ERC165.sol",
								"contracts/External/EnumerableMap.sol",
								"contracts/External/IERC1155.sol",
								"contracts/External/IERC1155MetadataURI.sol",
								"contracts/External/IERC1155Receiver.sol",
								"contracts/External/IERC165.sol",
								"contracts/External/SafeMath.sol",
								"contracts/External/Strings.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Math operations with safety checks that throw on error\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeMath\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/External/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/External/SafeMath.sol\":{\"keccak256\":\"0xea060a43956deecfd79e602fc08adad0ac8e899ee37d67509b915546d249df3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eca8af2c52fa895aadc9945608323acf24c0879d50ea3966415704a20e52a134\",\"dweb:/ipfs/QmdA6QQ594Lj5fQAjdJo8bJTixGJKYok8VmjowxF5U9CQf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/External/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/External/Strings.sol\":150:2451  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/External/Strings.sol\":150:2451  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203a406531de86664065319f547bc6b242f996efa2cd8f17ae9f918eee8fee937664736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203a406531de86664065319f547bc6b242f996efa2cd8f17ae9f918eee8fee937664736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE BLOCKHASH PUSH6 0x31DE86664065 BALANCE SWAP16 SLOAD PUSH28 0xC6B242F996EFA2CD8F17AE9F918EEE8FEE937664736F6C6343000811 STOP CALLER ",
							"sourceMap": "150:2301:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203a406531de86664065319f547bc6b242f996efa2cd8f17ae9f918eee8fee937664736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE BLOCKHASH PUSH6 0x31DE86664065 BALANCE SWAP16 SLOAD PUSH28 0xC6B242F996EFA2CD8F17AE9F918EEE8FEE937664736F6C6343000811 STOP CALLER ",
							"sourceMap": "150:2301:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 150,
									"end": 2451,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 150,
									"end": 2451,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 150,
									"end": 2451,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 150,
									"end": 2451,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 150,
									"end": 2451,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 150,
									"end": 2451,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 150,
									"end": 2451,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 150,
									"end": 2451,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 150,
									"end": 2451,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 150,
									"end": 2451,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 2451,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 150,
									"end": 2451,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 150,
									"end": 2451,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 150,
									"end": 2451,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 150,
									"end": 2451,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 150,
									"end": 2451,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 150,
									"end": 2451,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 2451,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 150,
									"end": 2451,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 2451,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 150,
									"end": 2451,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 150,
									"end": 2451,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 150,
									"end": 2451,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 2451,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 150,
									"end": 2451,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 150,
									"end": 2451,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 150,
									"end": 2451,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 150,
									"end": 2451,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 2451,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 150,
									"end": 2451,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 150,
									"end": 2451,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 150,
									"end": 2451,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 150,
									"end": 2451,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 150,
									"end": 2451,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 150,
									"end": 2451,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203a406531de86664065319f547bc6b242f996efa2cd8f17ae9f918eee8fee937664736f6c63430008110033",
									".code": [
										{
											"begin": 150,
											"end": 2451,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 150,
											"end": 2451,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 150,
											"end": 2451,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 150,
											"end": 2451,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 150,
											"end": 2451,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 150,
											"end": 2451,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 150,
											"end": 2451,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 150,
											"end": 2451,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 150,
											"end": 2451,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"contracts/ERC1155.sol",
								"contracts/External/Address.sol",
								"contracts/External/Context.sol",
								"contracts/External/ERC165.sol",
								"contracts/External/EnumerableMap.sol",
								"contracts/External/IERC1155.sol",
								"contracts/External/IERC1155MetadataURI.sol",
								"contracts/External/IERC1155Receiver.sol",
								"contracts/External/IERC165.sol",
								"contracts/External/SafeMath.sol",
								"contracts/External/Strings.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/External/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/External/Strings.sol\":{\"keccak256\":\"0xe0c83dd25019c41fda8798164ae0399a42e70250f7991eaf8c142be9ce9c7edd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://062b9f059c2065fc3bcb16d183371646b183bd64d61dacd1bfece569fa02de22\",\"dweb:/ipfs/QmS4qk9W9opCSg55SbAVKCEKUsor7LKpoW4gUKf86rNKZg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/ERC1155.sol": {
				"ast": {
					"absolutePath": "contracts/ERC1155.sol",
					"exportedSymbols": {
						"Address": [
							1546
						],
						"Context": [
							1561
						],
						"ERC1155": [
							1216
						],
						"ERC165": [
							1614
						],
						"EnumerableMap": [
							2038
						],
						"IERC1155": [
							2184
						],
						"IERC1155MetadataURI": [
							2199
						],
						"IERC1155Receiver": [
							2240
						],
						"IERC165": [
							2252
						],
						"SafeMath": [
							2445
						],
						"Strings": [
							2671
						]
					},
					"id": 1217,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "85:23:0"
						},
						{
							"absolutePath": "contracts/External/Context.sol",
							"file": "./External/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1217,
							"sourceUnit": 1562,
							"src": "112:32:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/External/ERC165.sol",
							"file": "./External/ERC165.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1217,
							"sourceUnit": 1615,
							"src": "146:31:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/External/IERC1155.sol",
							"file": "./External/IERC1155.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1217,
							"sourceUnit": 2185,
							"src": "179:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/External/SafeMath.sol",
							"file": "./External/SafeMath.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1217,
							"sourceUnit": 2446,
							"src": "214:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/External/Address.sol",
							"file": "./External/Address.sol",
							"id": 6,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1217,
							"sourceUnit": 1547,
							"src": "249:32:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/External/Strings.sol",
							"file": "./External/Strings.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1217,
							"sourceUnit": 2672,
							"src": "283:32:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/External/EnumerableMap.sol",
							"file": "./External/EnumerableMap.sol",
							"id": 8,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1217,
							"sourceUnit": 2039,
							"src": "317:38:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/External/IERC1155MetadataURI.sol",
							"file": "./External/IERC1155MetadataURI.sol",
							"id": 9,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1217,
							"sourceUnit": 2200,
							"src": "357:44:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/External/IERC1155Receiver.sol",
							"file": "./External/IERC1155Receiver.sol",
							"id": 10,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1217,
							"sourceUnit": 2241,
							"src": "403:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 11,
										"name": "Context",
										"nameLocations": [
											"468:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1561,
										"src": "468:7:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "468:7:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ERC165",
										"nameLocations": [
											"477:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1614,
										"src": "477:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "477:6:0"
								},
								{
									"baseName": {
										"id": 15,
										"name": "IERC1155",
										"nameLocations": [
											"484:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2184,
										"src": "484:8:0"
									},
									"id": 16,
									"nodeType": "InheritanceSpecifier",
									"src": "484:8:0"
								}
							],
							"canonicalName": "ERC1155",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1216,
							"linearizedBaseContracts": [
								1216,
								2184,
								1614,
								2252,
								1561
							],
							"name": "ERC1155",
							"nameLocation": "457:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 19,
									"libraryName": {
										"id": 17,
										"name": "SafeMath",
										"nameLocations": [
											"507:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2445,
										"src": "507:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "501:27:0",
									"typeName": {
										"id": 18,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "520:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 22,
									"libraryName": {
										"id": 20,
										"name": "Address",
										"nameLocations": [
											"540:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1546,
										"src": "540:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "534:26:0",
									"typeName": {
										"id": 21,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "552:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"global": false,
									"id": 25,
									"libraryName": {
										"id": 23,
										"name": "Strings",
										"nameLocations": [
											"572:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2671,
										"src": "572:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "566:26:0",
									"typeName": {
										"id": 24,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "584:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 29,
									"libraryName": {
										"id": 26,
										"name": "EnumerableMap",
										"nameLocations": [
											"604:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2038,
										"src": "604:13:0"
									},
									"nodeType": "UsingForDirective",
									"src": "598:55:0",
									"typeName": {
										"id": 28,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 27,
											"name": "EnumerableMap.UintToAddressMap",
											"nameLocations": [
												"622:13:0",
												"636:16:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1880,
											"src": "622:30:0"
										},
										"referencedDeclaration": 1880,
										"src": "622:30:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_UintToAddressMap_$1880_storage_ptr",
											"typeString": "struct EnumerableMap.UintToAddressMap"
										}
									}
								},
								{
									"constant": false,
									"id": 33,
									"mutability": "mutable",
									"name": "creators",
									"nameLocation": "748:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 1216,
									"src": "711:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 32,
										"keyType": {
											"id": 30,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "720:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "711:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 31,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "731:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 37,
									"mutability": "mutable",
									"name": "_royaltyFee",
									"nameLocation": "800:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1216,
									"src": "763:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 36,
										"keyType": {
											"id": 34,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "772:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "763:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 35,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "783:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 43,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "875:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1216,
									"src": "818:66:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 42,
										"keyType": {
											"id": 38,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "827:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "818:48:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueType": {
											"id": 41,
											"keyType": {
												"id": 39,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "846:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "838:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 40,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "857:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 49,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "998:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 1216,
									"src": "944:72:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 48,
										"keyType": {
											"id": 44,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "953:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "944:45:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 47,
											"keyType": {
												"id": 45,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "972:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "964:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 46,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "983:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "c0ac9983",
									"id": 52,
									"mutability": "mutable",
									"name": "tokenURIPrefix",
									"nameLocation": "1037:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1216,
									"src": "1023:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 50,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1023:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "",
										"id": 51,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1054:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
											"typeString": "literal_string \"\""
										},
										"value": ""
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 56,
									"mutability": "mutable",
									"name": "_tokenURIs",
									"nameLocation": "1140:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 1216,
									"src": "1105:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 55,
										"keyType": {
											"id": 53,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1113:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1105:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueType": {
											"id": 54,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "1124:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 59,
									"mutability": "mutable",
									"name": "_tokenOwners",
									"nameLocation": "1198:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1216,
									"src": "1159:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_UintToAddressMap_$1880_storage",
										"typeString": "struct EnumerableMap.UintToAddressMap"
									},
									"typeName": {
										"id": 58,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 57,
											"name": "EnumerableMap.UintToAddressMap",
											"nameLocations": [
												"1159:13:0",
												"1173:16:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1880,
											"src": "1159:30:0"
										},
										"referencedDeclaration": 1880,
										"src": "1159:30:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_UintToAddressMap_$1880_storage_ptr",
											"typeString": "struct EnumerableMap.UintToAddressMap"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 61,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1234:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1216,
									"src": "1219:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 60,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1219:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 63,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1263:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1216,
									"src": "1248:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 62,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1248:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 66,
									"mutability": "constant",
									"name": "_INTERFACE_ID_ERC1155",
									"nameLocation": "1303:21:0",
									"nodeType": "VariableDeclaration",
									"scope": 1216,
									"src": "1279:58:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 64,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "1279:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30786439623637613236",
										"id": 65,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1327:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3652614694_by_1",
											"typeString": "int_const 3652614694"
										},
										"value": "0xd9b67a26"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 69,
									"mutability": "constant",
									"name": "_INTERFACE_ID_ERC1155_METADATA_URI",
									"nameLocation": "1370:34:0",
									"nodeType": "VariableDeclaration",
									"scope": 1216,
									"src": "1346:71:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 67,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "1346:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30783065383933343163",
										"id": 68,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1407:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_243872796_by_1",
											"typeString": "int_const 243872796"
										},
										"value": "0x0e89341c"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "1483:179:0",
										"statements": [
											{
												"expression": {
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 76,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 61,
														"src": "1494:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 77,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 71,
														"src": "1502:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1494:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "1494:13:0"
											},
											{
												"expression": {
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 80,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "1518:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 81,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 73,
														"src": "1528:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1518:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 83,
												"nodeType": "ExpressionStatement",
												"src": "1518:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 85,
															"name": "_INTERFACE_ID_ERC1155",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 66,
															"src": "1567:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"id": 84,
														"name": "_registerInterface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1613,
														"src": "1548:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
															"typeString": "function (bytes4)"
														}
													},
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1548:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 87,
												"nodeType": "ExpressionStatement",
												"src": "1548:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 89,
															"name": "_INTERFACE_ID_ERC1155_METADATA_URI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 69,
															"src": "1619:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"id": 88,
														"name": "_registerInterface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1613,
														"src": "1600:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
															"typeString": "function (bytes4)"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1600:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "1600:54:0"
											}
										]
									},
									"id": 93,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "1439:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 70,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1439:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "1460:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 72,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1460:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1438:44:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1483:0:0"
									},
									"scope": 1216,
									"src": "1426:236:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2092
									],
									"body": {
										"id": 101,
										"nodeType": "Block",
										"src": "1739:31:0",
										"statements": [
											{
												"expression": {
													"id": 99,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 61,
													"src": "1757:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 98,
												"id": 100,
												"nodeType": "Return",
												"src": "1750:12:0"
											}
										]
									},
									"functionSelector": "06fdde03",
									"id": 102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1679:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 95,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1706:8:0"
									},
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1683:2:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "1724:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 96,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1724:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1723:15:0"
									},
									"scope": 1216,
									"src": "1670:100:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2097
									],
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "1849:33:0",
										"statements": [
											{
												"expression": {
													"id": 108,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 63,
													"src": "1867:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 107,
												"id": 109,
												"nodeType": "Return",
												"src": "1860:14:0"
											}
										]
									},
									"functionSelector": "95d89b41",
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1787:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 104,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1816:8:0"
									},
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:0"
									},
									"returnParameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "1834:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 105,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1834:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1833:15:0"
									},
									"scope": 1216,
									"src": "1778:104:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2213:44:0",
										"statements": [
											{
												"expression": {
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 119,
															"name": "_tokenURIs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "2224:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 121,
														"indexExpression": {
															"id": 120,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "2235:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2224:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 122,
														"name": "uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 116,
														"src": "2246:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2224:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2224:25:0"
											}
										]
									},
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "1890:244:0",
										"text": " @dev Internal function to set the token URI for a given token.\n Reverts if the token ID does not exist.\n @param tokenId uint256 ID of the token to set its URI\n @param uri string URI to assign"
									},
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTokenURI",
									"nameLocation": "2155:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2176:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2168:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2168:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "2199:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2185:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 115,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2185:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2167:36:0"
									},
									"returnParameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2213:0:0"
									},
									"scope": 1216,
									"src": "2146:111:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2113
									],
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "2511:46:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 135,
														"name": "_royaltyFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "2529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 137,
													"indexExpression": {
														"id": 136,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "2541:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2529:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 134,
												"id": 138,
												"nodeType": "Return",
												"src": "2522:27:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2265:163:0",
										"text": "@notice Get the royalty associated with tokenID.\n@param tokenId     ID of the Token.\n@return        royaltyFee of given ID."
									},
									"functionSelector": "c57dc235",
									"id": 140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "royaltyFee",
									"nameLocation": "2445:10:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 131,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2485:8:0"
									},
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2464:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "2456:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2456:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2455:17:0"
									},
									"returnParameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "2502:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2502:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2501:9:0"
									},
									"scope": 1216,
									"src": "2436:121:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2120
									],
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "2813:43:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 149,
														"name": "creators",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "2831:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 151,
													"indexExpression": {
														"id": 150,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "2840:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2831:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 148,
												"id": 152,
												"nodeType": "Return",
												"src": "2824:24:0"
											}
										]
									},
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "2565:153:0",
										"text": "@notice Get the creator of given tokenID.\n@param tokenId     ID of the Token.\n@return        creator of given ID."
									},
									"functionSelector": "d48e638a",
									"id": 154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCreator",
									"nameLocation": "2739:10:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 145,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2787:8:0"
									},
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2758:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "2750:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2750:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2749:17:0"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "2804:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2804:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2803:9:0"
									},
									"scope": 1216,
									"src": "2730:126:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "3108:96:0",
										"statements": [
											{
												"expression": {
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 160,
														"name": "tokenURIPrefix",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "3119:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 161,
														"name": "_tokenURIPrefix",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 157,
														"src": "3136:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "3119:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 163,
												"nodeType": "ExpressionStatement",
												"src": "3119:32:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 165,
															"name": "_tokenURIPrefix",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "3180:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 164,
														"name": "tokenBaseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2087,
														"src": "3167:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3167:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 167,
												"nodeType": "EmitStatement",
												"src": "3162:34:0"
											}
										]
									},
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "2864:165:0",
										"text": " @dev Internal function to set the token URI for all the tokens.\n @param _tokenURIPrefix string memory _tokenURIPrefix of the tokens."
									},
									"id": 169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTokenURIPrefix",
									"nameLocation": "3049:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "_tokenURIPrefix",
												"nameLocation": "3082:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "3068:29:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 156,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3068:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3067:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3108:0:0"
									},
									"scope": 1216,
									"src": "3040:164:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2127
									],
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "3513:468:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 180,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 172,
																	"src": "3540:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 179,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 249,
																"src": "3532:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3532:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135354d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 182,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3550:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a2c9550e091ebcfc2e7b62d57acd1844a32d2d24186a26ce3ff82a283ed9e8ea",
																"typeString": "literal_string \"ERC1155Metadata: URI query for nonexistent token\""
															},
															"value": "ERC1155Metadata: URI query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a2c9550e091ebcfc2e7b62d57acd1844a32d2d24186a26ce3ff82a283ed9e8ea",
																"typeString": "literal_string \"ERC1155Metadata: URI query for nonexistent token\""
															}
														],
														"id": 178,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3524:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3524:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 184,
												"nodeType": "ExpressionStatement",
												"src": "3524:77:0"
											},
											{
												"assignments": [
													186
												],
												"declarations": [
													{
														"constant": false,
														"id": 186,
														"mutability": "mutable",
														"name": "_tokenURI",
														"nameLocation": "3626:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 235,
														"src": "3612:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 185,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "3612:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 190,
												"initialValue": {
													"baseExpression": {
														"id": 187,
														"name": "_tokenURIs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "3638:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 189,
													"indexExpression": {
														"id": 188,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "3649:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3638:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3612:45:0"
											},
											{
												"assignments": [
													192
												],
												"declarations": [
													{
														"constant": false,
														"id": 192,
														"mutability": "mutable",
														"name": "base",
														"nameLocation": "3682:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 235,
														"src": "3668:18:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 191,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "3668:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 194,
												"initialValue": {
													"id": 193,
													"name": "tokenURIPrefix",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 52,
													"src": "3689:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3668:35:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 197,
																	"name": "base",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 192,
																	"src": "3726:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 196,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3720:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 195,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "3720:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 198,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3720:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 199,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3732:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3720:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 200,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3742:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3720:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 205,
												"nodeType": "IfStatement",
												"src": "3716:72:0",
												"trueBody": {
													"id": 204,
													"nodeType": "Block",
													"src": "3745:43:0",
													"statements": [
														{
															"expression": {
																"id": 202,
																"name": "_tokenURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "3767:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 177,
															"id": 203,
															"nodeType": "Return",
															"src": "3760:16:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 208,
																	"name": "_tokenURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 186,
																	"src": "3808:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 207,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3802:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 206,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "3802:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3802:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 210,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3819:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3802:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 211,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3828:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3802:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 223,
												"nodeType": "IfStatement",
												"src": "3798:108:0",
												"trueBody": {
													"id": 222,
													"nodeType": "Block",
													"src": "3831:75:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 217,
																				"name": "base",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 192,
																				"src": "3877:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			},
																			{
																				"id": 218,
																				"name": "_tokenURI",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 186,
																				"src": "3883:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				},
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			],
																			"expression": {
																				"id": 215,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3860:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 216,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3864:12:0",
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"src": "3860:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 219,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3860:33:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3853:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																		"typeString": "type(string storage pointer)"
																	},
																	"typeName": {
																		"id": 213,
																		"name": "string",
																		"nodeType": "ElementaryTypeName",
																		"src": "3853:6:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3853:41:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 177,
															"id": 221,
															"nodeType": "Return",
															"src": "3846:48:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 228,
																	"name": "base",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 192,
																	"src": "3947:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 229,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 172,
																			"src": "3953:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3961:8:0",
																		"memberName": "toString",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2533,
																		"src": "3953:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3953:18:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 226,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "3930:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 227,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "3934:12:0",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "3930:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3930:42:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 225,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3923:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 224,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "3923:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3923:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 177,
												"id": 234,
												"nodeType": "Return",
												"src": "3916:57:0"
											}
										]
									},
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "3212:201:0",
										"text": " @dev Returns an URI for a given token ID.\n Throws if the token ID does not exist. May return an empty string.\n @param tokenId uint256 ID of the token to query"
									},
									"functionSelector": "c87b56dd",
									"id": 236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "3434:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 174,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3480:8:0"
									},
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3451:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "3443:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3443:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3442:17:0"
									},
									"returnParameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "3498:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3498:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3497:15:0"
									},
									"scope": 1216,
									"src": "3425:556:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 248,
										"nodeType": "Block",
										"src": "4060:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 245,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 238,
															"src": "4100:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 243,
															"name": "_tokenOwners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "4078:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UintToAddressMap_$1880_storage",
																"typeString": "struct EnumerableMap.UintToAddressMap storage ref"
															}
														},
														"id": 244,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4091:8:0",
														"memberName": "contains",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1952,
														"src": "4078:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_UintToAddressMap_$1880_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintToAddressMap_$1880_storage_ptr_$",
															"typeString": "function (struct EnumerableMap.UintToAddressMap storage pointer,uint256) view returns (bool)"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4078:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 242,
												"id": 247,
												"nodeType": "Return",
												"src": "4071:37:0"
											}
										]
									},
									"id": 249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "3998:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4014:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4006:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4006:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:17:0"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4054:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 240,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4054:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4053:6:0"
									},
									"scope": 1216,
									"src": "3989:127:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 258,
										"nodeType": "Block",
										"src": "4185:50:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 254,
															"name": "_tokenOwners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "4203:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UintToAddressMap_$1880_storage",
																"typeString": "struct EnumerableMap.UintToAddressMap storage ref"
															}
														},
														"id": 255,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4216:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1966,
														"src": "4203:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_UintToAddressMap_$1880_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_UintToAddressMap_$1880_storage_ptr_$",
															"typeString": "function (struct EnumerableMap.UintToAddressMap storage pointer) view returns (uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4203:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 253,
												"id": 257,
												"nodeType": "Return",
												"src": "4196:28:0"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "4131:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4142:2:0"
									},
									"returnParameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "4176:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4176:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4175:9:0"
									},
									"scope": 1216,
									"src": "4122:113:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2106
									],
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "4733:233:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 272,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 264,
																	"src": "4760:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 271,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 249,
																"src": "4752:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4752:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135354d657461646174613a2062616c616e636520717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4770:54:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_814321ce53d18305d90f5349bfa54202656fbfd2d04057161762f5aea6b210d2",
																"typeString": "literal_string \"ERC1155Metadata: balance query for nonexistent token\""
															},
															"value": "ERC1155Metadata: balance query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_814321ce53d18305d90f5349bfa54202656fbfd2d04057161762f5aea6b210d2",
																"typeString": "literal_string \"ERC1155Metadata: balance query for nonexistent token\""
															}
														],
														"id": 270,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4744:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4744:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "4744:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 278,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 262,
																"src": "4844:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4863:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4855:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 279,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4855:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 282,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4855:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4844:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
															"id": 284,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4867:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																"typeString": "literal_string \"ERC1155: balance query for the zero address\""
															},
															"value": "ERC1155: balance query for the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																"typeString": "literal_string \"ERC1155: balance query for the zero address\""
															}
														],
														"id": 277,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4836:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4836:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 286,
												"nodeType": "ExpressionStatement",
												"src": "4836:77:0"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 287,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "4931:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 289,
														"indexExpression": {
															"id": 288,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "4941:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4931:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 291,
													"indexExpression": {
														"id": 290,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 262,
														"src": "4950:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4931:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 269,
												"id": 292,
												"nodeType": "Return",
												"src": "4924:34:0"
											}
										]
									},
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "4391:242:0",
										"text": "@notice Get the balance of an account's Tokens.\n@param account  The address of the token holder\n@param tokenId     ID of the Token\n@return        The owner's balance of the Token type requested"
									},
									"functionSelector": "00fdd58e",
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4650:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 266,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4706:8:0"
									},
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4668:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "4660:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4660:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4685:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "4677:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4677:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4659:34:0"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "4724:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4724:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4723:9:0"
									},
									"scope": 1216,
									"src": "4641:325:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2139
									],
									"body": {
										"id": 370,
										"nodeType": "Block",
										"src": "5463:447:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 309,
																	"name": "accounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 298,
																	"src": "5482:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5491:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "5482:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 311,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 301,
																	"src": "5501:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 312,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5505:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "5501:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5482:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368",
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5513:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															},
															"value": "ERC1155: accounts and ids length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															}
														],
														"id": 308,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5474:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5474:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 316,
												"nodeType": "ExpressionStatement",
												"src": "5474:83:0"
											},
											{
												"assignments": [
													321
												],
												"declarations": [
													{
														"constant": false,
														"id": 321,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "5587:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 370,
														"src": "5570:30:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 319,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5570:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 320,
															"nodeType": "ArrayTypeName",
															"src": "5570:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 328,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 325,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 298,
																"src": "5617:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5626:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5617:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 324,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "5603:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 322,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5607:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 323,
															"nodeType": "ArrayTypeName",
															"src": "5607:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5603:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5570:63:0"
											},
											{
												"body": {
													"id": 366,
													"nodeType": "Block",
													"src": "5692:178:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 348,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 341,
																				"name": "accounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 298,
																				"src": "5715:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 343,
																			"indexExpression": {
																				"id": 342,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 330,
																				"src": "5724:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5715:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 346,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5738:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 345,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5730:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 344,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5730:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 347,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5730:10:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "5715:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a2062617463682062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
																		"id": 349,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5742:51:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_1fbbb69d10332726591dc7ee4a23a94661eda2bec5ce6bf93a68249147dc8d9c",
																			"typeString": "literal_string \"ERC1155: batch balance query for the zero address\""
																		},
																		"value": "ERC1155: batch balance query for the zero address"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_1fbbb69d10332726591dc7ee4a23a94661eda2bec5ce6bf93a68249147dc8d9c",
																			"typeString": "literal_string \"ERC1155: batch balance query for the zero address\""
																		}
																	],
																	"id": 340,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "5707:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5707:87:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 351,
															"nodeType": "ExpressionStatement",
															"src": "5707:87:0"
														},
														{
															"expression": {
																"id": 364,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 352,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 321,
																		"src": "5809:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 354,
																	"indexExpression": {
																		"id": 353,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 330,
																		"src": "5823:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5809:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 355,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 43,
																			"src": "5828:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 359,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 356,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 301,
																				"src": "5838:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 358,
																			"indexExpression": {
																				"id": 357,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 330,
																				"src": "5842:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5838:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5828:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 363,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 360,
																			"name": "accounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 298,
																			"src": "5846:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 362,
																		"indexExpression": {
																			"id": 361,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 330,
																			"src": "5855:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5846:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5828:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5809:49:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 365,
															"nodeType": "ExpressionStatement",
															"src": "5809:49:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 333,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "5666:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 334,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "5670:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 335,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5679:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5670:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5666:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 367,
												"initializationExpression": {
													"assignments": [
														330
													],
													"declarations": [
														{
															"constant": false,
															"id": 330,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5659:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 367,
															"src": "5651:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 329,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5651:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 332,
													"initialValue": {
														"hexValue": "30",
														"id": 331,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5663:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5651:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 338,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "5687:3:0",
														"subExpression": {
															"id": 337,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "5689:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 339,
													"nodeType": "ExpressionStatement",
													"src": "5687:3:0"
												},
												"nodeType": "ForStatement",
												"src": "5646:224:0"
											},
											{
												"expression": {
													"id": 368,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 321,
													"src": "5889:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 307,
												"id": 369,
												"nodeType": "Return",
												"src": "5882:20:0"
											}
										]
									},
									"documentation": {
										"id": 295,
										"nodeType": "StructuredDocumentation",
										"src": "4976:292:0",
										"text": "@notice Get the balance of multiple account/token pairs\n@param accounts The addresses of the token holders\n@param ids    ID of the Tokens\n@return        The _owner's balance of the Token types requested (i.e. balance for each (owner, id) pair)"
									},
									"functionSelector": "4e1273f4",
									"id": 371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "5285:14:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 303,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5413:8:0"
									},
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "5327:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "5310:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 296,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "5310:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 297,
													"nodeType": "ArrayTypeName",
													"src": "5310:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "5363:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "5346:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 299,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5346:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 300,
													"nodeType": "ArrayTypeName",
													"src": "5346:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5299:74:0"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "5440:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 304,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5440:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 305,
													"nodeType": "ArrayTypeName",
													"src": "5440:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5439:18:0"
									},
									"scope": 1216,
									"src": "5276:634:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2146
									],
									"body": {
										"id": 404,
										"nodeType": "Block",
										"src": "6356:227:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 381,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1560,
																	"src": "6375:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 382,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6375:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 383,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 374,
																"src": "6391:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6375:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66",
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6401:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															},
															"value": "ERC1155: setting approval status for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															}
														],
														"id": 380,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6367:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6367:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 387,
												"nodeType": "ExpressionStatement",
												"src": "6367:78:0"
											},
											{
												"expression": {
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 388,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 49,
																"src": "6458:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 392,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 389,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1560,
																	"src": "6477:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6477:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6458:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 393,
														"indexExpression": {
															"id": 391,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "6491:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6458:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 394,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "6503:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6458:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 396,
												"nodeType": "ExpressionStatement",
												"src": "6458:53:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 398,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1560,
																"src": "6542:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6542:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 400,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "6556:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 401,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "6566:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 397,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2077,
														"src": "6527:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6527:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 403,
												"nodeType": "EmitStatement",
												"src": "6522:53:0"
											}
										]
									},
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "5918:346:0",
										"text": "@notice Enable or disable approval for a third party (\"operator\") to manage all of the caller's tokens.\n@dev MUST emit the ApprovalForAll event on success.\n@param operator  Address to add to the set of authorized operators\n@param approved  True if the operator is approved, false to revoke approval"
									},
									"functionSelector": "a22cb465",
									"id": 405,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "6281:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 378,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6347:8:0"
									},
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6307:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "6299:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6299:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "6322:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "6317:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 375,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6317:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6298:33:0"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6356:0:0"
									},
									"scope": 1216,
									"src": "6272:311:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2155
									],
									"body": {
										"id": 422,
										"nodeType": "Block",
										"src": "6969:63:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 416,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 49,
															"src": "6987:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 418,
														"indexExpression": {
															"id": 417,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "7006:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6987:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 420,
													"indexExpression": {
														"id": 419,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 410,
														"src": "7015:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6987:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 415,
												"id": 421,
												"nodeType": "Return",
												"src": "6980:44:0"
											}
										]
									},
									"documentation": {
										"id": 406,
										"nodeType": "StructuredDocumentation",
										"src": "6591:273:0",
										"text": "@notice Queries the approval status of an operator for a given owner.\n@param account     The owner of the Tokens\n@param operator  Address of authorized operator\n@return           True if the operator is approved, false if not"
									},
									"functionSelector": "e985e9c5",
									"id": 423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "6881:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 412,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6945:8:0"
									},
									"parameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6906:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "6898:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6923:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "6915:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6915:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6897:35:0"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "6963:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 413,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6963:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6962:6:0"
									},
									"scope": 1216,
									"src": "6872:160:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2168
									],
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "8407:752:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 439,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 428,
																"src": "8426:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 442,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8440:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 441,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8432:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 440,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8432:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 443,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8432:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8426:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8444:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 438,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8418:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8418:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 447,
												"nodeType": "ExpressionStatement",
												"src": "8418:66:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 449,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 426,
																	"src": "8517:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 450,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1560,
																		"src": "8525:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																			"typeString": "function () view returns (address payable)"
																		}
																	},
																	"id": 451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8525:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "8517:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 454,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 426,
																		"src": "8558:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 455,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1560,
																			"src": "8564:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 456,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8564:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"id": 453,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 423,
																	"src": "8541:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 457,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8541:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "8517:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 459,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8592:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															},
															"value": "ERC1155: caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															}
														],
														"id": 448,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8495:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8495:151:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 461,
												"nodeType": "ExpressionStatement",
												"src": "8495:151:0"
											},
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "8667:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 528,
														"src": "8659:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8659:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1560,
														"src": "8678:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8678:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8659:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "8724:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 426,
															"src": "8734:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 428,
															"src": "8740:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 472,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 430,
																	"src": "8762:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 471,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1215,
																"src": "8744:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8744:26:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 475,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 432,
																	"src": "8790:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 474,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1215,
																"src": "8772:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8772:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 477,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 434,
															"src": "8799:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 467,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1055,
														"src": "8703:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8703:101:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 479,
												"nodeType": "ExpressionStatement",
												"src": "8703:101:0"
											},
											{
												"expression": {
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 480,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "8817:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 483,
															"indexExpression": {
																"id": 481,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "8827:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8817:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 484,
														"indexExpression": {
															"id": 482,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 426,
															"src": "8836:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8817:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 491,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 432,
																"src": "8873:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8881:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																	"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																},
																"value": "ERC1155: insufficient balance for transfer"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																	"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																}
															],
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 485,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 43,
																		"src": "8844:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 487,
																	"indexExpression": {
																		"id": 486,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 430,
																		"src": "8854:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8844:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 489,
																"indexExpression": {
																	"id": 488,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 426,
																	"src": "8863:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8844:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8869:3:0",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2325,
															"src": "8844:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8844:82:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8817:109:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 495,
												"nodeType": "ExpressionStatement",
												"src": "8817:109:0"
											},
											{
												"expression": {
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 496,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "8937:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 499,
															"indexExpression": {
																"id": 497,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "8947:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8937:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 500,
														"indexExpression": {
															"id": 498,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 428,
															"src": "8956:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8937:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 507,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 432,
																"src": "8989:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 501,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 43,
																		"src": "8962:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 503,
																	"indexExpression": {
																		"id": 502,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 430,
																		"src": "8972:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8962:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 505,
																"indexExpression": {
																	"id": 504,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 428,
																	"src": "8981:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8962:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8985:3:0",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2281,
															"src": "8962:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 508,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8962:34:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8937:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 510,
												"nodeType": "ExpressionStatement",
												"src": "8937:59:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 512,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "9029:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 513,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 426,
															"src": "9039:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 514,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 428,
															"src": "9045:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 515,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "9049:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 516,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "9058:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 511,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2055,
														"src": "9014:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9014:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 518,
												"nodeType": "EmitStatement",
												"src": "9009:56:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 520,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "9109:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 521,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 426,
															"src": "9119:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 522,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 428,
															"src": "9125:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 523,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "9129:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 524,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "9138:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 525,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 434,
															"src": "9146:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 519,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "9078:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9078:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "9078:73:0"
											}
										]
									},
									"documentation": {
										"id": 424,
										"nodeType": "StructuredDocumentation",
										"src": "7040:1143:0",
										"text": "@notice Transfers `_value` amount of an `_id` from the `_from` address to the `_to` address specified (with safety call).\n@dev Caller must be approved to manage the tokens being transferred out of the `_from` account (see \"Approval\" section of the standard).\nMUST revert if `_to` is the zero address.\nMUST revert if balance of holder for token `_id` is lower than the `_value` sent.\nMUST revert on any other error.\nMUST emit the `TransferSingle` event to reflect the balance change (see \"Safe Transfer Rules\" section of the standard).\nAfter the above conditions are met, this function MUST check if `_to` is a smart contract (e.g. code size > 0). If so, it MUST call `onERC1155Received` on `_to` and act appropriately (see \"Safe Transfer Rules\" section of the standard).\n@param from    Source address\n@param to      Target address\n@param tokenId      ID of the token type\n@param amount   Transfer amount\n@param data    Additional data with no specified format, MUST be sent unaltered in call to `onERC1155Received` on `_to`"
									},
									"functionSelector": "f242432a",
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "8204:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 436,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8393:8:0"
									},
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8239:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "8231:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8231:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8262:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "8254:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8254:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8283:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "8275:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8275:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8309:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "8301:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8301:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8339:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "8326:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 433,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8326:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8220:130:0"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8407:0:0"
									},
									"scope": 1216,
									"src": "8195:964:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2183
									],
									"body": {
										"id": 666,
										"nodeType": "Block",
										"src": "11047:1043:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 547,
																	"name": "tokenIds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 537,
																	"src": "11066:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11075:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "11066:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 549,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 540,
																	"src": "11085:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 550,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11093:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "11085:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11066:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11101:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 546,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11058:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11058:86:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 554,
												"nodeType": "ExpressionStatement",
												"src": "11058:86:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 556,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 534,
																"src": "11163:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 559,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11177:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 558,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11169:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 557,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11169:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 560,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11169:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11163:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11181:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 555,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11155:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11155:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 564,
												"nodeType": "ExpressionStatement",
												"src": "11155:66:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 569,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 566,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "11254:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 567,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1560,
																		"src": "11262:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																			"typeString": "function () view returns (address payable)"
																		}
																	},
																	"id": 568,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11262:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "11254:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 571,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 532,
																		"src": "11295:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 572,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1560,
																			"src": "11301:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11301:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"id": 570,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 423,
																	"src": "11278:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11278:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "11254:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11329:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															},
															"value": "ERC1155: transfer caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															}
														],
														"id": 565,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11232:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11232:160:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 578,
												"nodeType": "ExpressionStatement",
												"src": "11232:160:0"
											},
											{
												"assignments": [
													580
												],
												"declarations": [
													{
														"constant": false,
														"id": 580,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "11413:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 666,
														"src": "11405:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 579,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11405:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 583,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 581,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1560,
														"src": "11424:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11424:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11405:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 585,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "11470:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 586,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "11480:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 587,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "11486:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 588,
															"name": "tokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "11490:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 589,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "11500:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 590,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "11509:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 584,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1055,
														"src": "11449:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11449:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 592,
												"nodeType": "ExpressionStatement",
												"src": "11449:65:0"
											},
											{
												"body": {
													"id": 647,
													"nodeType": "Block",
													"src": "11573:347:0",
													"statements": [
														{
															"assignments": [
																605
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 605,
																	"mutability": "mutable",
																	"name": "tokenId",
																	"nameLocation": "11596:7:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 647,
																	"src": "11588:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 604,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11588:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 609,
															"initialValue": {
																"baseExpression": {
																	"id": 606,
																	"name": "tokenIds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 537,
																	"src": "11606:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 608,
																"indexExpression": {
																	"id": 607,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 594,
																	"src": "11615:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11606:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11588:29:0"
														},
														{
															"assignments": [
																611
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 611,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "11640:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 647,
																	"src": "11632:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 610,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11632:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 615,
															"initialValue": {
																"baseExpression": {
																	"id": 612,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 540,
																	"src": "11649:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 614,
																"indexExpression": {
																	"id": 613,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 594,
																	"src": "11657:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11649:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11632:27:0"
														},
														{
															"expression": {
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 616,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 43,
																			"src": "11676:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 619,
																		"indexExpression": {
																			"id": 617,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 605,
																			"src": "11686:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "11676:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 620,
																	"indexExpression": {
																		"id": 618,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 532,
																		"src": "11695:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "11676:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 627,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 611,
																			"src": "11750:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
																			"id": 628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11775:44:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																				"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																			},
																			"value": "ERC1155: insufficient balance for transfer"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																				"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 621,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 43,
																					"src": "11703:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 623,
																				"indexExpression": {
																					"id": 622,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 605,
																					"src": "11713:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "11703:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 625,
																			"indexExpression": {
																				"id": 624,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "11722:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "11703:24:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 626,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "11728:3:0",
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2325,
																		"src": "11703:28:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																		}
																	},
																	"id": 629,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11703:131:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11676:158:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 631,
															"nodeType": "ExpressionStatement",
															"src": "11676:158:0"
														},
														{
															"expression": {
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 632,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 43,
																			"src": "11849:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 635,
																		"indexExpression": {
																			"id": 633,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 605,
																			"src": "11859:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "11849:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 636,
																	"indexExpression": {
																		"id": 634,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 534,
																		"src": "11868:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "11849:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 643,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 611,
																			"src": "11901:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 637,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 43,
																					"src": "11874:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 639,
																				"indexExpression": {
																					"id": 638,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 605,
																					"src": "11884:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "11874:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 641,
																			"indexExpression": {
																				"id": 640,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "11893:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "11874:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 642,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "11897:3:0",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2281,
																		"src": "11874:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11874:34:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11849:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 646,
															"nodeType": "ExpressionStatement",
															"src": "11849:59:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 597,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "11547:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 598,
															"name": "tokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "11551:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 599,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11560:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "11551:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11547:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"initializationExpression": {
													"assignments": [
														594
													],
													"declarations": [
														{
															"constant": false,
															"id": 594,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "11540:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 648,
															"src": "11532:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 593,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11532:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 596,
													"initialValue": {
														"hexValue": "30",
														"id": 595,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11544:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "11532:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 602,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "11568:3:0",
														"subExpression": {
															"id": 601,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "11570:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 603,
													"nodeType": "ExpressionStatement",
													"src": "11568:3:0"
												},
												"nodeType": "ForStatement",
												"src": "11527:393:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 650,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "11951:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 651,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "11961:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 652,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "11967:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 653,
															"name": "tokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "11971:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 654,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "11981:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 649,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2069,
														"src": "11937:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11937:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 656,
												"nodeType": "EmitStatement",
												"src": "11932:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 658,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "12038:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 659,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "12048:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 660,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "12054:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 661,
															"name": "tokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "12058:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 662,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "12068:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 663,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "12077:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 657,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1187,
														"src": "12002:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12002:80:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 665,
												"nodeType": "ExpressionStatement",
												"src": "12002:80:0"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "9167:1635:0",
										"text": "@notice Transfers `_values` amount(s) of `_ids` from the `_from` address to the `_to` address specified (with safety call).\n@dev Caller must be approved to manage the tokens being transferred out of the `_from` account (see \"Approval\" section of the standard).\nMUST revert if `_to` is the zero address.\nMUST revert if length of `_ids` is not the same as length of `_values`.\nMUST revert if any of the balance(s) of the holder(s) for token(s) in `_ids` is lower than the respective amount(s) in `_values` sent to the recipient.\nMUST revert on any other error.\nMUST emit `TransferSingle` or `TransferBatch` event(s) such that all the balance changes are reflected (see \"Safe Transfer Rules\" section of the standard).\nBalance changes and events MUST follow the ordering of the arrays (_ids[0]/_values[0] before _ids[1]/_values[1], etc).\nAfter the above conditions for the transfer(s) in the batch are met, this function MUST check if `_to` is a smart contract (e.g. code size > 0). If so, it MUST call the relevant `ERC1155TokenReceiver` hook(s) on `_to` and act appropriately (see \"Safe Transfer Rules\" section of the standard).\n@param from    Source address\n@param to      Target address\n@param tokenIds     IDs of each token type (order and length must match _values array)\n@param amounts  Transfer amounts per token type (order and length must match _ids array)\n@param data    Additional data with no specified format, MUST be sent unaltered in call to the `ERC1155TokenReceiver` hook(s) on `_to`"
									},
									"functionSelector": "2eb2c2d6",
									"id": 667,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "10819:21:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 544,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11033:8:0"
									},
									"parameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10859:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "10851:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10851:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10882:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "10874:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10874:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "tokenIds",
												"nameLocation": "10912:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "10895:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 535,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "10895:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 536,
													"nodeType": "ArrayTypeName",
													"src": "10895:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "10948:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "10931:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 538,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "10931:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 539,
													"nodeType": "ArrayTypeName",
													"src": "10931:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10979:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "10966:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 541,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10966:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10840:150:0"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11047:0:0"
									},
									"scope": 1216,
									"src": "10810:1280:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 757,
										"nodeType": "Block",
										"src": "12589:542:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 682,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "12608:17:0",
															"subExpression": {
																"arguments": [
																	{
																		"id": 680,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "12617:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 679,
																	"name": "_exists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 249,
																	"src": "12609:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) view returns (bool)"
																	}
																},
																"id": 681,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12609:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a20746f6b656e20616c7265616479206d696e746564",
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12627:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fa022145e751626071013e12c9ab13aad157a18b10f626b605829b32ec568ffc",
																"typeString": "literal_string \"ERC1155: token already minted\""
															},
															"value": "ERC1155: token already minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fa022145e751626071013e12c9ab13aad157a18b10f626b605829b32ec568ffc",
																"typeString": "literal_string \"ERC1155: token already minted\""
															}
														],
														"id": 678,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12600:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12600:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 685,
												"nodeType": "ExpressionStatement",
												"src": "12600:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 687,
																"name": "_supply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 671,
																"src": "12678:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 688,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12689:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12678:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537570706c792073686f756c6420626520706f736974697665",
															"id": 690,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12692:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c4baf509ed07543ca3d76316014e8423f893220bd554ff3077848469221db537",
																"typeString": "literal_string \"Supply should be positive\""
															},
															"value": "Supply should be positive"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c4baf509ed07543ca3d76316014e8423f893220bd554ff3077848469221db537",
																"typeString": "literal_string \"Supply should be positive\""
															}
														],
														"id": 686,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12670:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12670:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 692,
												"nodeType": "ExpressionStatement",
												"src": "12670:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 696,
																			"name": "_uri",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 673,
																			"src": "12745:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12739:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 694,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "12739:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12739:11:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12751:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "12739:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 699,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12760:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12739:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7572692073686f756c6420626520736574",
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12763:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fe86f94fa5081b6142436d758e541b70f5f5df5bb13b969a4c8298c5074c846c",
																"typeString": "literal_string \"uri should be set\""
															},
															"value": "uri should be set"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fe86f94fa5081b6142436d758e541b70f5f5df5bb13b969a4c8298c5074c846c",
																"typeString": "literal_string \"uri should be set\""
															}
														],
														"id": 693,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12731:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12731:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 703,
												"nodeType": "ExpressionStatement",
												"src": "12731:52:0"
											},
											{
												"expression": {
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 704,
															"name": "creators",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "12796:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 706,
														"indexExpression": {
															"id": 705,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "12805:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12796:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 707,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "12816:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 708,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12820:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "12816:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12796:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 710,
												"nodeType": "ExpressionStatement",
												"src": "12796:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 714,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "12854:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 715,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12863:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12867:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12863:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 711,
															"name": "_tokenOwners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "12837:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UintToAddressMap_$1880_storage",
																"typeString": "struct EnumerableMap.UintToAddressMap storage ref"
															}
														},
														"id": 713,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12850:3:0",
														"memberName": "set",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1912,
														"src": "12837:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintToAddressMap_$1880_storage_ptr_$_t_uint256_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_UintToAddressMap_$1880_storage_ptr_$",
															"typeString": "function (struct EnumerableMap.UintToAddressMap storage pointer,uint256,address) returns (bool)"
														}
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12837:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 718,
												"nodeType": "ExpressionStatement",
												"src": "12837:37:0"
											},
											{
												"expression": {
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 719,
															"name": "_royaltyFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "12885:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 721,
														"indexExpression": {
															"id": 720,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "12897:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12885:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 722,
														"name": "_fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 675,
														"src": "12908:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12885:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 724,
												"nodeType": "ExpressionStatement",
												"src": "12885:27:0"
											},
											{
												"expression": {
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 725,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "12923:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 729,
															"indexExpression": {
																"id": 726,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 669,
																"src": "12933:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12923:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 730,
														"indexExpression": {
															"expression": {
																"id": 727,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12942:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12946:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12942:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12923:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 731,
														"name": "_supply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "12956:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12923:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 733,
												"nodeType": "ExpressionStatement",
												"src": "12923:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 735,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "12987:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 736,
															"name": "_uri",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 673,
															"src": "12996:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 734,
														"name": "_setTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 126,
														"src": "12974:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12974:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 738,
												"nodeType": "ExpressionStatement",
												"src": "12974:27:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 740,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "13034:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13038:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "13034:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "307830",
																	"id": 744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13054:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0x0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 743,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13046:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 742,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13046:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 745,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13046:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 746,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "13060:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13064:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "13060:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 748,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "13072:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 749,
															"name": "_supply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 671,
															"src": "13081:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 739,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2055,
														"src": "13019:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13019:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 751,
												"nodeType": "EmitStatement",
												"src": "13014:75:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 753,
															"name": "_uri",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 673,
															"src": "13109:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 754,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "13115:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 752,
														"name": "URI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2083,
														"src": "13105:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (string memory,uint256)"
														}
													},
													"id": 755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13105:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 756,
												"nodeType": "EmitStatement",
												"src": "13100:23:0"
											}
										]
									},
									"id": 758,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "12506:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12520:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "12512:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12512:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "_supply",
												"nameLocation": "12537:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "12529:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12529:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "_uri",
												"nameLocation": "12560:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "12546:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 672,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12546:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "_fee",
												"nameLocation": "12574:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "12566:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12566:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12511:68:0"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12589:0:0"
									},
									"scope": 1216,
									"src": "12497:634:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 865,
										"nodeType": "Block",
										"src": "13427:634:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 773,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 761,
																"src": "13446:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 776,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13460:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 775,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13452:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 774,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "13452:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 777,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13452:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13446:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 779,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13464:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 772,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13438:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13438:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 781,
												"nodeType": "ExpressionStatement",
												"src": "13438:62:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 783,
																	"name": "tokenIds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 764,
																	"src": "13519:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "13528:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "13519:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 785,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "13538:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "13546:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "13538:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13519:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13554:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 782,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13511:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13511:86:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 790,
												"nodeType": "ExpressionStatement",
												"src": "13511:86:0"
											},
											{
												"assignments": [
													792
												],
												"declarations": [
													{
														"constant": false,
														"id": 792,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "13618:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 865,
														"src": "13610:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 791,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "13610:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 795,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 793,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1560,
														"src": "13629:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13629:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13610:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 797,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "13675:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13693:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 799,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13685:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 798,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13685:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13685:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 802,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "13697:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 803,
															"name": "tokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 764,
															"src": "13701:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 804,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "13711:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 805,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "13720:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 796,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1055,
														"src": "13654:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13654:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 807,
												"nodeType": "ExpressionStatement",
												"src": "13654:71:0"
											},
											{
												"body": {
													"id": 840,
													"nodeType": "Block",
													"src": "13781:98:0",
													"statements": [
														{
															"expression": {
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 819,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 43,
																			"src": "13796:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 824,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 820,
																				"name": "tokenIds",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 764,
																				"src": "13806:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 822,
																			"indexExpression": {
																				"id": 821,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 809,
																				"src": "13815:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "13806:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "13796:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 825,
																	"indexExpression": {
																		"id": 823,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 761,
																		"src": "13819:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "13796:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"baseExpression": {
																					"id": 830,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 43,
																					"src": "13840:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 834,
																				"indexExpression": {
																					"baseExpression": {
																						"id": 831,
																						"name": "tokenIds",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 764,
																						"src": "13850:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																							"typeString": "uint256[] memory"
																						}
																					},
																					"id": 833,
																					"indexExpression": {
																						"id": 832,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 809,
																						"src": "13859:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "13850:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "13840:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 836,
																			"indexExpression": {
																				"id": 835,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 761,
																				"src": "13863:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "13840:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"id": 826,
																				"name": "amounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 767,
																				"src": "13825:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 828,
																			"indexExpression": {
																				"id": 827,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 809,
																				"src": "13833:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "13825:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "13836:3:0",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2281,
																		"src": "13825:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13825:42:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13796:71:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 839,
															"nodeType": "ExpressionStatement",
															"src": "13796:71:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 812,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 809,
														"src": "13755:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 813,
															"name": "tokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 764,
															"src": "13759:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 814,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13768:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "13759:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13755:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 841,
												"initializationExpression": {
													"assignments": [
														809
													],
													"declarations": [
														{
															"constant": false,
															"id": 809,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "13748:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 841,
															"src": "13743:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 808,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "13743:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 811,
													"initialValue": {
														"hexValue": "30",
														"id": 810,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13752:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "13743:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 817,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "13776:3:0",
														"subExpression": {
															"id": 816,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 809,
															"src": "13776:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 818,
													"nodeType": "ExpressionStatement",
													"src": "13776:3:0"
												},
												"nodeType": "ForStatement",
												"src": "13738:141:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 843,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "13910:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 846,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13928:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 845,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13920:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 844,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13920:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13920:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 848,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "13932:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 849,
															"name": "tokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 764,
															"src": "13936:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 850,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "13946:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 842,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2069,
														"src": "13896:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13896:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 852,
												"nodeType": "EmitStatement",
												"src": "13891:63:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 854,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "14003:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 857,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14021:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 856,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14013:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 855,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14013:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 858,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14013:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 859,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "14025:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 860,
															"name": "tokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 764,
															"src": "14029:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 861,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "14039:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 862,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "14048:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 853,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1187,
														"src": "13967:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13967:86:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 864,
												"nodeType": "ExpressionStatement",
												"src": "13967:86:0"
											}
										]
									},
									"documentation": {
										"id": 759,
										"nodeType": "StructuredDocumentation",
										"src": "13139:159:0",
										"text": " @dev version of {_mint}.\n Requirements:\n - `tokenIds` and `amounts` must have the same length."
									},
									"id": 866,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nameLocation": "13315:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13334:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "13326:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13326:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "tokenIds",
												"nameLocation": "13355:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "13338:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 762,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "13338:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 763,
													"nodeType": "ArrayTypeName",
													"src": "13338:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "13382:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "13365:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 765,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "13365:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 766,
													"nodeType": "ArrayTypeName",
													"src": "13365:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13404:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "13391:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 768,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13391:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13325:84:0"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13427:0:0"
									},
									"scope": 1216,
									"src": "13306:755:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 941,
										"nodeType": "Block",
										"src": "14512:598:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 878,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 871,
																	"src": "14539:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 877,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 249,
																"src": "14531:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14531:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135354d657461646174613a206275726e20717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14549:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_49661aed5879588f0e162f2446c6a02726f91e8813cc40960f383f17f7b179b7",
																"typeString": "literal_string \"ERC1155Metadata: burn query for nonexistent token\""
															},
															"value": "ERC1155Metadata: burn query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_49661aed5879588f0e162f2446c6a02726f91e8813cc40960f383f17f7b179b7",
																"typeString": "literal_string \"ERC1155Metadata: burn query for nonexistent token\""
															}
														],
														"id": 876,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14523:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14523:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 882,
												"nodeType": "ExpressionStatement",
												"src": "14523:78:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 889,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 884,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 869,
																"src": "14620:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 887,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14639:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14631:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 885,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14631:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 888,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14631:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14620:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 890,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14643:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 883,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14612:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14612:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 892,
												"nodeType": "ExpressionStatement",
												"src": "14612:69:0"
											},
											{
												"assignments": [
													894
												],
												"declarations": [
													{
														"constant": false,
														"id": 894,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "14702:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 941,
														"src": "14694:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 893,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14694:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 897,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 895,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1560,
														"src": "14713:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14713:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14694:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 899,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "14759:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 900,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 869,
															"src": "14769:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 903,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14786:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 902,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14778:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 901,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14778:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 904,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14778:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 906,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 871,
																	"src": "14808:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 905,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1215,
																"src": "14790:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 907,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14790:26:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 909,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 873,
																	"src": "14836:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 908,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1215,
																"src": "14818:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 910,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14818:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14845:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 898,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1055,
														"src": "14738:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14738:110:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 913,
												"nodeType": "ExpressionStatement",
												"src": "14738:110:0"
											},
											{
												"expression": {
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 914,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "14861:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 917,
															"indexExpression": {
																"id": 915,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 871,
																"src": "14871:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "14861:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 918,
														"indexExpression": {
															"id": 916,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 869,
															"src": "14880:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14861:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 925,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 873,
																"src": "14937:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "4552435f686f6c646572546f6b656e73313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 926,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14958:51:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_ddccd6c7279e3e8a4f63bc95adaede2e38ce93f0622639c09d5e36e0106e952c",
																	"typeString": "literal_string \"ERC_holderTokens1155: burn amount exceeds balance\""
																},
																"value": "ERC_holderTokens1155: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_ddccd6c7279e3e8a4f63bc95adaede2e38ce93f0622639c09d5e36e0106e952c",
																	"typeString": "literal_string \"ERC_holderTokens1155: burn amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 919,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 43,
																		"src": "14891:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 921,
																	"indexExpression": {
																		"id": 920,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 871,
																		"src": "14901:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14891:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 923,
																"indexExpression": {
																	"id": 922,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 869,
																	"src": "14910:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "14891:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "14919:3:0",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2325,
															"src": "14891:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 927,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14891:129:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14861:159:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 929,
												"nodeType": "ExpressionStatement",
												"src": "14861:159:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 931,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "15055:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 932,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 869,
															"src": "15065:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15082:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 934,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15074:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 933,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "15074:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 936,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15074:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 937,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 871,
															"src": "15086:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 938,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "15095:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 930,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2055,
														"src": "15040:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15040:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 940,
												"nodeType": "EmitStatement",
												"src": "15035:67:0"
											}
										]
									},
									"documentation": {
										"id": 867,
										"nodeType": "StructuredDocumentation",
										"src": "14069:349:0",
										"text": " @dev Internal function to burn a specific token.\n Reverts if the token does not exist.\n Deprecated, use {ERC721-_burn} instead.\n @param account owner of the token to burn\n @param tokenId uint256 ID of the token being burned\n @param amount uint256 amount of supply being burned"
									},
									"id": 942,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "14439:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "14453:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "14445:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14445:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14470:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "14462:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14462:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14487:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "14479:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14479:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14444:50:0"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14512:0:0"
									},
									"scope": 1216,
									"src": "14430:680:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1036,
										"nodeType": "Block",
										"src": "15367:649:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 960,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 955,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 945,
																"src": "15386:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 958,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15405:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 957,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15397:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 956,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15397:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 959,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15397:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15386:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 961,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15409:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 954,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15378:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15378:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 963,
												"nodeType": "ExpressionStatement",
												"src": "15378:69:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 969,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 965,
																	"name": "tokenIds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 948,
																	"src": "15466:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 966,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "15475:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "15466:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 967,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 951,
																	"src": "15485:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 968,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "15493:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "15485:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15466:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 970,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15501:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 964,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15458:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15458:86:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 972,
												"nodeType": "ExpressionStatement",
												"src": "15458:86:0"
											},
											{
												"assignments": [
													974
												],
												"declarations": [
													{
														"constant": false,
														"id": 974,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "15565:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1036,
														"src": "15557:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 973,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "15557:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 977,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 975,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1560,
														"src": "15576:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15576:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15557:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 979,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 974,
															"src": "15622:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 980,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "15632:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 983,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15649:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 982,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15641:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 981,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "15641:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15641:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 985,
															"name": "tokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "15653:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 986,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "15663:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 987,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15672:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 978,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1055,
														"src": "15601:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15601:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 989,
												"nodeType": "ExpressionStatement",
												"src": "15601:74:0"
											},
											{
												"body": {
													"id": 1023,
													"nodeType": "Block",
													"src": "15731:197:0",
													"statements": [
														{
															"expression": {
																"id": 1021,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1001,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 43,
																			"src": "15746:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 1006,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 1002,
																				"name": "tokenIds",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 948,
																				"src": "15756:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1004,
																			"indexExpression": {
																				"id": 1003,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 991,
																				"src": "15765:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "15756:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "15746:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1007,
																	"indexExpression": {
																		"id": 1005,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 945,
																		"src": "15769:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "15746:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 1016,
																				"name": "amounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 951,
																				"src": "15834:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1018,
																			"indexExpression": {
																				"id": 1017,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 991,
																				"src": "15842:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "15834:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
																			"id": 1019,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15863:38:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																				"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																			},
																			"value": "ERC1155: burn amount exceeds balance"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																				"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 1008,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 43,
																					"src": "15780:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 1012,
																				"indexExpression": {
																					"baseExpression": {
																						"id": 1009,
																						"name": "tokenIds",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 948,
																						"src": "15790:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																							"typeString": "uint256[] memory"
																						}
																					},
																					"id": 1011,
																					"indexExpression": {
																						"id": 1010,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 991,
																						"src": "15799:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "15790:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "15780:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1014,
																			"indexExpression": {
																				"id": 1013,
																				"name": "account",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 945,
																				"src": "15803:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "15780:31:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1015,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "15812:3:0",
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2325,
																		"src": "15780:35:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																		}
																	},
																	"id": 1020,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15780:136:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15746:170:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1022,
															"nodeType": "ExpressionStatement",
															"src": "15746:170:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 994,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 991,
														"src": "15705:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 995,
															"name": "tokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "15709:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 996,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15718:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "15709:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15705:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1024,
												"initializationExpression": {
													"assignments": [
														991
													],
													"declarations": [
														{
															"constant": false,
															"id": 991,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "15698:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1024,
															"src": "15693:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 990,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "15693:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 993,
													"initialValue": {
														"hexValue": "30",
														"id": 992,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15702:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "15693:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 999,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "15726:3:0",
														"subExpression": {
															"id": 998,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 991,
															"src": "15726:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1000,
													"nodeType": "ExpressionStatement",
													"src": "15726:3:0"
												},
												"nodeType": "ForStatement",
												"src": "15688:240:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1026,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 974,
															"src": "15959:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1027,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "15969:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15986:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15978:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1028,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "15978:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15978:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1032,
															"name": "tokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "15990:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1033,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "16000:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1025,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2069,
														"src": "15945:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15945:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1035,
												"nodeType": "EmitStatement",
												"src": "15940:68:0"
											}
										]
									},
									"documentation": {
										"id": 943,
										"nodeType": "StructuredDocumentation",
										"src": "15120:132:0",
										"text": " @dev version of {_burn}.\n Requirements:\n - `ids` and `amounts` must have the same length."
									},
									"id": 1037,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "15269:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "15288:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "15280:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 944,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15280:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "tokenIds",
												"nameLocation": "15314:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "15297:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 946,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15297:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 947,
													"nodeType": "ArrayTypeName",
													"src": "15297:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "15341:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "15324:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 949,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15324:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 950,
													"nodeType": "ArrayTypeName",
													"src": "15324:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15279:70:0"
									},
									"returnParameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15367:0:0"
									},
									"scope": 1216,
									"src": "15260:756:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1054,
										"nodeType": "Block",
										"src": "16264:3:0",
										"statements": []
									},
									"id": 1055,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "16035:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "16074:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "16066:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1038,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16066:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16101:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "16093:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1040,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16093:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16124:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "16116:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1042,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "tokenIds",
												"nameLocation": "16154:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "16137:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1044,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16137:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1045,
													"nodeType": "ArrayTypeName",
													"src": "16137:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "16190:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "16173:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1047,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16173:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1048,
													"nodeType": "ArrayTypeName",
													"src": "16173:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "16221:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "16208:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1050,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16208:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16055:177:0"
									},
									"returnParameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16264:0:0"
									},
									"scope": 1216,
									"src": "16026:241:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1119,
										"nodeType": "Block",
										"src": "16494:553:0",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1070,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "16509:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1071,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "16512:10:0",
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1234,
														"src": "16509:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16509:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1118,
												"nodeType": "IfStatement",
												"src": "16505:535:0",
												"trueBody": {
													"id": 1117,
													"nodeType": "Block",
													"src": "16526:514:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1099,
																		"nodeType": "Block",
																		"src": "16649:192:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1092,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1086,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1084,
																						"src": "16672:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"arguments": [
																									{
																										"id": 1088,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1061,
																										"src": "16701:2:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1087,
																									"name": "IERC1155Receiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2240,
																									"src": "16684:16:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$2240_$",
																										"typeString": "type(contract IERC1155Receiver)"
																									}
																								},
																								"id": 1089,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "16684:20:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_IERC1155Receiver_$2240",
																									"typeString": "contract IERC1155Receiver"
																								}
																							},
																							"id": 1090,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "16705:17:0",
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2221,
																							"src": "16684:38:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																								"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																							}
																						},
																						"id": 1091,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "16723:8:0",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "16684:47:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "16672:59:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1098,
																				"nodeType": "IfStatement",
																				"src": "16668:158:0",
																				"trueBody": {
																					"id": 1097,
																					"nodeType": "Block",
																					"src": "16733:93:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1094,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "16763:42:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1093,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "16756:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1095,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "16756:50:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1096,
																							"nodeType": "ExpressionStatement",
																							"src": "16756:50:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1100,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1085,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1084,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "16639:8:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1100,
																				"src": "16632:15:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1083,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "16632:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "16631:17:0"
																	},
																	"src": "16623:218:0"
																},
																{
																	"block": {
																		"id": 1108,
																		"nodeType": "Block",
																		"src": "16876:49:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1105,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1102,
																							"src": "16902:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1104,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "16895:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1106,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16895:14:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1107,
																				"nodeType": "ExpressionStatement",
																				"src": "16895:14:0"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1109,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1103,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1102,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "16868:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1109,
																				"src": "16854:20:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1101,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "16854:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "16853:22:0"
																	},
																	"src": "16842:83:0"
																},
																{
																	"block": {
																		"id": 1114,
																		"nodeType": "Block",
																		"src": "16932:97:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1111,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "16958:54:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1110,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "16951:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1112,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16951:62:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1113,
																				"nodeType": "ExpressionStatement",
																				"src": "16951:62:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1115,
																	"nodeType": "TryCatchClause",
																	"src": "16926:103:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1077,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1057,
																		"src": "16584:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1078,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1059,
																		"src": "16594:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1079,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1063,
																		"src": "16600:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1080,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1065,
																		"src": "16609:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1081,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1067,
																		"src": "16617:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1074,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1061,
																				"src": "16562:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1073,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2240,
																			"src": "16545:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$2240_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1075,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16545:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$2240",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1076,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "16566:17:0",
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2221,
																	"src": "16545:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1082,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16545:77:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1116,
															"nodeType": "TryStatement",
															"src": "16541:488:0"
														}
													]
												}
											}
										]
									},
									"id": 1120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "16284:30:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "16333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "16325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1056,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16360:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "16352:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1058,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16352:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16383:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "16375:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1060,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16375:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16404:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "16396:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16396:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16430:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "16422:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16422:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "16460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "16447:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1066,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16447:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16314:157:0"
									},
									"returnParameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16494:0:0"
									},
									"scope": 1216,
									"src": "16275:772:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1186,
										"nodeType": "Block",
										"src": "17299:565:0",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1137,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1126,
															"src": "17314:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1138,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17317:10:0",
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1234,
														"src": "17314:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17314:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1185,
												"nodeType": "IfStatement",
												"src": "17310:547:0",
												"trueBody": {
													"id": 1184,
													"nodeType": "Block",
													"src": "17331:526:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1166,
																		"nodeType": "Block",
																		"src": "17461:197:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1159,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1153,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1151,
																						"src": "17484:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"arguments": [
																									{
																										"id": 1155,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1126,
																										"src": "17513:2:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1154,
																									"name": "IERC1155Receiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2240,
																									"src": "17496:16:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$2240_$",
																										"typeString": "type(contract IERC1155Receiver)"
																									}
																								},
																								"id": 1156,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17496:20:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_IERC1155Receiver_$2240",
																									"typeString": "contract IERC1155Receiver"
																								}
																							},
																							"id": 1157,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "17517:22:0",
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2239,
																							"src": "17496:43:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																								"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																							}
																						},
																						"id": 1158,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17540:8:0",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17496:52:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17484:64:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1165,
																				"nodeType": "IfStatement",
																				"src": "17480:163:0",
																				"trueBody": {
																					"id": 1164,
																					"nodeType": "Block",
																					"src": "17550:93:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1161,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "17580:42:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1160,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "17573:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1162,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17573:50:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1163,
																							"nodeType": "ExpressionStatement",
																							"src": "17573:50:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1167,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1152,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1151,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "17451:8:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1167,
																				"src": "17444:15:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1150,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17444:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17443:17:0"
																	},
																	"src": "17435:223:0"
																},
																{
																	"block": {
																		"id": 1175,
																		"nodeType": "Block",
																		"src": "17693:49:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1172,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1169,
																							"src": "17719:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1171,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "17712:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1173,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "17712:14:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1174,
																				"nodeType": "ExpressionStatement",
																				"src": "17712:14:0"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1176,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1170,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1169,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17685:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1176,
																				"src": "17671:20:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1168,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "17671:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17670:22:0"
																	},
																	"src": "17659:83:0"
																},
																{
																	"block": {
																		"id": 1181,
																		"nodeType": "Block",
																		"src": "17749:97:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1178,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "17775:54:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1177,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "17768:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1179,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "17768:62:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1180,
																				"nodeType": "ExpressionStatement",
																				"src": "17768:62:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1182,
																	"nodeType": "TryCatchClause",
																	"src": "17743:103:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1144,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1122,
																		"src": "17394:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1145,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1124,
																		"src": "17404:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1146,
																		"name": "tokenIds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1129,
																		"src": "17410:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1147,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1132,
																		"src": "17420:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1148,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1134,
																		"src": "17429:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1141,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1126,
																				"src": "17367:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1140,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2240,
																			"src": "17350:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$2240_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1142,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17350:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$2240",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17371:22:0",
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2239,
																	"src": "17350:43:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1149,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17350:84:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1183,
															"nodeType": "TryStatement",
															"src": "17346:500:0"
														}
													]
												}
											}
										]
									},
									"id": 1187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nameLocation": "17064:35:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "17118:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "17110:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "17145:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "17137:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17137:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17168:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "17160:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17160:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "tokenIds",
												"nameLocation": "17198:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "17181:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1127,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "17181:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1128,
													"nodeType": "ArrayTypeName",
													"src": "17181:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "17234:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "17217:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1130,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "17217:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1131,
													"nodeType": "ArrayTypeName",
													"src": "17217:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17265:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "17252:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1133,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17252:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17099:177:0"
									},
									"returnParameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17299:0:0"
									},
									"scope": 1216,
									"src": "17055:809:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1214,
										"nodeType": "Block",
										"src": "17956:114:0",
										"statements": [
											{
												"assignments": [
													1199
												],
												"declarations": [
													{
														"constant": false,
														"id": 1199,
														"mutability": "mutable",
														"name": "array",
														"nameLocation": "17984:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1214,
														"src": "17967:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1197,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "17967:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1198,
															"nodeType": "ArrayTypeName",
															"src": "17967:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1205,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1203,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18006:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1202,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "17992:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1200,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "17996:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1201,
															"nodeType": "ArrayTypeName",
															"src": "17996:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1204,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17992:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17967:41:0"
											},
											{
												"expression": {
													"id": 1210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1206,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "18019:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1208,
														"indexExpression": {
															"hexValue": "30",
															"id": 1207,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18025:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18019:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1209,
														"name": "element",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1189,
														"src": "18030:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18019:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1211,
												"nodeType": "ExpressionStatement",
												"src": "18019:18:0"
											},
											{
												"expression": {
													"id": 1212,
													"name": "array",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1199,
													"src": "18057:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1194,
												"id": 1213,
												"nodeType": "Return",
												"src": "18050:12:0"
											}
										]
									},
									"id": 1215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArray",
									"nameLocation": "17881:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "17907:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "17899:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17899:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17898:17:0"
									},
									"returnParameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "17938:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1191,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "17938:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1192,
													"nodeType": "ArrayTypeName",
													"src": "17938:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17937:18:0"
									},
									"scope": 1216,
									"src": "17872:198:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1217,
							"src": "448:17625:0",
							"usedErrors": []
						}
					],
					"src": "85:17992:0"
				},
				"id": 0
			},
			"contracts/External/Address.sol": {
				"ast": {
					"absolutePath": "contracts/External/Address.sol",
					"exportedSymbols": {
						"Address": [
							1546
						]
					},
					"id": 1547,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1218,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "85:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1219,
								"nodeType": "StructuredDocumentation",
								"src": "112:69:1",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1546,
							"linearizedBaseContracts": [
								1546
							],
							"name": "Address",
							"nameLocation": "191:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1233,
										"nodeType": "Block",
										"src": "1257:260:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1227,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1222,
																"src": "1486:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1494:4:1",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1486:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1229,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1499:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1486:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1230,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1508:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1486:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1226,
												"id": 1232,
												"nodeType": "Return",
												"src": "1479:30:1"
											}
										]
									},
									"documentation": {
										"id": 1220,
										"nodeType": "StructuredDocumentation",
										"src": "206:979:1",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1200:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1219:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "1211:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:17:1"
									},
									"returnParameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "1251:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1251:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1250:6:1"
									},
									"scope": 1546,
									"src": "1191:326:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1267,
										"nodeType": "Block",
										"src": "2523:246:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1245,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2550:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1546",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1546",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1244,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2542:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1243,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2542:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2542:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2556:7:1",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2542:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1248,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1239,
																"src": "2567:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2542:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2575:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1242,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2534:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2534:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1252,
												"nodeType": "ExpressionStatement",
												"src": "2534:73:1"
											},
											{
												"assignments": [
													1254,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1254,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2626:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 1267,
														"src": "2621:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1253,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2621:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1261,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1259,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2669:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1255,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1237,
																"src": "2639:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2649:4:1",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2639:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1258,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1257,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1239,
																"src": "2661:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2639:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2620:52:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1263,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1254,
															"src": "2691:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1264,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2700:60:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1262,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2683:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2683:78:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1266,
												"nodeType": "ExpressionStatement",
												"src": "2683:78:1"
											}
										]
									},
									"documentation": {
										"id": 1235,
										"nodeType": "StructuredDocumentation",
										"src": "1525:921:1",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2461:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2487:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "2471:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2471:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2506:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "2498:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2498:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2470:43:1"
									},
									"returnParameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2523:0:1"
									},
									"scope": 1546,
									"src": "2452:317:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1285,
										"nodeType": "Block",
										"src": "3620:98:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1279,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1271,
															"src": "3660:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1280,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1273,
															"src": "3668:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1281,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3674:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1282,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3677:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1278,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1326,
															1370
														],
														"referencedDeclaration": 1370,
														"src": "3638:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3638:72:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1277,
												"id": 1284,
												"nodeType": "Return",
												"src": "3631:79:1"
											}
										]
									},
									"documentation": {
										"id": 1269,
										"nodeType": "StructuredDocumentation",
										"src": "2777:748:1",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3540:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3561:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "3553:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3553:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3582:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "3569:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1272,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3569:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3552:35:1"
									},
									"returnParameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "3606:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1275,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3606:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3605:14:1"
									},
									"scope": 1546,
									"src": "3531:187:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1305,
										"nodeType": "Block",
										"src": "4099:78:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1299,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1289,
															"src": "4139:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1300,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1291,
															"src": "4147:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1301,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4153:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1302,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1293,
															"src": "4156:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1298,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1326,
															1370
														],
														"referencedDeclaration": 1370,
														"src": "4117:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4117:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1297,
												"id": 1304,
												"nodeType": "Return",
												"src": "4110:59:1"
											}
										]
									},
									"documentation": {
										"id": 1287,
										"nodeType": "StructuredDocumentation",
										"src": "3726:216:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1306,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3957:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3988:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "3980:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3980:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4018:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "4005:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1290,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4005:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4047:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "4033:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1292,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4033:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3969:97:1"
									},
									"returnParameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "4085:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1295,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4085:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4084:14:1"
									},
									"scope": 1546,
									"src": "3948:229:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1325,
										"nodeType": "Block",
										"src": "4699:113:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1319,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1309,
															"src": "4739:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1320,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1311,
															"src": "4747:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1321,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1313,
															"src": "4753:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1322,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4760:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1318,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1326,
															1370
														],
														"referencedDeclaration": 1370,
														"src": "4717:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:87:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1317,
												"id": 1324,
												"nodeType": "Return",
												"src": "4710:94:1"
											}
										]
									},
									"documentation": {
										"id": 1307,
										"nodeType": "StructuredDocumentation",
										"src": "4185:361:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4561:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4601:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "4593:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4593:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4631:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "4618:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1310,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4618:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4654:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "4646:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4646:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4582:84:1"
									},
									"returnParameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "4685:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1315,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4685:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4684:14:1"
									},
									"scope": 1546,
									"src": "4552:260:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1369,
										"nodeType": "Block",
										"src": "5252:271:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1343,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5279:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1546",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1546",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5271:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1341,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5271:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1344,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5271:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1345,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5285:7:1",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5271:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1346,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1333,
																"src": "5296:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5271:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1348,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5303:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1340,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5263:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5263:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1350,
												"nodeType": "ExpressionStatement",
												"src": "5263:81:1"
											},
											{
												"assignments": [
													1352,
													1354
												],
												"declarations": [
													{
														"constant": false,
														"id": 1352,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5361:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 1369,
														"src": "5356:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1351,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5356:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1354,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5383:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 1369,
														"src": "5370:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1353,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5370:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1361,
												"initialValue": {
													"arguments": [
														{
															"id": 1359,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1331,
															"src": "5423:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1355,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1329,
																"src": "5397:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5404:4:1",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5397:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1358,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1357,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1333,
																"src": "5416:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5397:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5397:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5355:73:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1363,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1329,
															"src": "5473:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1364,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1352,
															"src": "5481:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1365,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1354,
															"src": "5490:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1366,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1335,
															"src": "5502:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1362,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1501,
														"src": "5446:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5446:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1339,
												"id": 1368,
												"nodeType": "Return",
												"src": "5439:76:1"
											}
										]
									},
									"documentation": {
										"id": 1327,
										"nodeType": "StructuredDocumentation",
										"src": "4820:242:1",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5077:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5117:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "5109:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5109:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5147:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "5134:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1330,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5134:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5170:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "5162:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5162:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5200:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "5186:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1334,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5186:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5098:121:1"
									},
									"returnParameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "5238:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1337,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5238:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5237:14:1"
									},
									"scope": 1546,
									"src": "5068:455:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1386,
										"nodeType": "Block",
										"src": "5808:99:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1381,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1373,
															"src": "5845:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1382,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1375,
															"src": "5853:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1383,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5859:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1380,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1387,
															1416
														],
														"referencedDeclaration": 1416,
														"src": "5826:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5826:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1379,
												"id": 1385,
												"nodeType": "Return",
												"src": "5819:80:1"
											}
										]
									},
									"documentation": {
										"id": 1371,
										"nodeType": "StructuredDocumentation",
										"src": "5531:171:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5717:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5744:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "5736:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5736:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5765:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "5752:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1374,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5752:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5735:35:1"
									},
									"returnParameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "5794:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1377,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5794:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5793:14:1"
									},
									"scope": 1546,
									"src": "5708:199:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1415,
										"nodeType": "Block",
										"src": "6261:171:1",
										"statements": [
											{
												"assignments": [
													1400,
													1402
												],
												"declarations": [
													{
														"constant": false,
														"id": 1400,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6278:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 1415,
														"src": "6273:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1399,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6273:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1402,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6300:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 1415,
														"src": "6287:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1401,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6287:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1407,
												"initialValue": {
													"arguments": [
														{
															"id": 1405,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1392,
															"src": "6332:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1403,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1390,
															"src": "6314:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1404,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6321:10:1",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6314:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6314:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6272:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1409,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1390,
															"src": "6382:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1410,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1400,
															"src": "6390:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1411,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1402,
															"src": "6399:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1412,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1394,
															"src": "6411:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1408,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1501,
														"src": "6355:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6355:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1398,
												"id": 1414,
												"nodeType": "Return",
												"src": "6348:76:1"
											}
										]
									},
									"documentation": {
										"id": 1388,
										"nodeType": "StructuredDocumentation",
										"src": "5915:178:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6108:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6145:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "6137:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6137:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6175:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "6162:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1391,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6162:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6204:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "6190:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1393,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6190:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6126:97:1"
									},
									"returnParameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "6247:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1396,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6247:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6246:14:1"
									},
									"scope": 1546,
									"src": "6099:333:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1432,
										"nodeType": "Block",
										"src": "6716:103:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1427,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1419,
															"src": "6755:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1428,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1421,
															"src": "6763:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1429,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6769:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1426,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1433,
															1462
														],
														"referencedDeclaration": 1462,
														"src": "6734:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6734:77:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1425,
												"id": 1431,
												"nodeType": "Return",
												"src": "6727:84:1"
											}
										]
									},
									"documentation": {
										"id": 1417,
										"nodeType": "StructuredDocumentation",
										"src": "6440:173:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6628:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6657:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "6649:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6649:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6678:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "6665:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1420,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6665:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6648:35:1"
									},
									"returnParameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "6702:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1423,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6702:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6701:14:1"
									},
									"scope": 1546,
									"src": "6619:200:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1461,
										"nodeType": "Block",
										"src": "7172:173:1",
										"statements": [
											{
												"assignments": [
													1446,
													1448
												],
												"declarations": [
													{
														"constant": false,
														"id": 1446,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7189:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 1461,
														"src": "7184:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1445,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7184:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1448,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7211:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 1461,
														"src": "7198:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1447,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7198:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1453,
												"initialValue": {
													"arguments": [
														{
															"id": 1451,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1438,
															"src": "7245:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1449,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1436,
															"src": "7225:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1450,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7232:12:1",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7225:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7225:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7183:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1455,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1436,
															"src": "7295:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1456,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1446,
															"src": "7303:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1457,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1448,
															"src": "7312:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1458,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1440,
															"src": "7324:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1454,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1501,
														"src": "7268:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7268:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1444,
												"id": 1460,
												"nodeType": "Return",
												"src": "7261:76:1"
											}
										]
									},
									"documentation": {
										"id": 1434,
										"nodeType": "StructuredDocumentation",
										"src": "6827:180:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7022:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7061:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "7053:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7053:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7091:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "7078:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1437,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7078:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7120:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "7106:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1439,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7106:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7042:97:1"
									},
									"returnParameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "7158:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1442,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7158:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7157:14:1"
									},
									"scope": 1546,
									"src": "7013:332:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1500,
										"nodeType": "Block",
										"src": "7840:445:1",
										"statements": [
											{
												"condition": {
													"id": 1476,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1467,
													"src": "7855:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1498,
													"nodeType": "Block",
													"src": "8218:60:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1494,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1469,
																		"src": "8241:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1495,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1471,
																		"src": "8253:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1493,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1545,
																	"src": "8233:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8233:33:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1497,
															"nodeType": "ExpressionStatement",
															"src": "8233:33:1"
														}
													]
												},
												"id": 1499,
												"nodeType": "IfStatement",
												"src": "7851:427:1",
												"trueBody": {
													"id": 1492,
													"nodeType": "Block",
													"src": "7864:348:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1480,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1477,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1469,
																		"src": "7883:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1478,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7894:6:1",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7883:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1479,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7904:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7883:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1489,
															"nodeType": "IfStatement",
															"src": "7879:290:1",
															"trueBody": {
																"id": 1488,
																"nodeType": "Block",
																"src": "7907:262:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1483,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1465,
																							"src": "8112:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1482,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1234,
																						"src": "8101:10:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 1484,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8101:18:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 1485,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8121:31:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 1481,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8093:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1486,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8093:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1487,
																		"nodeType": "ExpressionStatement",
																		"src": "8093:60:1"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1490,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1469,
																"src": "8190:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1475,
															"id": 1491,
															"nodeType": "Return",
															"src": "8183:17:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1463,
										"nodeType": "StructuredDocumentation",
										"src": "7353:282:1",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 1501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7650:26:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "7687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7687:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7717:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "7712:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1466,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7712:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7748:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "7735:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1468,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7735:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7783:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "7769:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1470,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7769:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7676:126:1"
									},
									"returnParameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "7826:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1473,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7826:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7825:14:1"
									},
									"scope": 1546,
									"src": "7641:644:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1524,
										"nodeType": "Block",
										"src": "8678:141:1",
										"statements": [
											{
												"condition": {
													"id": 1513,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1504,
													"src": "8693:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1522,
													"nodeType": "Block",
													"src": "8752:60:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1518,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1506,
																		"src": "8775:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1519,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1508,
																		"src": "8787:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1517,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1545,
																	"src": "8767:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8767:33:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1521,
															"nodeType": "ExpressionStatement",
															"src": "8767:33:1"
														}
													]
												},
												"id": 1523,
												"nodeType": "IfStatement",
												"src": "8689:123:1",
												"trueBody": {
													"id": 1516,
													"nodeType": "Block",
													"src": "8702:44:1",
													"statements": [
														{
															"expression": {
																"id": 1514,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1506,
																"src": "8724:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1512,
															"id": 1515,
															"nodeType": "Return",
															"src": "8717:17:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1502,
										"nodeType": "StructuredDocumentation",
										"src": "8293:215:1",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 1525,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8523:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8555:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1525,
												"src": "8550:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1503,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8550:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8586:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 1525,
												"src": "8573:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1505,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8573:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8621:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 1525,
												"src": "8607:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1507,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8607:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8539:101:1"
									},
									"returnParameters": {
										"id": 1512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1525,
												"src": "8664:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1510,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8664:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8663:14:1"
									},
									"scope": 1546,
									"src": "8514:305:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1544,
										"nodeType": "Block",
										"src": "8910:469:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1532,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1527,
															"src": "8988:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1533,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8999:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8988:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1534,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9008:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8988:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1542,
													"nodeType": "Block",
													"src": "9325:47:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1539,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1529,
																		"src": "9347:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1538,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9340:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1540,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9340:20:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1541,
															"nodeType": "ExpressionStatement",
															"src": "9340:20:1"
														}
													]
												},
												"id": 1543,
												"nodeType": "IfStatement",
												"src": "8984:388:1",
												"trueBody": {
													"id": 1537,
													"nodeType": "Block",
													"src": "9011:308:1",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "9172:136:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9191:40:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9220:10:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "9214:5:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9214:17:1"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "9195:15:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9260:2:1",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9264:10:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9256:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9256:19:1"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9277:15:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9249:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9249:44:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9249:44:1"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 1527,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9220:10:1",
																	"valueSize": 1
																},
																{
																	"declaration": 1527,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9264:10:1",
																	"valueSize": 1
																}
															],
															"id": 1536,
															"nodeType": "InlineAssembly",
															"src": "9163:145:1"
														}
													]
												}
											}
										]
									},
									"id": 1545,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8836:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8857:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "8844:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1526,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8844:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8883:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "8869:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1528,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8869:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8843:53:1"
									},
									"returnParameters": {
										"id": 1531,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8910:0:1"
									},
									"scope": 1546,
									"src": "8827:552:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1547,
							"src": "183:9199:1",
							"usedErrors": []
						}
					],
					"src": "85:9301:1"
				},
				"id": 1
			},
			"contracts/External/Context.sol": {
				"ast": {
					"absolutePath": "contracts/External/Context.sol",
					"exportedSymbols": {
						"Context": [
							1561
						]
					},
					"id": 1562,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1548,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "85:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1561,
							"linearizedBaseContracts": [
								1561
							],
							"name": "Context",
							"nameLocation": "130:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1559,
										"nodeType": "Block",
										"src": "215:45:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1555,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "241:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "245:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "241:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1554,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "233:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 1553,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "233:8:2",
															"stateMutability": "payable",
															"typeDescriptions": {}
														}
													},
													"id": 1557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "233:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 1552,
												"id": 1558,
												"nodeType": "Return",
												"src": "226:26:2"
											}
										]
									},
									"id": 1560,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "154:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "164:2:2"
									},
									"returnParameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1560,
												"src": "198:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "198:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "197:17:2"
									},
									"scope": 1561,
									"src": "145:115:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1562,
							"src": "112:151:2",
							"usedErrors": []
						}
					],
					"src": "85:178:2"
				},
				"id": 2
			},
			"contracts/External/ERC165.sol": {
				"ast": {
					"absolutePath": "contracts/External/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1614
						],
						"IERC165": [
							2252
						]
					},
					"id": 1615,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1563,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "85:23:3"
						},
						{
							"absolutePath": "contracts/External/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1564,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1615,
							"sourceUnit": 2253,
							"src": "112:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1565,
										"name": "IERC165",
										"nameLocations": [
											"167:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2252,
										"src": "167:7:3"
									},
									"id": 1566,
									"nodeType": "InheritanceSpecifier",
									"src": "167:7:3"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1614,
							"linearizedBaseContracts": [
								1614,
								2252
							],
							"name": "ERC165",
							"nameLocation": "157:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1569,
									"mutability": "constant",
									"name": "_INTERFACE_ID_ERC165",
									"nameLocation": "208:20:3",
									"nodeType": "VariableDeclaration",
									"scope": 1614,
									"src": "184:57:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 1567,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "184:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30783031666663396137",
										"id": 1568,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "231:10:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_33540519_by_1",
											"typeString": "int_const 33540519"
										},
										"value": "0x01ffc9a7"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1573,
									"mutability": "mutable",
									"name": "_supportedInterfaces",
									"nameLocation": "282:20:3",
									"nodeType": "VariableDeclaration",
									"scope": 1614,
									"src": "250:52:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
										"typeString": "mapping(bytes4 => bool)"
									},
									"typeName": {
										"id": 1572,
										"keyType": {
											"id": 1570,
											"name": "bytes4",
											"nodeType": "ElementaryTypeName",
											"src": "258:6:3",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes4",
												"typeString": "bytes4"
											}
										},
										"nodeType": "Mapping",
										"src": "250:23:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
											"typeString": "mapping(bytes4 => bool)"
										},
										"valueType": {
											"id": 1571,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "268:4:3",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1580,
										"nodeType": "Block",
										"src": "326:59:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1577,
															"name": "_INTERFACE_ID_ERC165",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1569,
															"src": "356:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"id": 1576,
														"name": "_registerInterface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1613,
														"src": "337:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
															"typeString": "function (bytes4)"
														}
													},
													"id": 1578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "337:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1579,
												"nodeType": "ExpressionStatement",
												"src": "337:40:3"
											}
										]
									},
									"id": 1581,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "323:2:3"
									},
									"returnParameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "326:0:3"
									},
									"scope": 1614,
									"src": "311:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2251
									],
									"body": {
										"id": 1593,
										"nodeType": "Block",
										"src": "486:59:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1589,
														"name": "_supportedInterfaces",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1573,
														"src": "504:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
															"typeString": "mapping(bytes4 => bool)"
														}
													},
													"id": 1591,
													"indexExpression": {
														"id": 1590,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1583,
														"src": "525:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "504:33:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1588,
												"id": 1592,
												"nodeType": "Return",
												"src": "497:40:3"
											}
										]
									},
									"functionSelector": "01ffc9a7",
									"id": 1594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "402:17:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1585,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "462:8:3"
									},
									"parameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "427:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "420:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1582,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "420:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "419:20:3"
									},
									"returnParameters": {
										"id": 1588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1587,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "480:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1586,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "480:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "479:6:3"
									},
									"scope": 1614,
									"src": "393:152:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1612,
										"nodeType": "Block",
										"src": "618:136:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1600,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1596,
																"src": "637:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30786666666666666666",
																"id": 1601,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "652:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4294967295_by_1",
																	"typeString": "int_const 4294967295"
																},
																"value": "0xffffffff"
															},
															"src": "637:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433136353a20696e76616c696420696e74657266616365206964",
															"id": 1603,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "664:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee",
																"typeString": "literal_string \"ERC165: invalid interface id\""
															},
															"value": "ERC165: invalid interface id"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee",
																"typeString": "literal_string \"ERC165: invalid interface id\""
															}
														],
														"id": 1599,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "629:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "629:66:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1605,
												"nodeType": "ExpressionStatement",
												"src": "629:66:3"
											},
											{
												"expression": {
													"id": 1610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1606,
															"name": "_supportedInterfaces",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1573,
															"src": "706:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
																"typeString": "mapping(bytes4 => bool)"
															}
														},
														"id": 1608,
														"indexExpression": {
															"id": 1607,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1596,
															"src": "727:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "706:33:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1609,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "742:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "706:40:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1611,
												"nodeType": "ExpressionStatement",
												"src": "706:40:3"
											}
										]
									},
									"id": 1613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_registerInterface",
									"nameLocation": "562:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "588:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "581:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1595,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "581:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "580:20:3"
									},
									"returnParameters": {
										"id": 1598,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "618:0:3"
									},
									"scope": 1614,
									"src": "553:201:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1615,
							"src": "139:618:3",
							"usedErrors": []
						}
					],
					"src": "85:674:3"
				},
				"id": 3
			},
			"contracts/External/EnumerableMap.sol": {
				"ast": {
					"absolutePath": "contracts/External/EnumerableMap.sol",
					"exportedSymbols": {
						"EnumerableMap": [
							2038
						]
					},
					"id": 2039,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1616,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "85:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "EnumerableMap",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 2038,
							"linearizedBaseContracts": [
								2038
							],
							"name": "EnumerableMap",
							"nameLocation": "120:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "EnumerableMap.MapEntry",
									"id": 1621,
									"members": [
										{
											"constant": false,
											"id": 1618,
											"mutability": "mutable",
											"name": "_key",
											"nameLocation": "178:4:4",
											"nodeType": "VariableDeclaration",
											"scope": 1621,
											"src": "170:12:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1617,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "170:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1620,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "201:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 1621,
											"src": "193:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1619,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "193:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "MapEntry",
									"nameLocation": "150:8:4",
									"nodeType": "StructDefinition",
									"scope": 2038,
									"src": "143:72:4",
									"visibility": "public"
								},
								{
									"canonicalName": "EnumerableMap.Map",
									"id": 1630,
									"members": [
										{
											"constant": false,
											"id": 1625,
											"mutability": "mutable",
											"name": "_entries",
											"nameLocation": "256:8:4",
											"nodeType": "VariableDeclaration",
											"scope": 1630,
											"src": "245:19:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_MapEntry_$1621_storage_$dyn_storage_ptr",
												"typeString": "struct EnumerableMap.MapEntry[]"
											},
											"typeName": {
												"baseType": {
													"id": 1623,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1622,
														"name": "MapEntry",
														"nameLocations": [
															"245:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1621,
														"src": "245:8:4"
													},
													"referencedDeclaration": 1621,
													"src": "245:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MapEntry_$1621_storage_ptr",
														"typeString": "struct EnumerableMap.MapEntry"
													}
												},
												"id": 1624,
												"nodeType": "ArrayTypeName",
												"src": "245:10:4",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_MapEntry_$1621_storage_$dyn_storage_ptr",
													"typeString": "struct EnumerableMap.MapEntry[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1629,
											"mutability": "mutable",
											"name": "_indexes",
											"nameLocation": "306:8:4",
											"nodeType": "VariableDeclaration",
											"scope": 1630,
											"src": "277:37:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
												"typeString": "mapping(bytes32 => uint256)"
											},
											"typeName": {
												"id": 1628,
												"keyType": {
													"id": 1626,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "286:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "277:28:4",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
													"typeString": "mapping(bytes32 => uint256)"
												},
												"valueType": {
													"id": 1627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "297:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Map",
									"nameLocation": "230:3:4",
									"nodeType": "StructDefinition",
									"scope": 2038,
									"src": "223:99:4",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1691,
										"nodeType": "Block",
										"src": "412:388:4",
										"statements": [
											{
												"assignments": [
													1643
												],
												"declarations": [
													{
														"constant": false,
														"id": 1643,
														"mutability": "mutable",
														"name": "keyIndex",
														"nameLocation": "431:8:4",
														"nodeType": "VariableDeclaration",
														"scope": 1691,
														"src": "423:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1642,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "423:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1648,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 1644,
															"name": "map",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1633,
															"src": "442:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Map_$1630_storage_ptr",
																"typeString": "struct EnumerableMap.Map storage pointer"
															}
														},
														"id": 1645,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "446:8:4",
														"memberName": "_indexes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1629,
														"src": "442:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 1647,
													"indexExpression": {
														"id": 1646,
														"name": "key",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1635,
														"src": "455:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "442:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "423:36:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1649,
														"name": "keyIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1643,
														"src": "476:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1650,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "488:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "476:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1689,
													"nodeType": "Block",
													"src": "698:95:4",
													"statements": [
														{
															"expression": {
																"id": 1685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"id": 1676,
																				"name": "map",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1633,
																				"src": "713:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Map_$1630_storage_ptr",
																					"typeString": "struct EnumerableMap.Map storage pointer"
																				}
																			},
																			"id": 1681,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "717:8:4",
																			"memberName": "_entries",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1625,
																			"src": "713:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_MapEntry_$1621_storage_$dyn_storage",
																				"typeString": "struct EnumerableMap.MapEntry storage ref[] storage ref"
																			}
																		},
																		"id": 1682,
																		"indexExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1680,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1678,
																				"name": "keyIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1643,
																				"src": "726:8:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1679,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "737:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "726:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "713:26:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MapEntry_$1621_storage",
																			"typeString": "struct EnumerableMap.MapEntry storage ref"
																		}
																	},
																	"id": 1683,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "740:6:4",
																	"memberName": "_value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1620,
																	"src": "713:33:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1684,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1637,
																	"src": "749:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "713:41:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1686,
															"nodeType": "ExpressionStatement",
															"src": "713:41:4"
														},
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1687,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "776:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1641,
															"id": 1688,
															"nodeType": "Return",
															"src": "769:12:4"
														}
													]
												},
												"id": 1690,
												"nodeType": "IfStatement",
												"src": "472:321:4",
												"trueBody": {
													"id": 1675,
													"nodeType": "Block",
													"src": "491:201:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1658,
																				"name": "key",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1635,
																				"src": "578:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			{
																				"id": 1659,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1637,
																				"src": "591:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 1657,
																			"name": "MapEntry",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1621,
																			"src": "561:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_struct$_MapEntry_$1621_storage_ptr_$",
																				"typeString": "type(struct EnumerableMap.MapEntry storage pointer)"
																			}
																		},
																		"id": 1660,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "structConstructorCall",
																		"lValueRequested": false,
																		"nameLocations": [
																			"572:4:4",
																			"583:6:4"
																		],
																		"names": [
																			"_key",
																			"_value"
																		],
																		"nodeType": "FunctionCall",
																		"src": "561:38:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MapEntry_$1621_memory_ptr",
																			"typeString": "struct EnumerableMap.MapEntry memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_MapEntry_$1621_memory_ptr",
																			"typeString": "struct EnumerableMap.MapEntry memory"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1652,
																			"name": "map",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1633,
																			"src": "543:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Map_$1630_storage_ptr",
																				"typeString": "struct EnumerableMap.Map storage pointer"
																			}
																		},
																		"id": 1655,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "547:8:4",
																		"memberName": "_entries",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1625,
																		"src": "543:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_MapEntry_$1621_storage_$dyn_storage",
																			"typeString": "struct EnumerableMap.MapEntry storage ref[] storage ref"
																		}
																	},
																	"id": 1656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "556:4:4",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "543:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_MapEntry_$1621_storage_$dyn_storage_ptr_$_t_struct$_MapEntry_$1621_storage_$returns$__$bound_to$_t_array$_t_struct$_MapEntry_$1621_storage_$dyn_storage_ptr_$",
																		"typeString": "function (struct EnumerableMap.MapEntry storage ref[] storage pointer,struct EnumerableMap.MapEntry storage ref)"
																	}
																},
																"id": 1661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "543:57:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1662,
															"nodeType": "ExpressionStatement",
															"src": "543:57:4"
														},
														{
															"expression": {
																"id": 1671,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 1663,
																			"name": "map",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1633,
																			"src": "615:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Map_$1630_storage_ptr",
																				"typeString": "struct EnumerableMap.Map storage pointer"
																			}
																		},
																		"id": 1666,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "619:8:4",
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1629,
																		"src": "615:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 1667,
																	"indexExpression": {
																		"id": 1665,
																		"name": "key",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1635,
																		"src": "628:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "615:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"expression": {
																			"id": 1668,
																			"name": "map",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1633,
																			"src": "635:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Map_$1630_storage_ptr",
																				"typeString": "struct EnumerableMap.Map storage pointer"
																			}
																		},
																		"id": 1669,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "639:8:4",
																		"memberName": "_entries",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1625,
																		"src": "635:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_MapEntry_$1621_storage_$dyn_storage",
																			"typeString": "struct EnumerableMap.MapEntry storage ref[] storage ref"
																		}
																	},
																	"id": 1670,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "648:6:4",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "635:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "615:39:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1672,
															"nodeType": "ExpressionStatement",
															"src": "615:39:4"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1673,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "676:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1641,
															"id": 1674,
															"nodeType": "Return",
															"src": "669:11:4"
														}
													]
												}
											}
										]
									},
									"id": 1692,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_set",
									"nameLocation": "339:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1633,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "356:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "344:15:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Map_$1630_storage_ptr",
													"typeString": "struct EnumerableMap.Map"
												},
												"typeName": {
													"id": 1632,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1631,
														"name": "Map",
														"nameLocations": [
															"344:3:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1630,
														"src": "344:3:4"
													},
													"referencedDeclaration": 1630,
													"src": "344:3:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Map_$1630_storage_ptr",
														"typeString": "struct EnumerableMap.Map"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1635,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "369:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "361:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1634,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "361:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1637,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "382:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "374:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1636,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "343:45:4"
									},
									"returnParameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "406:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1639,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "406:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:6:4"
									},
									"scope": 2038,
									"src": "330:470:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1773,
										"nodeType": "Block",
										"src": "878:605:4",
										"statements": [
											{
												"assignments": [
													1703
												],
												"declarations": [
													{
														"constant": false,
														"id": 1703,
														"mutability": "mutable",
														"name": "keyIndex",
														"nameLocation": "897:8:4",
														"nodeType": "VariableDeclaration",
														"scope": 1773,
														"src": "889:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1702,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "889:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1708,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 1704,
															"name": "map",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1695,
															"src": "908:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Map_$1630_storage_ptr",
																"typeString": "struct EnumerableMap.Map storage pointer"
															}
														},
														"id": 1705,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "912:8:4",
														"memberName": "_indexes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1629,
														"src": "908:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 1707,
													"indexExpression": {
														"id": 1706,
														"name": "key",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1697,
														"src": "921:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "908:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "889:36:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1709,
														"name": "keyIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1703,
														"src": "942:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1710,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "954:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "942:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1771,
													"nodeType": "Block",
													"src": "1437:39:4",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1769,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1459:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1701,
															"id": 1770,
															"nodeType": "Return",
															"src": "1452:12:4"
														}
													]
												},
												"id": 1772,
												"nodeType": "IfStatement",
												"src": "938:538:4",
												"trueBody": {
													"id": 1768,
													"nodeType": "Block",
													"src": "957:474:4",
													"statements": [
														{
															"assignments": [
																1713
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1713,
																	"mutability": "mutable",
																	"name": "toDeleteIndex",
																	"nameLocation": "1016:13:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1768,
																	"src": "1008:21:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1712,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1008:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1717,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1716,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1714,
																	"name": "keyIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1703,
																	"src": "1032:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1715,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1043:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1032:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1008:36:4"
														},
														{
															"assignments": [
																1719
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1719,
																	"mutability": "mutable",
																	"name": "lastIndex",
																	"nameLocation": "1067:9:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1768,
																	"src": "1059:17:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1718,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1059:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1725,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1724,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"expression": {
																			"id": 1720,
																			"name": "map",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1695,
																			"src": "1079:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Map_$1630_storage_ptr",
																				"typeString": "struct EnumerableMap.Map storage pointer"
																			}
																		},
																		"id": 1721,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1083:8:4",
																		"memberName": "_entries",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1625,
																		"src": "1079:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_MapEntry_$1621_storage_$dyn_storage",
																			"typeString": "struct EnumerableMap.MapEntry storage ref[] storage ref"
																		}
																	},
																	"id": 1722,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1092:6:4",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "1079:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1723,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1101:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1079:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1059:43:4"
														},
														{
															"assignments": [
																1728
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1728,
																	"mutability": "mutable",
																	"name": "lastEntry",
																	"nameLocation": "1134:9:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1768,
																	"src": "1117:26:4",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_MapEntry_$1621_storage_ptr",
																		"typeString": "struct EnumerableMap.MapEntry"
																	},
																	"typeName": {
																		"id": 1727,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1726,
																			"name": "MapEntry",
																			"nameLocations": [
																				"1117:8:4"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 1621,
																			"src": "1117:8:4"
																		},
																		"referencedDeclaration": 1621,
																		"src": "1117:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MapEntry_$1621_storage_ptr",
																			"typeString": "struct EnumerableMap.MapEntry"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1733,
															"initialValue": {
																"baseExpression": {
																	"expression": {
																		"id": 1729,
																		"name": "map",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1695,
																		"src": "1146:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Map_$1630_storage_ptr",
																			"typeString": "struct EnumerableMap.Map storage pointer"
																		}
																	},
																	"id": 1730,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1150:8:4",
																	"memberName": "_entries",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1625,
																	"src": "1146:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_MapEntry_$1621_storage_$dyn_storage",
																		"typeString": "struct EnumerableMap.MapEntry storage ref[] storage ref"
																	}
																},
																"id": 1732,
																"indexExpression": {
																	"id": 1731,
																	"name": "lastIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1719,
																	"src": "1159:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1146:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MapEntry_$1621_storage",
																	"typeString": "struct EnumerableMap.MapEntry storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1117:52:4"
														},
														{
															"expression": {
																"id": 1740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 1734,
																			"name": "map",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1695,
																			"src": "1186:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Map_$1630_storage_ptr",
																				"typeString": "struct EnumerableMap.Map storage pointer"
																			}
																		},
																		"id": 1737,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1190:8:4",
																		"memberName": "_entries",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1625,
																		"src": "1186:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_MapEntry_$1621_storage_$dyn_storage",
																			"typeString": "struct EnumerableMap.MapEntry storage ref[] storage ref"
																		}
																	},
																	"id": 1738,
																	"indexExpression": {
																		"id": 1736,
																		"name": "toDeleteIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1713,
																		"src": "1199:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1186:27:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_MapEntry_$1621_storage",
																		"typeString": "struct EnumerableMap.MapEntry storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1739,
																	"name": "lastEntry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1728,
																	"src": "1216:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_MapEntry_$1621_storage_ptr",
																		"typeString": "struct EnumerableMap.MapEntry storage pointer"
																	}
																},
																"src": "1186:39:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MapEntry_$1621_storage",
																	"typeString": "struct EnumerableMap.MapEntry storage ref"
																}
															},
															"id": 1741,
															"nodeType": "ExpressionStatement",
															"src": "1186:39:4"
														},
														{
															"expression": {
																"id": 1751,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 1742,
																			"name": "map",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1695,
																			"src": "1240:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Map_$1630_storage_ptr",
																				"typeString": "struct EnumerableMap.Map storage pointer"
																			}
																		},
																		"id": 1746,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1244:8:4",
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1629,
																		"src": "1240:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 1747,
																	"indexExpression": {
																		"expression": {
																			"id": 1744,
																			"name": "lastEntry",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1728,
																			"src": "1253:9:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_MapEntry_$1621_storage_ptr",
																				"typeString": "struct EnumerableMap.MapEntry storage pointer"
																			}
																		},
																		"id": 1745,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1263:4:4",
																		"memberName": "_key",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1618,
																		"src": "1253:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1240:28:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1748,
																		"name": "toDeleteIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1713,
																		"src": "1271:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1749,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1287:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1271:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1240:48:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1752,
															"nodeType": "ExpressionStatement",
															"src": "1240:48:4"
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"expression": {
																			"id": 1753,
																			"name": "map",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1695,
																			"src": "1332:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Map_$1630_storage_ptr",
																				"typeString": "struct EnumerableMap.Map storage pointer"
																			}
																		},
																		"id": 1756,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1336:8:4",
																		"memberName": "_entries",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1625,
																		"src": "1332:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_MapEntry_$1621_storage_$dyn_storage",
																			"typeString": "struct EnumerableMap.MapEntry storage ref[] storage ref"
																		}
																	},
																	"id": 1757,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1345:3:4",
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "1332:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_struct$_MapEntry_$1621_storage_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_struct$_MapEntry_$1621_storage_$dyn_storage_ptr_$",
																		"typeString": "function (struct EnumerableMap.MapEntry storage ref[] storage pointer)"
																	}
																},
																"id": 1758,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1332:18:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1759,
															"nodeType": "ExpressionStatement",
															"src": "1332:18:4"
														},
														{
															"expression": {
																"id": 1764,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "1367:24:4",
																"subExpression": {
																	"baseExpression": {
																		"expression": {
																			"id": 1760,
																			"name": "map",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1695,
																			"src": "1374:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Map_$1630_storage_ptr",
																				"typeString": "struct EnumerableMap.Map storage pointer"
																			}
																		},
																		"id": 1761,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1378:8:4",
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1629,
																		"src": "1374:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 1763,
																	"indexExpression": {
																		"id": 1762,
																		"name": "key",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1697,
																		"src": "1387:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1374:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1765,
															"nodeType": "ExpressionStatement",
															"src": "1367:24:4"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1766,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1415:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1701,
															"id": 1767,
															"nodeType": "Return",
															"src": "1408:11:4"
														}
													]
												}
											}
										]
									},
									"id": 1774,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_remove",
									"nameLocation": "817:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "837:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "825:15:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Map_$1630_storage_ptr",
													"typeString": "struct EnumerableMap.Map"
												},
												"typeName": {
													"id": 1694,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1693,
														"name": "Map",
														"nameLocations": [
															"825:3:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1630,
														"src": "825:3:4"
													},
													"referencedDeclaration": 1630,
													"src": "825:3:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Map_$1630_storage_ptr",
														"typeString": "struct EnumerableMap.Map"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "850:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "842:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1696,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "824:30:4"
									},
									"returnParameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "872:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1699,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "872:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "871:6:4"
									},
									"scope": 2038,
									"src": "808:675:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1791,
										"nodeType": "Block",
										"src": "1568:48:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"id": 1784,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1777,
																"src": "1586:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Map_$1630_storage_ptr",
																	"typeString": "struct EnumerableMap.Map storage pointer"
																}
															},
															"id": 1785,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1590:8:4",
															"memberName": "_indexes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1629,
															"src": "1586:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 1787,
														"indexExpression": {
															"id": 1786,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1779,
															"src": "1599:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1586:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1788,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1607:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1586:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1783,
												"id": 1790,
												"nodeType": "Return",
												"src": "1579:29:4"
											}
										]
									},
									"id": 1792,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contains",
									"nameLocation": "1500:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1777,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "1522:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1792,
												"src": "1510:15:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Map_$1630_storage_ptr",
													"typeString": "struct EnumerableMap.Map"
												},
												"typeName": {
													"id": 1776,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1775,
														"name": "Map",
														"nameLocations": [
															"1510:3:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1630,
														"src": "1510:3:4"
													},
													"referencedDeclaration": 1630,
													"src": "1510:3:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Map_$1630_storage_ptr",
														"typeString": "struct EnumerableMap.Map"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "1535:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1792,
												"src": "1527:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1778,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1527:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1509:30:4"
									},
									"returnParameters": {
										"id": 1783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1792,
												"src": "1562:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1781,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1562:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1561:6:4"
									},
									"scope": 2038,
									"src": "1491:125:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1804,
										"nodeType": "Block",
										"src": "1689:45:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 1800,
															"name": "map",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1795,
															"src": "1707:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Map_$1630_storage_ptr",
																"typeString": "struct EnumerableMap.Map storage pointer"
															}
														},
														"id": 1801,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1711:8:4",
														"memberName": "_entries",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1625,
														"src": "1707:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_MapEntry_$1621_storage_$dyn_storage",
															"typeString": "struct EnumerableMap.MapEntry storage ref[] storage ref"
														}
													},
													"id": 1802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1720:6:4",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "1707:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1799,
												"id": 1803,
												"nodeType": "Return",
												"src": "1700:26:4"
											}
										]
									},
									"id": 1805,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_length",
									"nameLocation": "1633:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1795,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "1653:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "1641:15:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Map_$1630_storage_ptr",
													"typeString": "struct EnumerableMap.Map"
												},
												"typeName": {
													"id": 1794,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1793,
														"name": "Map",
														"nameLocations": [
															"1641:3:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1630,
														"src": "1641:3:4"
													},
													"referencedDeclaration": 1630,
													"src": "1641:3:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Map_$1630_storage_ptr",
														"typeString": "struct EnumerableMap.Map"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1640:17:4"
									},
									"returnParameters": {
										"id": 1799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "1680:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1680:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1679:9:4"
									},
									"scope": 2038,
									"src": "1624:110:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1840,
										"nodeType": "Block",
										"src": "1827:194:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1822,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 1818,
																		"name": "map",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1808,
																		"src": "1846:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Map_$1630_storage_ptr",
																			"typeString": "struct EnumerableMap.Map storage pointer"
																		}
																	},
																	"id": 1819,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1850:8:4",
																	"memberName": "_entries",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1625,
																	"src": "1846:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_MapEntry_$1621_storage_$dyn_storage",
																		"typeString": "struct EnumerableMap.MapEntry storage ref[] storage ref"
																	}
																},
																"id": 1820,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1859:6:4",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1846:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1821,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1810,
																"src": "1868:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1846:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e6473",
															"id": 1823,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1875:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_86631030b9066a18616a068fc09fce83d18af4765cb1d2166fa475228f4db155",
																"typeString": "literal_string \"EnumerableMap: index out of bounds\""
															},
															"value": "EnumerableMap: index out of bounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_86631030b9066a18616a068fc09fce83d18af4765cb1d2166fa475228f4db155",
																"typeString": "literal_string \"EnumerableMap: index out of bounds\""
															}
														],
														"id": 1817,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1838:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1838:74:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1825,
												"nodeType": "ExpressionStatement",
												"src": "1838:74:4"
											},
											{
												"assignments": [
													1828
												],
												"declarations": [
													{
														"constant": false,
														"id": 1828,
														"mutability": "mutable",
														"name": "entry",
														"nameLocation": "1942:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 1840,
														"src": "1925:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MapEntry_$1621_storage_ptr",
															"typeString": "struct EnumerableMap.MapEntry"
														},
														"typeName": {
															"id": 1827,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1826,
																"name": "MapEntry",
																"nameLocations": [
																	"1925:8:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1621,
																"src": "1925:8:4"
															},
															"referencedDeclaration": 1621,
															"src": "1925:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_MapEntry_$1621_storage_ptr",
																"typeString": "struct EnumerableMap.MapEntry"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1833,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 1829,
															"name": "map",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1808,
															"src": "1950:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Map_$1630_storage_ptr",
																"typeString": "struct EnumerableMap.Map storage pointer"
															}
														},
														"id": 1830,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1954:8:4",
														"memberName": "_entries",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1625,
														"src": "1950:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_MapEntry_$1621_storage_$dyn_storage",
															"typeString": "struct EnumerableMap.MapEntry storage ref[] storage ref"
														}
													},
													"id": 1832,
													"indexExpression": {
														"id": 1831,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1810,
														"src": "1963:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1950:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MapEntry_$1621_storage",
														"typeString": "struct EnumerableMap.MapEntry storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1925:44:4"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 1834,
																"name": "entry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1828,
																"src": "1988:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MapEntry_$1621_storage_ptr",
																	"typeString": "struct EnumerableMap.MapEntry storage pointer"
																}
															},
															"id": 1835,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1994:4:4",
															"memberName": "_key",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1618,
															"src": "1988:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1836,
																"name": "entry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1828,
																"src": "2000:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MapEntry_$1621_storage_ptr",
																	"typeString": "struct EnumerableMap.MapEntry storage pointer"
																}
															},
															"id": 1837,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2006:6:4",
															"memberName": "_value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1620,
															"src": "2000:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"id": 1838,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1987:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
														"typeString": "tuple(bytes32,bytes32)"
													}
												},
												"functionReturnParameters": 1816,
												"id": 1839,
												"nodeType": "Return",
												"src": "1980:33:4"
											}
										]
									},
									"id": 1841,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_at",
									"nameLocation": "1751:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1808,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "1767:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1841,
												"src": "1755:15:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Map_$1630_storage_ptr",
													"typeString": "struct EnumerableMap.Map"
												},
												"typeName": {
													"id": 1807,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1806,
														"name": "Map",
														"nameLocations": [
															"1755:3:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1630,
														"src": "1755:3:4"
													},
													"referencedDeclaration": 1630,
													"src": "1755:3:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Map_$1630_storage_ptr",
														"typeString": "struct EnumerableMap.Map"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1810,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "1780:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1841,
												"src": "1772:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1772:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1754:32:4"
									},
									"returnParameters": {
										"id": 1816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1813,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1841,
												"src": "1809:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1812,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1809:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1841,
												"src": "1818:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1814,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1818:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1808:18:4"
									},
									"scope": 2038,
									"src": "1742:279:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1875,
										"nodeType": "Block",
										"src": "2132:216:4",
										"statements": [
											{
												"assignments": [
													1854
												],
												"declarations": [
													{
														"constant": false,
														"id": 1854,
														"mutability": "mutable",
														"name": "keyIndex",
														"nameLocation": "2151:8:4",
														"nodeType": "VariableDeclaration",
														"scope": 1875,
														"src": "2143:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1853,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2143:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1859,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 1855,
															"name": "map",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1844,
															"src": "2162:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Map_$1630_storage_ptr",
																"typeString": "struct EnumerableMap.Map storage pointer"
															}
														},
														"id": 1856,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2166:8:4",
														"memberName": "_indexes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1629,
														"src": "2162:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 1858,
													"indexExpression": {
														"id": 1857,
														"name": "key",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1846,
														"src": "2175:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2162:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2143:36:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1861,
																"name": "keyIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1854,
																"src": "2198:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1862,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2210:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2198:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1864,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1848,
															"src": "2213:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1860,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2190:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2190:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1866,
												"nodeType": "ExpressionStatement",
												"src": "2190:36:4"
											},
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"expression": {
																"id": 1867,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1844,
																"src": "2280:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Map_$1630_storage_ptr",
																	"typeString": "struct EnumerableMap.Map storage pointer"
																}
															},
															"id": 1868,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2284:8:4",
															"memberName": "_entries",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1625,
															"src": "2280:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_MapEntry_$1621_storage_$dyn_storage",
																"typeString": "struct EnumerableMap.MapEntry storage ref[] storage ref"
															}
														},
														"id": 1872,
														"indexExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1869,
																"name": "keyIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1854,
																"src": "2293:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "31",
																"id": 1870,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2304:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "2293:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2280:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MapEntry_$1621_storage",
															"typeString": "struct EnumerableMap.MapEntry storage ref"
														}
													},
													"id": 1873,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2307:6:4",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1620,
													"src": "2280:33:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1852,
												"id": 1874,
												"nodeType": "Return",
												"src": "2273:40:4"
											}
										]
									},
									"id": 1876,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_get",
									"nameLocation": "2038:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1844,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "2055:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1876,
												"src": "2043:15:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Map_$1630_storage_ptr",
													"typeString": "struct EnumerableMap.Map"
												},
												"typeName": {
													"id": 1843,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1842,
														"name": "Map",
														"nameLocations": [
															"2043:3:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1630,
														"src": "2043:3:4"
													},
													"referencedDeclaration": 1630,
													"src": "2043:3:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Map_$1630_storage_ptr",
														"typeString": "struct EnumerableMap.Map"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1846,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "2068:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1876,
												"src": "2060:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1845,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1848,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "2087:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1876,
												"src": "2073:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1847,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2073:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2042:58:4"
									},
									"returnParameters": {
										"id": 1852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1851,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1876,
												"src": "2123:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1850,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2123:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2122:9:4"
									},
									"scope": 2038,
									"src": "2029:319:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"canonicalName": "EnumerableMap.UintToAddressMap",
									"id": 1880,
									"members": [
										{
											"constant": false,
											"id": 1879,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "2395:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 1880,
											"src": "2391:10:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Map_$1630_storage_ptr",
												"typeString": "struct EnumerableMap.Map"
											},
											"typeName": {
												"id": 1878,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1877,
													"name": "Map",
													"nameLocations": [
														"2391:3:4"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1630,
													"src": "2391:3:4"
												},
												"referencedDeclaration": 1630,
												"src": "2391:3:4",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Map_$1630_storage_ptr",
													"typeString": "struct EnumerableMap.Map"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UintToAddressMap",
									"nameLocation": "2363:16:4",
									"nodeType": "StructDefinition",
									"scope": 2038,
									"src": "2356:53:4",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1911,
										"nodeType": "Block",
										"src": "2512:90:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1893,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1883,
																"src": "2535:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToAddressMap_$1880_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToAddressMap storage pointer"
																}
															},
															"id": 1894,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2539:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1879,
															"src": "2535:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Map_$1630_storage",
																"typeString": "struct EnumerableMap.Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 1897,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1885,
																	"src": "2555:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1896,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2547:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1895,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "2547:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1898,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2547:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1905,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1887,
																					"src": "2585:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1904,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2577:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 1903,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "2577:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1906,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2577:14:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 1902,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2569:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1901,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "2569:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1907,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2569:23:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1900,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2561:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1899,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "2561:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2561:32:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Map_$1630_storage",
																"typeString": "struct EnumerableMap.Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1892,
														"name": "_set",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1692,
														"src": "2530:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Map_$1630_storage_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Map storage pointer,bytes32,bytes32) returns (bool)"
														}
													},
													"id": 1909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2530:64:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1891,
												"id": 1910,
												"nodeType": "Return",
												"src": "2523:71:4"
											}
										]
									},
									"id": 1912,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "set",
									"nameLocation": "2426:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1883,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "2455:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1912,
												"src": "2430:28:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToAddressMap_$1880_storage_ptr",
													"typeString": "struct EnumerableMap.UintToAddressMap"
												},
												"typeName": {
													"id": 1882,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1881,
														"name": "UintToAddressMap",
														"nameLocations": [
															"2430:16:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1880,
														"src": "2430:16:4"
													},
													"referencedDeclaration": 1880,
													"src": "2430:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToAddressMap_$1880_storage_ptr",
														"typeString": "struct EnumerableMap.UintToAddressMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1885,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "2468:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1912,
												"src": "2460:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2460:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1887,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2481:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1912,
												"src": "2473:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1886,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2473:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2429:58:4"
									},
									"returnParameters": {
										"id": 1891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1890,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1912,
												"src": "2506:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1889,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2506:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2505:6:4"
									},
									"scope": 2038,
									"src": "2417:185:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1931,
										"nodeType": "Block",
										"src": "2693:59:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1923,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1915,
																"src": "2719:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToAddressMap_$1880_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToAddressMap storage pointer"
																}
															},
															"id": 1924,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2723:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1879,
															"src": "2719:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Map_$1630_storage",
																"typeString": "struct EnumerableMap.Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 1927,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1917,
																	"src": "2739:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1926,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2731:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1925,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "2731:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1928,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2731:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Map_$1630_storage",
																"typeString": "struct EnumerableMap.Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1922,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1774,
														"src": "2711:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Map_$1630_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Map storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2711:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1921,
												"id": 1930,
												"nodeType": "Return",
												"src": "2704:40:4"
											}
										]
									},
									"id": 1932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "2619:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1915,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "2651:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1932,
												"src": "2626:28:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToAddressMap_$1880_storage_ptr",
													"typeString": "struct EnumerableMap.UintToAddressMap"
												},
												"typeName": {
													"id": 1914,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1913,
														"name": "UintToAddressMap",
														"nameLocations": [
															"2626:16:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1880,
														"src": "2626:16:4"
													},
													"referencedDeclaration": 1880,
													"src": "2626:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToAddressMap_$1880_storage_ptr",
														"typeString": "struct EnumerableMap.UintToAddressMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1917,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "2664:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1932,
												"src": "2656:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2625:43:4"
									},
									"returnParameters": {
										"id": 1921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1920,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1932,
												"src": "2687:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1919,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2687:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2686:6:4"
									},
									"scope": 2038,
									"src": "2610:142:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1951,
										"nodeType": "Block",
										"src": "2850:61:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1943,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1935,
																"src": "2878:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToAddressMap_$1880_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToAddressMap storage pointer"
																}
															},
															"id": 1944,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2882:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1879,
															"src": "2878:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Map_$1630_storage",
																"typeString": "struct EnumerableMap.Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 1947,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1937,
																	"src": "2898:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1946,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2890:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1945,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "2890:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1948,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2890:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Map_$1630_storage",
																"typeString": "struct EnumerableMap.Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1942,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1792,
														"src": "2868:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Map_$1630_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Map storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2868:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1941,
												"id": 1950,
												"nodeType": "Return",
												"src": "2861:42:4"
											}
										]
									},
									"id": 1952,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "2769:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1935,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "2803:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "2778:28:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToAddressMap_$1880_storage_ptr",
													"typeString": "struct EnumerableMap.UintToAddressMap"
												},
												"typeName": {
													"id": 1934,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1933,
														"name": "UintToAddressMap",
														"nameLocations": [
															"2778:16:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1880,
														"src": "2778:16:4"
													},
													"referencedDeclaration": 1880,
													"src": "2778:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToAddressMap_$1880_storage_ptr",
														"typeString": "struct EnumerableMap.UintToAddressMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1937,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "2816:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "2808:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2808:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2777:43:4"
									},
									"returnParameters": {
										"id": 1941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1940,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "2844:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1939,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2844:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2843:6:4"
									},
									"scope": 2038,
									"src": "2760:151:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1965,
										"nodeType": "Block",
										"src": "2997:45:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1961,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1955,
																"src": "3023:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToAddressMap_$1880_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToAddressMap storage pointer"
																}
															},
															"id": 1962,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3027:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1879,
															"src": "3023:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Map_$1630_storage",
																"typeString": "struct EnumerableMap.Map storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Map_$1630_storage",
																"typeString": "struct EnumerableMap.Map storage ref"
															}
														],
														"id": 1960,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1805,
														"src": "3015:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Map_$1630_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableMap.Map storage pointer) view returns (uint256)"
														}
													},
													"id": 1963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3015:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1959,
												"id": 1964,
												"nodeType": "Return",
												"src": "3008:26:4"
											}
										]
									},
									"id": 1966,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "2928:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1955,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "2960:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "2935:28:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToAddressMap_$1880_storage_ptr",
													"typeString": "struct EnumerableMap.UintToAddressMap"
												},
												"typeName": {
													"id": 1954,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1953,
														"name": "UintToAddressMap",
														"nameLocations": [
															"2935:16:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1880,
														"src": "2935:16:4"
													},
													"referencedDeclaration": 1880,
													"src": "2935:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToAddressMap_$1880_storage_ptr",
														"typeString": "struct EnumerableMap.UintToAddressMap"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2934:30:4"
									},
									"returnParameters": {
										"id": 1959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1958,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "2988:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2988:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2987:9:4"
									},
									"scope": 2038,
									"src": "2919:123:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2004,
										"nodeType": "Block",
										"src": "3148:138:4",
										"statements": [
											{
												"assignments": [
													1979,
													1981
												],
												"declarations": [
													{
														"constant": false,
														"id": 1979,
														"mutability": "mutable",
														"name": "key",
														"nameLocation": "3168:3:4",
														"nodeType": "VariableDeclaration",
														"scope": 2004,
														"src": "3160:11:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1978,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3160:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1981,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "3181:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 2004,
														"src": "3173:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1980,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3173:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1987,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1983,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1969,
																"src": "3194:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToAddressMap_$1880_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToAddressMap storage pointer"
																}
															},
															"id": 1984,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3198:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1879,
															"src": "3194:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Map_$1630_storage",
																"typeString": "struct EnumerableMap.Map storage ref"
															}
														},
														{
															"id": 1985,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1971,
															"src": "3206:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Map_$1630_storage",
																"typeString": "struct EnumerableMap.Map storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1982,
														"name": "_at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1841,
														"src": "3190:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Map_$1630_storage_ptr_$_t_uint256_$returns$_t_bytes32_$_t_bytes32_$",
															"typeString": "function (struct EnumerableMap.Map storage pointer,uint256) view returns (bytes32,bytes32)"
														}
													},
													"id": 1986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3190:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
														"typeString": "tuple(bytes32,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3159:53:4"
											},
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"id": 1990,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1979,
																	"src": "3239:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 1989,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3231:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1988,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3231:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3231:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1998,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1981,
																					"src": "3269:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 1997,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3261:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 1996,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "3261:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1999,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3261:14:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1995,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3253:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1994,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "3253:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3253:23:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1993,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3245:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1992,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3245:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 2001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3245:32:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"id": 2002,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3230:48:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"functionReturnParameters": 1977,
												"id": 2003,
												"nodeType": "Return",
												"src": "3223:55:4"
											}
										]
									},
									"id": 2005,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "3059:2:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1969,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "3087:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2005,
												"src": "3062:28:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToAddressMap_$1880_storage_ptr",
													"typeString": "struct EnumerableMap.UintToAddressMap"
												},
												"typeName": {
													"id": 1968,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1967,
														"name": "UintToAddressMap",
														"nameLocations": [
															"3062:16:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1880,
														"src": "3062:16:4"
													},
													"referencedDeclaration": 1880,
													"src": "3062:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToAddressMap_$1880_storage_ptr",
														"typeString": "struct EnumerableMap.UintToAddressMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1971,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "3100:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2005,
												"src": "3092:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3092:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3061:45:4"
									},
									"returnParameters": {
										"id": 1977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1974,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2005,
												"src": "3130:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1973,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3130:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1976,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2005,
												"src": "3139:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1975,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3139:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3129:18:4"
									},
									"scope": 2038,
									"src": "3050:236:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2036,
										"nodeType": "Block",
										"src": "3410:97:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 2024,
																						"name": "map",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2008,
																						"src": "3457:3:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UintToAddressMap_$1880_storage_ptr",
																							"typeString": "struct EnumerableMap.UintToAddressMap storage pointer"
																						}
																					},
																					"id": 2025,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3461:6:4",
																					"memberName": "_inner",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1879,
																					"src": "3457:10:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Map_$1630_storage",
																						"typeString": "struct EnumerableMap.Map storage ref"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"id": 2028,
																							"name": "key",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2010,
																							"src": "3477:3:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 2027,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3469:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bytes32_$",
																							"typeString": "type(bytes32)"
																						},
																						"typeName": {
																							"id": 2026,
																							"name": "bytes32",
																							"nodeType": "ElementaryTypeName",
																							"src": "3469:7:4",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2029,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3469:12:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				{
																					"id": 2030,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2012,
																					"src": "3483:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_struct$_Map_$1630_storage",
																						"typeString": "struct EnumerableMap.Map storage ref"
																					},
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 2023,
																				"name": "_get",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1876,
																				"src": "3452:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Map_$1630_storage_ptr_$_t_bytes32_$_t_string_memory_ptr_$returns$_t_bytes32_$",
																					"typeString": "function (struct EnumerableMap.Map storage pointer,bytes32,string memory) view returns (bytes32)"
																				}
																			},
																			"id": 2031,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3452:44:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 2022,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3444:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2021,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "3444:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2032,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3444:53:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2020,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3436:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 2019,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "3436:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 2033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3436:62:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 2018,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3428:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 2017,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3428:7:4",
															"typeDescriptions": {}
														}
													},
													"id": 2034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3428:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2016,
												"id": 2035,
												"nodeType": "Return",
												"src": "3421:78:4"
											}
										]
									},
									"id": 2037,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nameLocation": "3303:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2008,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "3332:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2037,
												"src": "3307:28:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToAddressMap_$1880_storage_ptr",
													"typeString": "struct EnumerableMap.UintToAddressMap"
												},
												"typeName": {
													"id": 2007,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2006,
														"name": "UintToAddressMap",
														"nameLocations": [
															"3307:16:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1880,
														"src": "3307:16:4"
													},
													"referencedDeclaration": 1880,
													"src": "3307:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToAddressMap_$1880_storage_ptr",
														"typeString": "struct EnumerableMap.UintToAddressMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2010,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "3345:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2037,
												"src": "3337:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3337:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2012,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3364:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2037,
												"src": "3350:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2011,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3350:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3306:71:4"
									},
									"returnParameters": {
										"id": 2016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2015,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2037,
												"src": "3401:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2014,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3401:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3400:9:4"
									},
									"scope": 2038,
									"src": "3294:213:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2039,
							"src": "112:3398:4",
							"usedErrors": []
						}
					],
					"src": "85:3427:4"
				},
				"id": 4
			},
			"contracts/External/IERC1155.sol": {
				"ast": {
					"absolutePath": "contracts/External/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							2184
						],
						"IERC165": [
							2252
						]
					},
					"id": 2185,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2040,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "85:23:5"
						},
						{
							"absolutePath": "contracts/External/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 2041,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2185,
							"sourceUnit": 2253,
							"src": "112:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2042,
										"name": "IERC165",
										"nameLocations": [
											"161:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2252,
										"src": "161:7:5"
									},
									"id": 2043,
									"nodeType": "InheritanceSpecifier",
									"src": "161:7:5"
								}
							],
							"canonicalName": "IERC1155",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2184,
							"linearizedBaseContracts": [
								2184,
								2252
							],
							"name": "IERC1155",
							"nameLocation": "149:8:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
									"id": 2055,
									"name": "TransferSingle",
									"nameLocation": "184:14:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2045,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "215:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 2055,
												"src": "199:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2044,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "199:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2047,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "241:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2055,
												"src": "225:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2046,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "225:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2049,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "263:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 2055,
												"src": "247:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2048,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "247:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2051,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "275:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 2055,
												"src": "267:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2050,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "267:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2053,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "287:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2055,
												"src": "279:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2052,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "279:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "198:95:5"
									},
									"src": "178:116:5"
								},
								{
									"anonymous": false,
									"eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
									"id": 2069,
									"name": "TransferBatch",
									"nameLocation": "306:13:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2057,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "336:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 2069,
												"src": "320:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2056,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "320:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2059,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "362:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2069,
												"src": "346:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2058,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "346:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2061,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "384:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 2069,
												"src": "368:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2060,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "368:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2064,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "398:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 2069,
												"src": "388:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2062,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "388:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2063,
													"nodeType": "ArrayTypeName",
													"src": "388:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2067,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "413:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 2069,
												"src": "403:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2065,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "403:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2066,
													"nodeType": "ArrayTypeName",
													"src": "403:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "319:101:5"
									},
									"src": "300:121:5"
								},
								{
									"anonymous": false,
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 2077,
									"name": "ApprovalForAll",
									"nameLocation": "433:14:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2071,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "464:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2077,
												"src": "448:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2073,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "489:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 2077,
												"src": "473:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2072,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "473:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2075,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "504:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 2077,
												"src": "499:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2074,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "499:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "447:66:5"
									},
									"src": "427:87:5"
								},
								{
									"anonymous": false,
									"eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
									"id": 2083,
									"name": "URI",
									"nameLocation": "526:3:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2079,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "537:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2083,
												"src": "530:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2078,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "530:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2081,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "560:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 2083,
												"src": "544:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "544:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "529:34:5"
									},
									"src": "520:44:5"
								},
								{
									"anonymous": false,
									"eventSelector": "5514cc7324ac64a875ba50a1849367d39c8b030fe0f563c3c7142984552bc306",
									"id": 2087,
									"name": "tokenBaseURI",
									"nameLocation": "576:12:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2085,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "596:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2087,
												"src": "589:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2084,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "589:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "588:14:5"
									},
									"src": "570:33:5"
								},
								{
									"functionSelector": "06fdde03",
									"id": 2092,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "622:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2088,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "626:2:5"
									},
									"returnParameters": {
										"id": 2091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2090,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2092,
												"src": "652:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2089,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "652:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:15:5"
									},
									"scope": 2184,
									"src": "613:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "95d89b41",
									"id": 2097,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "682:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2093,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "688:2:5"
									},
									"returnParameters": {
										"id": 2096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2095,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2097,
												"src": "714:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2094,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "714:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "713:15:5"
									},
									"scope": 2184,
									"src": "673:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "00fdd58e",
									"id": 2106,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "744:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2099,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "762:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2106,
												"src": "754:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2098,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "754:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2101,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "779:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 2106,
												"src": "771:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "771:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "753:29:5"
									},
									"returnParameters": {
										"id": 2105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2106,
												"src": "806:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "806:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "805:9:5"
									},
									"scope": 2184,
									"src": "735:80:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c57dc235",
									"id": 2113,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "royaltyFee",
									"nameLocation": "830:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2108,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "849:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2113,
												"src": "841:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "841:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "840:17:5"
									},
									"returnParameters": {
										"id": 2112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2113,
												"src": "880:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "880:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "879:9:5"
									},
									"scope": 2184,
									"src": "821:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d48e638a",
									"id": 2120,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCreator",
									"nameLocation": "904:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2115,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2120,
												"src": "915:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "914:17:5"
									},
									"returnParameters": {
										"id": 2119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2120,
												"src": "954:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "954:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "953:9:5"
									},
									"scope": 2184,
									"src": "895:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c87b56dd",
									"id": 2127,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "978:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2122,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "995:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2127,
												"src": "987:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "987:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "986:17:5"
									},
									"returnParameters": {
										"id": 2126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2125,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2127,
												"src": "1027:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2124,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1027:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:15:5"
									},
									"scope": 2184,
									"src": "969:73:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4e1273f4",
									"id": 2139,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "1057:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2130,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "1091:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 2139,
												"src": "1072:27:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2128,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1072:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2129,
													"nodeType": "ArrayTypeName",
													"src": "1072:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2133,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "1120:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 2139,
												"src": "1101:22:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2131,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1101:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2132,
													"nodeType": "ArrayTypeName",
													"src": "1101:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1071:53:5"
									},
									"returnParameters": {
										"id": 2138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2139,
												"src": "1148:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2135,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1148:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2136,
													"nodeType": "ArrayTypeName",
													"src": "1148:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1147:18:5"
									},
									"scope": 2184,
									"src": "1048:118:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a22cb465",
									"id": 2146,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "1181:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2141,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1207:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 2146,
												"src": "1199:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1199:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2143,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1222:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 2146,
												"src": "1217:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2142,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1217:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1198:33:5"
									},
									"returnParameters": {
										"id": 2145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1240:0:5"
									},
									"scope": 2184,
									"src": "1172:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e985e9c5",
									"id": 2155,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "1256:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2148,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1281:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2155,
												"src": "1273:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1273:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2150,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1298:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 2155,
												"src": "1290:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1290:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1272:35:5"
									},
									"returnParameters": {
										"id": 2154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2155,
												"src": "1331:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2152,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1331:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1330:6:5"
									},
									"scope": 2184,
									"src": "1247:90:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f242432a",
									"id": 2168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1352:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2157,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1377:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2168,
												"src": "1369:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1369:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2159,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1391:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 2168,
												"src": "1383:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1383:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2161,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1403:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 2168,
												"src": "1395:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1395:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2163,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1415:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 2168,
												"src": "1407:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1407:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2165,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1438:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2168,
												"src": "1423:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2164,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1423:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1368:75:5"
									},
									"returnParameters": {
										"id": 2167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1452:0:5"
									},
									"scope": 2184,
									"src": "1343:110:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2eb2c2d6",
									"id": 2183,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "1468:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2170,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1498:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2183,
												"src": "1490:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1490:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2172,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1512:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 2183,
												"src": "1504:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1504:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2175,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "1535:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 2183,
												"src": "1516:22:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2173,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1516:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2174,
													"nodeType": "ArrayTypeName",
													"src": "1516:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2178,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "1559:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2183,
												"src": "1540:26:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2176,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1540:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2177,
													"nodeType": "ArrayTypeName",
													"src": "1540:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2180,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1583:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2183,
												"src": "1568:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2179,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1568:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1489:99:5"
									},
									"returnParameters": {
										"id": 2182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1597:0:5"
									},
									"scope": 2184,
									"src": "1459:139:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2185,
							"src": "139:1462:5",
							"usedErrors": []
						}
					],
					"src": "85:1518:5"
				},
				"id": 5
			},
			"contracts/External/IERC1155MetadataURI.sol": {
				"ast": {
					"absolutePath": "contracts/External/IERC1155MetadataURI.sol",
					"exportedSymbols": {
						"IERC1155": [
							2184
						],
						"IERC1155MetadataURI": [
							2199
						],
						"IERC165": [
							2252
						]
					},
					"id": 2200,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2186,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "120:23:6"
						},
						{
							"absolutePath": "contracts/External/IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 2187,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2200,
							"sourceUnit": 2185,
							"src": "147:24:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2189,
										"name": "IERC1155",
										"nameLocations": [
											"409:8:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2184,
										"src": "409:8:6"
									},
									"id": 2190,
									"nodeType": "InheritanceSpecifier",
									"src": "409:8:6"
								}
							],
							"canonicalName": "IERC1155MetadataURI",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2188,
								"nodeType": "StructuredDocumentation",
								"src": "175:199:6",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 2199,
							"linearizedBaseContracts": [
								2199,
								2184,
								2252
							],
							"name": "IERC1155MetadataURI",
							"nameLocation": "386:19:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2191,
										"nodeType": "StructuredDocumentation",
										"src": "425:197:6",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 2198,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "637:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2193,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "649:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "641:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "641:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "640:12:6"
									},
									"returnParameters": {
										"id": 2197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2196,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "676:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2195,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "676:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "675:15:6"
									},
									"scope": 2199,
									"src": "628:63:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2200,
							"src": "376:318:6",
							"usedErrors": []
						}
					],
					"src": "120:574:6"
				},
				"id": 6
			},
			"contracts/External/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "contracts/External/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							2240
						],
						"IERC165": [
							2252
						]
					},
					"id": 2241,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2201,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "121:23:7"
						},
						{
							"absolutePath": "contracts/External/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 2202,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2241,
							"sourceUnit": 2253,
							"src": "148:23:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2204,
										"name": "IERC165",
										"nameLocations": [
											"248:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2252,
										"src": "248:7:7"
									},
									"id": 2205,
									"nodeType": "InheritanceSpecifier",
									"src": "248:7:7"
								}
							],
							"canonicalName": "IERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2203,
								"nodeType": "StructuredDocumentation",
								"src": "175:41:7",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 2240,
							"linearizedBaseContracts": [
								2240,
								2252
							],
							"name": "IERC1155Receiver",
							"nameLocation": "228:16:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2206,
										"nodeType": "StructuredDocumentation",
										"src": "263:840:7",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 2221,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1118:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2208,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1154:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2221,
												"src": "1146:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1146:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2210,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1181:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2221,
												"src": "1173:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1173:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2212,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1204:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 2221,
												"src": "1196:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1196:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2214,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1225:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2221,
												"src": "1217:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1217:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2216,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1256:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2221,
												"src": "1241:19:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2215,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1241:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1135:132:7"
									},
									"returnParameters": {
										"id": 2220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2221,
												"src": "1286:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2218,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1286:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1285:8:7"
									},
									"scope": 2240,
									"src": "1109:185:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2222,
										"nodeType": "StructuredDocumentation",
										"src": "1302:1009:7",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 2239,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2326:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2224,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2367:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2239,
												"src": "2359:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2359:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2226,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2394:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2239,
												"src": "2386:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2386:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2229,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2428:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 2239,
												"src": "2409:22:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2227,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2409:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2228,
													"nodeType": "ArrayTypeName",
													"src": "2409:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2232,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2461:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 2239,
												"src": "2442:25:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2230,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2442:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2231,
													"nodeType": "ArrayTypeName",
													"src": "2442:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2234,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2493:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2239,
												"src": "2478:19:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2233,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2478:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2348:156:7"
									},
									"returnParameters": {
										"id": 2238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2239,
												"src": "2523:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2236,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2523:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2522:8:7"
									},
									"scope": 2240,
									"src": "2317:214:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2241,
							"src": "218:2316:7",
							"usedErrors": []
						}
					],
					"src": "121:2417:7"
				},
				"id": 7
			},
			"contracts/External/IERC165.sol": {
				"ast": {
					"absolutePath": "contracts/External/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2252
						]
					},
					"id": 2253,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2242,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "85:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2243,
								"nodeType": "StructuredDocumentation",
								"src": "112:287:8",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2252,
							"linearizedBaseContracts": [
								2252
							],
							"name": "IERC165",
							"nameLocation": "411:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2244,
										"nodeType": "StructuredDocumentation",
										"src": "426:347:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2251,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "788:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2246,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "813:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 2251,
												"src": "806:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2245,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "806:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "805:20:8"
									},
									"returnParameters": {
										"id": 2250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2251,
												"src": "849:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2248,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "849:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "848:6:8"
									},
									"scope": 2252,
									"src": "779:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2253,
							"src": "401:457:8",
							"usedErrors": []
						}
					],
					"src": "85:775:8"
				},
				"id": 8
			},
			"contracts/External/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/External/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							2445
						]
					},
					"id": 2446,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2254,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "85:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2255,
								"nodeType": "StructuredDocumentation",
								"src": "112:91:9",
								"text": " @title SafeMath\n @dev Math operations with safety checks that throw on error"
							},
							"fullyImplemented": true,
							"id": 2445,
							"linearizedBaseContracts": [
								2445
							],
							"name": "SafeMath",
							"nameLocation": "215:8:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2280,
										"nodeType": "Block",
										"src": "369:114:9",
										"statements": [
											{
												"assignments": [
													2266
												],
												"declarations": [
													{
														"constant": false,
														"id": 2266,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "388:1:9",
														"nodeType": "VariableDeclaration",
														"scope": 2280,
														"src": "380:9:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2265,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "380:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2270,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2267,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2258,
														"src": "392:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 2268,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2260,
														"src": "396:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "392:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "380:17:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2272,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2266,
																"src": "416:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2273,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2258,
																"src": "421:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "416:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 2275,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "424:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 2271,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "408:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "408:46:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2277,
												"nodeType": "ExpressionStatement",
												"src": "408:46:9"
											},
											{
												"expression": {
													"id": 2278,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2266,
													"src": "474:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2264,
												"id": 2279,
												"nodeType": "Return",
												"src": "467:8:9"
											}
										]
									},
									"documentation": {
										"id": 2256,
										"nodeType": "StructuredDocumentation",
										"src": "233:61:9",
										"text": " @dev Adds two numbers, throws on overflow."
									},
									"id": 2281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "311:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2258,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "323:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2281,
												"src": "315:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "315:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2260,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "334:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2281,
												"src": "326:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "326:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "314:22:9"
									},
									"returnParameters": {
										"id": 2264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2281,
												"src": "360:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "360:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "359:9:9"
									},
									"scope": 2445,
									"src": "302:181:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2297,
										"nodeType": "Block",
										"src": "677:69:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2292,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2284,
															"src": "699:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2293,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2286,
															"src": "702:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 2294,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "705:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 2291,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2298,
															2325
														],
														"referencedDeclaration": 2325,
														"src": "695:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 2295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "695:43:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2290,
												"id": 2296,
												"nodeType": "Return",
												"src": "688:50:9"
											}
										]
									},
									"documentation": {
										"id": 2282,
										"nodeType": "StructuredDocumentation",
										"src": "491:111:9",
										"text": " @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend)."
									},
									"id": 2298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "619:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2284,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "631:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "623:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "623:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2286,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "642:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "634:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "622:22:9"
									},
									"returnParameters": {
										"id": 2290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2289,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "668:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "667:9:9"
									},
									"scope": 2445,
									"src": "610:136:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2324,
										"nodeType": "Block",
										"src": "849:97:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2310,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2302,
																"src": "868:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2311,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2300,
																"src": "873:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "868:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2313,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2304,
															"src": "876:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2309,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "860:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "860:29:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2315,
												"nodeType": "ExpressionStatement",
												"src": "860:29:9"
											},
											{
												"assignments": [
													2317
												],
												"declarations": [
													{
														"constant": false,
														"id": 2317,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "908:1:9",
														"nodeType": "VariableDeclaration",
														"scope": 2324,
														"src": "900:9:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2316,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "900:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2321,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2318,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2300,
														"src": "912:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 2319,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2302,
														"src": "916:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "912:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "900:17:9"
											},
											{
												"expression": {
													"id": 2322,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2317,
													"src": "937:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2308,
												"id": 2323,
												"nodeType": "Return",
												"src": "930:8:9"
											}
										]
									},
									"id": 2325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "763:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2300,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "775:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2325,
												"src": "767:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "767:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2302,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "786:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2325,
												"src": "778:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "778:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2304,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "803:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 2325,
												"src": "789:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2303,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "766:50:9"
									},
									"returnParameters": {
										"id": 2308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2307,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2325,
												"src": "840:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "840:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "839:9:9"
									},
									"scope": 2445,
									"src": "754:192:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2359,
										"nodeType": "Block",
										"src": "1096:183:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2335,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2328,
														"src": "1111:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2336,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1116:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1111:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2341,
												"nodeType": "IfStatement",
												"src": "1107:47:9",
												"trueBody": {
													"id": 2340,
													"nodeType": "Block",
													"src": "1119:35:9",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2338,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1141:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2334,
															"id": 2339,
															"nodeType": "Return",
															"src": "1134:8:9"
														}
													]
												}
											},
											{
												"assignments": [
													2343
												],
												"declarations": [
													{
														"constant": false,
														"id": 2343,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1174:1:9",
														"nodeType": "VariableDeclaration",
														"scope": 2359,
														"src": "1166:9:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2342,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1166:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2347,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2344,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2328,
														"src": "1178:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 2345,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2330,
														"src": "1182:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1178:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1166:17:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2349,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2343,
																	"src": "1202:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2350,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2328,
																	"src": "1206:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1202:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2352,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2330,
																"src": "1211:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1202:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 2354,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1214:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 2348,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1194:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1194:56:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2356,
												"nodeType": "ExpressionStatement",
												"src": "1194:56:9"
											},
											{
												"expression": {
													"id": 2357,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2343,
													"src": "1270:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2334,
												"id": 2358,
												"nodeType": "Return",
												"src": "1263:8:9"
											}
										]
									},
									"documentation": {
										"id": 2326,
										"nodeType": "StructuredDocumentation",
										"src": "954:67:9",
										"text": " @dev Multiplies two numbers, throws on overflow."
									},
									"id": 2360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "1038:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2328,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1050:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2360,
												"src": "1042:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2330,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1061:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2360,
												"src": "1053:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1053:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:22:9"
									},
									"returnParameters": {
										"id": 2334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2360,
												"src": "1087:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1087:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1086:9:9"
									},
									"scope": 2445,
									"src": "1029:250:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2376,
										"nodeType": "Block",
										"src": "1443:65:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2371,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2363,
															"src": "1465:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2372,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2365,
															"src": "1468:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 2373,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1471:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 2370,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2377,
															2404
														],
														"referencedDeclaration": 2404,
														"src": "1461:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 2374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1461:39:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2369,
												"id": 2375,
												"nodeType": "Return",
												"src": "1454:46:9"
											}
										]
									},
									"documentation": {
										"id": 2361,
										"nodeType": "StructuredDocumentation",
										"src": "1287:81:9",
										"text": " @dev Integer division of two numbers, truncating the quotient."
									},
									"id": 2377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "1385:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2363,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1397:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2377,
												"src": "1389:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1389:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2365,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1408:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2377,
												"src": "1400:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1400:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1388:22:9"
									},
									"returnParameters": {
										"id": 2369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2377,
												"src": "1434:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1434:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1433:9:9"
									},
									"scope": 2445,
									"src": "1376:132:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2403,
										"nodeType": "Block",
										"src": "1611:94:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2389,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2381,
																"src": "1630:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2390,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1634:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1630:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2392,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2383,
															"src": "1637:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2388,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1622:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1622:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2394,
												"nodeType": "ExpressionStatement",
												"src": "1622:28:9"
											},
											{
												"assignments": [
													2396
												],
												"declarations": [
													{
														"constant": false,
														"id": 2396,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1669:1:9",
														"nodeType": "VariableDeclaration",
														"scope": 2403,
														"src": "1661:9:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2395,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1661:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2400,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2397,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2379,
														"src": "1673:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2398,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2381,
														"src": "1677:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1673:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1661:17:9"
											},
											{
												"expression": {
													"id": 2401,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2396,
													"src": "1696:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2387,
												"id": 2402,
												"nodeType": "Return",
												"src": "1689:8:9"
											}
										]
									},
									"id": 2404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "1525:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2379,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1537:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2404,
												"src": "1529:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1529:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2381,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1548:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2404,
												"src": "1540:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1540:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2383,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "1565:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 2404,
												"src": "1551:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2382,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1551:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1528:50:9"
									},
									"returnParameters": {
										"id": 2387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2386,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2404,
												"src": "1602:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1601:9:9"
									},
									"scope": 2445,
									"src": "1516:189:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2420,
										"nodeType": "Block",
										"src": "1868:63:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2415,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2407,
															"src": "1890:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2416,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2409,
															"src": "1893:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 2417,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1896:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 2414,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2421,
															2444
														],
														"referencedDeclaration": 2444,
														"src": "1886:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 2418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1886:37:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2413,
												"id": 2419,
												"nodeType": "Return",
												"src": "1879:44:9"
											}
										]
									},
									"documentation": {
										"id": 2405,
										"nodeType": "StructuredDocumentation",
										"src": "1713:80:9",
										"text": " @dev Integer modulo of two numbers, truncating the remainder."
									},
									"id": 2421,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "1810:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2407,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1822:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2421,
												"src": "1814:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1814:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2409,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1833:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2421,
												"src": "1825:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1825:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1813:22:9"
									},
									"returnParameters": {
										"id": 2413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2412,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2421,
												"src": "1859:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1859:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1858:9:9"
									},
									"scope": 2445,
									"src": "1801:130:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2443,
										"nodeType": "Block",
										"src": "2034:71:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2433,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2425,
																"src": "2053:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2434,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2058:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2053:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2436,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2427,
															"src": "2061:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2432,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2045:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2045:29:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2438,
												"nodeType": "ExpressionStatement",
												"src": "2045:29:9"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2439,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2423,
														"src": "2092:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 2440,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2425,
														"src": "2096:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2092:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2431,
												"id": 2442,
												"nodeType": "Return",
												"src": "2085:12:9"
											}
										]
									},
									"id": 2444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "1948:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2423,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1960:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2444,
												"src": "1952:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1952:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2425,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1971:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2444,
												"src": "1963:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1963:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2427,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "1988:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 2444,
												"src": "1974:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2426,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1974:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1951:50:9"
									},
									"returnParameters": {
										"id": 2431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2430,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2444,
												"src": "2025:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:9:9"
									},
									"scope": 2445,
									"src": "1939:166:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2446,
							"src": "207:1901:9",
							"usedErrors": []
						}
					],
					"src": "85:2023:9"
				},
				"id": 9
			},
			"contracts/External/Strings.sol": {
				"ast": {
					"absolutePath": "contracts/External/Strings.sol",
					"exportedSymbols": {
						"Strings": [
							2671
						]
					},
					"id": 2672,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2447,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "85:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2448,
								"nodeType": "StructuredDocumentation",
								"src": "112:36:10",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 2671,
							"linearizedBaseContracts": [
								2671
							],
							"name": "Strings",
							"nameLocation": "158:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2451,
									"mutability": "constant",
									"name": "_HEX_SYMBOLS",
									"nameLocation": "198:12:10",
									"nodeType": "VariableDeclaration",
									"scope": 2671,
									"src": "173:58:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 2449,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "173:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 2450,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "213:18:10",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 2454,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "261:15:10",
									"nodeType": "VariableDeclaration",
									"scope": 2671,
									"src": "238:43:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2452,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "238:5:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 2453,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "279:2:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2532,
										"nodeType": "Block",
										"src": "459:652:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2462,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2457,
														"src": "665:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2463,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "674:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "665:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2468,
												"nodeType": "IfStatement",
												"src": "661:53:10",
												"trueBody": {
													"id": 2467,
													"nodeType": "Block",
													"src": "677:37:10",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2465,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "699:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 2461,
															"id": 2466,
															"nodeType": "Return",
															"src": "692:10:10"
														}
													]
												}
											},
											{
												"assignments": [
													2470
												],
												"declarations": [
													{
														"constant": false,
														"id": 2470,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "732:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 2532,
														"src": "724:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2469,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "724:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2472,
												"initialValue": {
													"id": 2471,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2457,
													"src": "739:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "724:20:10"
											},
											{
												"assignments": [
													2474
												],
												"declarations": [
													{
														"constant": false,
														"id": 2474,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "763:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2532,
														"src": "755:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2473,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "755:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2475,
												"nodeType": "VariableDeclarationStatement",
												"src": "755:14:10"
											},
											{
												"body": {
													"id": 2486,
													"nodeType": "Block",
													"src": "798:60:10",
													"statements": [
														{
															"expression": {
																"id": 2480,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "813:8:10",
																"subExpression": {
																	"id": 2479,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2474,
																	"src": "813:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2481,
															"nodeType": "ExpressionStatement",
															"src": "813:8:10"
														},
														{
															"expression": {
																"id": 2484,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2482,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2470,
																	"src": "836:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 2483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "844:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "836:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2485,
															"nodeType": "ExpressionStatement",
															"src": "836:10:10"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2476,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2470,
														"src": "787:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2477,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "795:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "787:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2487,
												"nodeType": "WhileStatement",
												"src": "780:78:10"
											},
											{
												"assignments": [
													2489
												],
												"declarations": [
													{
														"constant": false,
														"id": 2489,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "881:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2532,
														"src": "868:19:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2488,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "868:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2494,
												"initialValue": {
													"arguments": [
														{
															"id": 2492,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2474,
															"src": "900:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2491,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "890:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 2490,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "894:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 2493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "890:17:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "868:39:10"
											},
											{
												"body": {
													"id": 2525,
													"nodeType": "Block",
													"src": "937:135:10",
													"statements": [
														{
															"expression": {
																"id": 2500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2498,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2474,
																	"src": "952:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "962:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "952:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2501,
															"nodeType": "ExpressionStatement",
															"src": "952:11:10"
														},
														{
															"expression": {
																"id": 2519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2502,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2489,
																		"src": "978:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2504,
																	"indexExpression": {
																		"id": 2503,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2474,
																		"src": "985:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "978:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2516,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 2509,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1008:2:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2514,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2512,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2457,
																									"src": "1021:5:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 2513,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "1029:2:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "1021:10:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 2511,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1013:7:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 2510,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "1013:7:10",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 2515,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1013:19:10",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "1008:24:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1002:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 2507,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "1002:5:10",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2517,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1002:31:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 2506,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "995:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 2505,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "995:6:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "995:39:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "978:56:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 2520,
															"nodeType": "ExpressionStatement",
															"src": "978:56:10"
														},
														{
															"expression": {
																"id": 2523,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2521,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2457,
																	"src": "1049:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 2522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1058:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "1049:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2524,
															"nodeType": "ExpressionStatement",
															"src": "1049:11:10"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2495,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2457,
														"src": "925:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "934:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "925:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2526,
												"nodeType": "WhileStatement",
												"src": "918:154:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2529,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2489,
															"src": "1096:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2528,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1089:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2527,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1089:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 2530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1089:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2461,
												"id": 2531,
												"nodeType": "Return",
												"src": "1082:21:10"
											}
										]
									},
									"documentation": {
										"id": 2455,
										"nodeType": "StructuredDocumentation",
										"src": "290:92:10",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 2533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "397:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "414:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2533,
												"src": "406:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:15:10"
									},
									"returnParameters": {
										"id": 2461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2533,
												"src": "444:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2459,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "444:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "443:15:10"
									},
									"scope": 2671,
									"src": "388:723:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2573,
										"nodeType": "Block",
										"src": "1295:266:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2541,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2536,
														"src": "1310:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2542,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1319:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1310:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2547,
												"nodeType": "IfStatement",
												"src": "1306:56:10",
												"trueBody": {
													"id": 2546,
													"nodeType": "Block",
													"src": "1322:40:10",
													"statements": [
														{
															"expression": {
																"hexValue": "30783030",
																"id": 2544,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1344:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"typeString": "literal_string \"0x00\""
																},
																"value": "0x00"
															},
															"functionReturnParameters": 2540,
															"id": 2545,
															"nodeType": "Return",
															"src": "1337:13:10"
														}
													]
												}
											},
											{
												"assignments": [
													2549
												],
												"declarations": [
													{
														"constant": false,
														"id": 2549,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "1380:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 2573,
														"src": "1372:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2548,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1372:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2551,
												"initialValue": {
													"id": 2550,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2536,
													"src": "1387:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1372:20:10"
											},
											{
												"assignments": [
													2553
												],
												"declarations": [
													{
														"constant": false,
														"id": 2553,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1411:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2573,
														"src": "1403:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2552,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1403:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2555,
												"initialValue": {
													"hexValue": "30",
													"id": 2554,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1420:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1403:18:10"
											},
											{
												"body": {
													"id": 2566,
													"nodeType": "Block",
													"src": "1450:60:10",
													"statements": [
														{
															"expression": {
																"id": 2560,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1465:8:10",
																"subExpression": {
																	"id": 2559,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2553,
																	"src": "1465:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2561,
															"nodeType": "ExpressionStatement",
															"src": "1465:8:10"
														},
														{
															"expression": {
																"id": 2564,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2562,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2549,
																	"src": "1488:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 2563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1497:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1488:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2565,
															"nodeType": "ExpressionStatement",
															"src": "1488:10:10"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2556,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2549,
														"src": "1439:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2557,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1447:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1439:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2567,
												"nodeType": "WhileStatement",
												"src": "1432:78:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2569,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2536,
															"src": "1539:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2570,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2553,
															"src": "1546:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2568,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2574,
															2650,
															2670
														],
														"referencedDeclaration": 2650,
														"src": "1527:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 2571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1527:26:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2540,
												"id": 2572,
												"nodeType": "Return",
												"src": "1520:33:10"
											}
										]
									},
									"documentation": {
										"id": 2534,
										"nodeType": "StructuredDocumentation",
										"src": "1119:96:10",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 2574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1230:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1250:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2574,
												"src": "1242:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1242:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1241:15:10"
									},
									"returnParameters": {
										"id": 2540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2539,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2574,
												"src": "1280:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2538,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1280:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1279:15:10"
									},
									"scope": 2671,
									"src": "1221:340:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2649,
										"nodeType": "Block",
										"src": "1779:361:10",
										"statements": [
											{
												"assignments": [
													2585
												],
												"declarations": [
													{
														"constant": false,
														"id": 2585,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1803:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2649,
														"src": "1790:19:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2584,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1790:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2594,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1822:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2589,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2579,
																	"src": "1826:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1822:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 2591,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1835:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1822:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2587,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1812:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 2586,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1816:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 2593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1812:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1790:47:10"
											},
											{
												"expression": {
													"id": 2599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2595,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2585,
															"src": "1848:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2597,
														"indexExpression": {
															"hexValue": "30",
															"id": 2596,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1855:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1848:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2598,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1860:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1848:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2600,
												"nodeType": "ExpressionStatement",
												"src": "1848:15:10"
											},
											{
												"expression": {
													"id": 2605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2601,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2585,
															"src": "1874:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2603,
														"indexExpression": {
															"hexValue": "31",
															"id": 2602,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1881:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1874:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 2604,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1886:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1874:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2606,
												"nodeType": "ExpressionStatement",
												"src": "1874:15:10"
											},
											{
												"body": {
													"id": 2635,
													"nodeType": "Block",
													"src": "1945:90:10",
													"statements": [
														{
															"expression": {
																"id": 2629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2621,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2585,
																		"src": "1960:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2623,
																	"indexExpression": {
																		"id": 2622,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2608,
																		"src": "1967:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1960:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2624,
																		"name": "_HEX_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2451,
																		"src": "1972:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 2628,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2627,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2625,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2577,
																			"src": "1985:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 2626,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1993:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1985:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1972:25:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1960:37:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 2630,
															"nodeType": "ExpressionStatement",
															"src": "1960:37:10"
														},
														{
															"expression": {
																"id": 2633,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2631,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2577,
																	"src": "2012:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 2632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2022:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2012:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2634,
															"nodeType": "ExpressionStatement",
															"src": "2012:11:10"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2615,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2608,
														"src": "1933:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 2616,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1937:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1933:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2636,
												"initializationExpression": {
													"assignments": [
														2608
													],
													"declarations": [
														{
															"constant": false,
															"id": 2608,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1913:1:10",
															"nodeType": "VariableDeclaration",
															"scope": 2636,
															"src": "1905:9:10",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2607,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1905:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2614,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2613,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 2609,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1917:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2610,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2579,
																"src": "1921:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1917:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1930:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1917:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1905:26:10"
												},
												"loopExpression": {
													"expression": {
														"id": 2619,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1940:3:10",
														"subExpression": {
															"id": 2618,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2608,
															"src": "1942:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2620,
													"nodeType": "ExpressionStatement",
													"src": "1940:3:10"
												},
												"nodeType": "ForStatement",
												"src": "1900:135:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2638,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2577,
																"src": "2053:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2639,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2062:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2053:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 2641,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2065:34:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 2637,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2045:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2045:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2643,
												"nodeType": "ExpressionStatement",
												"src": "2045:55:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2646,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2585,
															"src": "2125:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2645,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2118:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2644,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2118:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 2647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2118:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2583,
												"id": 2648,
												"nodeType": "Return",
												"src": "2111:21:10"
											}
										]
									},
									"documentation": {
										"id": 2575,
										"nodeType": "StructuredDocumentation",
										"src": "1569:114:10",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 2650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1698:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2577,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1718:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2650,
												"src": "1710:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1710:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2579,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1733:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2650,
												"src": "1725:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1725:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1709:31:10"
									},
									"returnParameters": {
										"id": 2583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2582,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2650,
												"src": "1764:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2581,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1764:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1763:15:10"
									},
									"scope": 2671,
									"src": "1689:451:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2669,
										"nodeType": "Block",
										"src": "2370:78:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2663,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2653,
																			"src": "2416:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2662,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2408:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 2661,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2408:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2664,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2408:13:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 2660,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2400:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2659,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2400:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2400:22:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2666,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2454,
															"src": "2424:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 2658,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2574,
															2650,
															2670
														],
														"referencedDeclaration": 2650,
														"src": "2388:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 2667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2388:52:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2657,
												"id": 2668,
												"nodeType": "Return",
												"src": "2381:59:10"
											}
										]
									},
									"documentation": {
										"id": 2651,
										"nodeType": "StructuredDocumentation",
										"src": "2148:143:10",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 2670,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2306:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2653,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2326:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2670,
												"src": "2318:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2318:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2317:14:10"
									},
									"returnParameters": {
										"id": 2657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2656,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2670,
												"src": "2355:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2655,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2355:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2354:15:10"
									},
									"scope": 2671,
									"src": "2297:151:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2672,
							"src": "150:2301:10",
							"usedErrors": []
						}
					],
					"src": "85:2366:10"
				},
				"id": 10
			}
		}
	}
}